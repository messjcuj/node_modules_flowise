{"ast":null,"code":"import{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction}from'store/actions';import moment from'moment';// material-ui\nimport{Button,Box,Stack,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Toolbar,TextField,InputAdornment,ButtonGroup,Chip}from'@mui/material';import{useTheme}from'@mui/material/styles';// project imports\nimport MainCard from'ui-component/cards/MainCard';import{StyledButton}from'ui-component/button/StyledButton';import ConfirmDialog from'ui-component/dialog/ConfirmDialog';// API\nimport variablesApi from'api/variables';// Hooks\nimport useApi from'hooks/useApi';import useConfirm from'hooks/useConfirm';// utils\nimport useNotifier from'utils/useNotifier';// Icons\nimport{IconTrash,IconEdit,IconX,IconPlus,IconSearch,IconVariable}from'@tabler/icons';import VariablesEmptySVG from'assets/images/variables_empty.svg';// const\nimport AddEditVariableDialog from'./AddEditVariableDialog';import HowToUseVariablesDialog from'./HowToUseVariablesDialog';// ==============================|| Credentials ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Variables=()=>{const theme=useTheme();const customization=useSelector(state=>state.customization);const dispatch=useDispatch();useNotifier();const enqueueSnackbar=function(){return dispatch(enqueueSnackbarAction(...arguments));};const closeSnackbar=function(){return dispatch(closeSnackbarAction(...arguments));};const[showVariableDialog,setShowVariableDialog]=useState(false);const[variableDialogProps,setVariableDialogProps]=useState({});const[variables,setVariables]=useState([]);const[showHowToDialog,setShowHowToDialog]=useState(false);const{confirm}=useConfirm();const getAllVariables=useApi(variablesApi.getAllVariables);const[search,setSearch]=useState('');const onSearchChange=event=>{setSearch(event.target.value);};function filterVariables(data){return data.name.toLowerCase().indexOf(search.toLowerCase())>-1;}const addNew=()=>{const dialogProp={type:'ADD',cancelButtonName:'Cancel',confirmButtonName:'Add',data:{}};setVariableDialogProps(dialogProp);setShowVariableDialog(true);};const edit=variable=>{const dialogProp={type:'EDIT',cancelButtonName:'Cancel',confirmButtonName:'Save',data:variable};setVariableDialogProps(dialogProp);setShowVariableDialog(true);};const deleteVariable=async variable=>{const confirmPayload={title:\"Delete\",description:\"Delete variable \".concat(variable.name,\"?\"),confirmButtonName:'Delete',cancelButtonName:'Cancel'};const isConfirmed=await confirm(confirmPayload);if(isConfirmed){try{const deleteResp=await variablesApi.deleteVariable(variable.id);if(deleteResp.data){enqueueSnackbar({message:'Variable deleted',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm();}}catch(error){var _error$response,_error$response2,_error$response3;const errorData=((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||\"\".concat((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status,\": \").concat((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.statusText);enqueueSnackbar({message:\"Failed to delete Variable: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});}}};const onConfirm=()=>{setShowVariableDialog(false);getAllVariables.request();};useEffect(()=>{getAllVariables.request();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{if(getAllVariables.data){setVariables(getAllVariables.data);}},[getAllVariables.data]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MainCard,{sx:{background:customization.isDarkMode?theme.palette.common.black:''},children:[/*#__PURE__*/_jsx(Stack,{flexDirection:\"row\",children:/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1},children:/*#__PURE__*/_jsxs(Toolbar,{disableGutters:true,style:{margin:1,padding:1,paddingBottom:10,display:'flex',justifyContent:'space-between',width:'100%'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Variables\\xA0\"}),/*#__PURE__*/_jsx(TextField,{size:\"small\",sx:{display:{xs:'none',sm:'block'},ml:3},variant:\"outlined\",placeholder:\"Search variable name\",onChange:onSearchChange,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(IconSearch,{})})}}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1}}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",sx:{mr:2},onClick:()=>setShowHowToDialog(true),children:\"How To Use\"}),/*#__PURE__*/_jsx(ButtonGroup,{sx:{maxHeight:40},disableElevation:true,variant:\"contained\",\"aria-label\":\"outlined primary button group\",children:/*#__PURE__*/_jsx(ButtonGroup,{disableElevation:true,\"aria-label\":\"outlined primary button group\",children:/*#__PURE__*/_jsx(StyledButton,{variant:\"contained\",sx:{color:'white',mr:1,height:37},onClick:addNew,startIcon:/*#__PURE__*/_jsx(IconPlus,{}),children:\"Add Variable\"})})})]})})}),variables.length===0&&/*#__PURE__*/_jsxs(Stack,{sx:{alignItems:'center',justifyContent:'center'},flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,height:'auto'},children:/*#__PURE__*/_jsx(\"img\",{style:{objectFit:'cover',height:'30vh',width:'auto'},src:VariablesEmptySVG,alt:\"VariablesEmptySVG\"})}),/*#__PURE__*/_jsx(\"div\",{children:\"No Variables Yet\"})]}),variables.length>0&&/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Value\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Updated\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Created\"}),/*#__PURE__*/_jsx(TableCell,{children:\" \"}),/*#__PURE__*/_jsx(TableCell,{children:\" \"})]})}),/*#__PURE__*/_jsx(TableBody,{children:variables.filter(filterVariables).map((variable,index)=>/*#__PURE__*/_jsxs(TableRow,{sx:{'&:last-child td, &:last-child th':{border:0}},children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:25,height:25,marginRight:10,borderRadius:'50%'},children:/*#__PURE__*/_jsx(IconVariable,{style:{width:'100%',height:'100%',borderRadius:'50%',objectFit:'contain'}})}),variable.name]})}),/*#__PURE__*/_jsx(TableCell,{children:variable.value}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{color:variable.type==='static'?'info':'secondary',size:\"small\",label:variable.type})}),/*#__PURE__*/_jsx(TableCell,{children:moment(variable.updatedDate).format('DD-MMM-YY')}),/*#__PURE__*/_jsx(TableCell,{children:moment(variable.createdDate).format('DD-MMM-YY')}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(IconButton,{title:\"Edit\",color:\"primary\",onClick:()=>edit(variable),children:/*#__PURE__*/_jsx(IconEdit,{})})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(IconButton,{title:\"Delete\",color:\"error\",onClick:()=>deleteVariable(variable),children:/*#__PURE__*/_jsx(IconTrash,{})})})]},index))})]})})]}),/*#__PURE__*/_jsx(AddEditVariableDialog,{show:showVariableDialog,dialogProps:variableDialogProps,onCancel:()=>setShowVariableDialog(false),onConfirm:onConfirm}),/*#__PURE__*/_jsx(HowToUseVariablesDialog,{show:showHowToDialog,onCancel:()=>setShowHowToDialog(false)}),/*#__PURE__*/_jsx(ConfirmDialog,{})]});};export default Variables;","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","moment","Button","Box","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Toolbar","TextField","InputAdornment","ButtonGroup","Chip","useTheme","MainCard","StyledButton","ConfirmDialog","variablesApi","useApi","useConfirm","useNotifier","IconTrash","IconEdit","IconX","IconPlus","IconSearch","IconVariable","VariablesEmptySVG","AddEditVariableDialog","HowToUseVariablesDialog","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Variables","theme","customization","state","dispatch","arguments","showVariableDialog","setShowVariableDialog","variableDialogProps","setVariableDialogProps","variables","setVariables","showHowToDialog","setShowHowToDialog","confirm","getAllVariables","search","setSearch","onSearchChange","event","target","value","filterVariables","data","name","toLowerCase","indexOf","addNew","dialogProp","type","cancelButtonName","confirmButtonName","edit","variable","deleteVariable","confirmPayload","title","description","concat","isConfirmed","deleteResp","id","message","options","key","Date","getTime","Math","random","variant","action","style","color","onClick","children","onConfirm","error","_error$response","_error$response2","_error$response3","errorData","response","status","statusText","persist","request","sx","background","isDarkMode","palette","common","black","flexDirection","flexGrow","disableGutters","margin","padding","paddingBottom","display","justifyContent","width","size","xs","sm","ml","placeholder","onChange","InputProps","startAdornment","position","mr","maxHeight","disableElevation","height","startIcon","length","alignItems","p","objectFit","src","alt","component","minWidth","filter","map","index","border","scope","marginRight","borderRadius","label","updatedDate","format","createdDate","show","dialogProps","onCancel"],"sources":["D:/Flowise/packages/ui/src/views/variables/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\r\nimport moment from 'moment'\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Box,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n    Toolbar,\r\n    TextField,\r\n    InputAdornment,\r\n    ButtonGroup,\r\n    Chip\r\n} from '@mui/material'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\r\n\r\n// API\r\nimport variablesApi from 'api/variables'\r\n\r\n// Hooks\r\nimport useApi from 'hooks/useApi'\r\nimport useConfirm from 'hooks/useConfirm'\r\n\r\n// utils\r\nimport useNotifier from 'utils/useNotifier'\r\n\r\n// Icons\r\nimport { IconTrash, IconEdit, IconX, IconPlus, IconSearch, IconVariable } from '@tabler/icons'\r\nimport VariablesEmptySVG from 'assets/images/variables_empty.svg'\r\n\r\n// const\r\nimport AddEditVariableDialog from './AddEditVariableDialog'\r\nimport HowToUseVariablesDialog from './HowToUseVariablesDialog'\r\n\r\n// ==============================|| Credentials ||============================== //\r\n\r\nconst Variables = () => {\r\n    const theme = useTheme()\r\n    const customization = useSelector((state) => state.customization)\r\n\r\n    const dispatch = useDispatch()\r\n    useNotifier()\r\n\r\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\r\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\r\n\r\n    const [showVariableDialog, setShowVariableDialog] = useState(false)\r\n    const [variableDialogProps, setVariableDialogProps] = useState({})\r\n    const [variables, setVariables] = useState([])\r\n    const [showHowToDialog, setShowHowToDialog] = useState(false)\r\n\r\n    const { confirm } = useConfirm()\r\n\r\n    const getAllVariables = useApi(variablesApi.getAllVariables)\r\n\r\n    const [search, setSearch] = useState('')\r\n    const onSearchChange = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n    function filterVariables(data) {\r\n        return data.name.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n    }\r\n\r\n    const addNew = () => {\r\n        const dialogProp = {\r\n            type: 'ADD',\r\n            cancelButtonName: 'Cancel',\r\n            confirmButtonName: 'Add',\r\n            data: {}\r\n        }\r\n        setVariableDialogProps(dialogProp)\r\n        setShowVariableDialog(true)\r\n    }\r\n\r\n    const edit = (variable) => {\r\n        const dialogProp = {\r\n            type: 'EDIT',\r\n            cancelButtonName: 'Cancel',\r\n            confirmButtonName: 'Save',\r\n            data: variable\r\n        }\r\n        setVariableDialogProps(dialogProp)\r\n        setShowVariableDialog(true)\r\n    }\r\n\r\n    const deleteVariable = async (variable) => {\r\n        const confirmPayload = {\r\n            title: `Delete`,\r\n            description: `Delete variable ${variable.name}?`,\r\n            confirmButtonName: 'Delete',\r\n            cancelButtonName: 'Cancel'\r\n        }\r\n        const isConfirmed = await confirm(confirmPayload)\r\n\r\n        if (isConfirmed) {\r\n            try {\r\n                const deleteResp = await variablesApi.deleteVariable(variable.id)\r\n                if (deleteResp.data) {\r\n                    enqueueSnackbar({\r\n                        message: 'Variable deleted',\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: 'success',\r\n                            action: (key) => (\r\n                                <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                    <IconX />\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    })\r\n                    onConfirm()\r\n                }\r\n            } catch (error) {\r\n                const errorData = error.response?.data || `${error.response?.status}: ${error.response?.statusText}`\r\n                enqueueSnackbar({\r\n                    message: `Failed to delete Variable: ${errorData}`,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'error',\r\n                        persist: true,\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        setShowVariableDialog(false)\r\n        getAllVariables.request()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllVariables.request()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (getAllVariables.data) {\r\n            setVariables(getAllVariables.data)\r\n        }\r\n    }, [getAllVariables.data])\r\n\r\n    return (\r\n        <>\r\n            <MainCard sx={{ background: customization.isDarkMode ? theme.palette.common.black : '' }}>\r\n                <Stack flexDirection='row'>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                        <Toolbar\r\n                            disableGutters={true}\r\n                            style={{\r\n                                margin: 1,\r\n                                padding: 1,\r\n                                paddingBottom: 10,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                width: '100%'\r\n                            }}\r\n                        >\r\n                            <h1>Variables&nbsp;</h1>\r\n                            <TextField\r\n                                size='small'\r\n                                sx={{ display: { xs: 'none', sm: 'block' }, ml: 3 }}\r\n                                variant='outlined'\r\n                                placeholder='Search variable name'\r\n                                onChange={onSearchChange}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position='start'>\r\n                                            <IconSearch />\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Button variant='outlined' sx={{ mr: 2 }} onClick={() => setShowHowToDialog(true)}>\r\n                                How To Use\r\n                            </Button>\r\n                            <ButtonGroup\r\n                                sx={{ maxHeight: 40 }}\r\n                                disableElevation\r\n                                variant='contained'\r\n                                aria-label='outlined primary button group'\r\n                            >\r\n                                <ButtonGroup disableElevation aria-label='outlined primary button group'>\r\n                                    <StyledButton\r\n                                        variant='contained'\r\n                                        sx={{ color: 'white', mr: 1, height: 37 }}\r\n                                        onClick={addNew}\r\n                                        startIcon={<IconPlus />}\r\n                                    >\r\n                                        Add Variable\r\n                                    </StyledButton>\r\n                                </ButtonGroup>\r\n                            </ButtonGroup>\r\n                        </Toolbar>\r\n                    </Box>\r\n                </Stack>\r\n                {variables.length === 0 && (\r\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\r\n                        <Box sx={{ p: 2, height: 'auto' }}>\r\n                            <img\r\n                                style={{ objectFit: 'cover', height: '30vh', width: 'auto' }}\r\n                                src={VariablesEmptySVG}\r\n                                alt='VariablesEmptySVG'\r\n                            />\r\n                        </Box>\r\n                        <div>No Variables Yet</div>\r\n                    </Stack>\r\n                )}\r\n                {variables.length > 0 && (\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Value</TableCell>\r\n                                    <TableCell>Type</TableCell>\r\n                                    <TableCell>Last Updated</TableCell>\r\n                                    <TableCell>Created</TableCell>\r\n                                    <TableCell> </TableCell>\r\n                                    <TableCell> </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {variables.filter(filterVariables).map((variable, index) => (\r\n                                    <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                        <TableCell component='th' scope='row'>\r\n                                            <div\r\n                                                style={{\r\n                                                    display: 'flex',\r\n                                                    flexDirection: 'row',\r\n                                                    alignItems: 'center'\r\n                                                }}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: 25,\r\n                                                        height: 25,\r\n                                                        marginRight: 10,\r\n                                                        borderRadius: '50%'\r\n                                                    }}\r\n                                                >\r\n                                                    <IconVariable\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            height: '100%',\r\n                                                            borderRadius: '50%',\r\n                                                            objectFit: 'contain'\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                {variable.name}\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell>{variable.value}</TableCell>\r\n                                        <TableCell>\r\n                                            <Chip\r\n                                                color={variable.type === 'static' ? 'info' : 'secondary'}\r\n                                                size='small'\r\n                                                label={variable.type}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell>{moment(variable.updatedDate).format('DD-MMM-YY')}</TableCell>\r\n                                        <TableCell>{moment(variable.createdDate).format('DD-MMM-YY')}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton title='Edit' color='primary' onClick={() => edit(variable)}>\r\n                                                <IconEdit />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton title='Delete' color='error' onClick={() => deleteVariable(variable)}>\r\n                                                <IconTrash />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </MainCard>\r\n            <AddEditVariableDialog\r\n                show={showVariableDialog}\r\n                dialogProps={variableDialogProps}\r\n                onCancel={() => setShowVariableDialog(false)}\r\n                onConfirm={onConfirm}\r\n            ></AddEditVariableDialog>\r\n            <HowToUseVariablesDialog show={showHowToDialog} onCancel={() => setShowHowToDialog(false)}></HowToUseVariablesDialog>\r\n            <ConfirmDialog />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Variables\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}