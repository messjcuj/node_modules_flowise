{"ast":null,"code":"import{Handle,Position,useUpdateNodeInternals}from'reactflow';import{useEffect,useRef,useState,useContext}from'react';import{useSelector}from'react-redux';// material-ui\nimport{useTheme,styled}from'@mui/material/styles';import{Box,Typography,Tooltip,IconButton,Button}from'@mui/material';import IconAutoFixHigh from'@mui/icons-material/AutoFixHigh';import{tooltipClasses}from'@mui/material/Tooltip';import{IconArrowsMaximize,IconEdit,IconAlertTriangle}from'@tabler/icons';// project import\nimport{Dropdown}from'ui-component/dropdown/Dropdown';import{MultiDropdown}from'ui-component/dropdown/MultiDropdown';import{AsyncDropdown}from'ui-component/dropdown/AsyncDropdown';import{Input}from'ui-component/input/Input';import{DataGrid}from'ui-component/grid/DataGrid';import{File}from'ui-component/file/File';import{SwitchInput}from'ui-component/switch/Switch';import{flowContext}from'store/context/ReactFlowContext';import{isValidConnection}from'utils/genericHelper';import{JsonEditorInput}from'ui-component/json/JsonEditor';import{TooltipWithParser}from'ui-component/tooltip/TooltipWithParser';import{CodeEditor}from'ui-component/editor/CodeEditor';import ToolDialog from'views/tools/ToolDialog';import AssistantDialog from'views/assistants/AssistantDialog';import ExpandTextDialog from'ui-component/dialog/ExpandTextDialog';import FormatPromptValuesDialog from'ui-component/dialog/FormatPromptValuesDialog';import PromptLangsmithHubDialog from'ui-component/dialog/PromptLangsmithHubDialog';import ManageScrapedLinksDialog from'ui-component/dialog/ManageScrapedLinksDialog';import CredentialInputHandler from'./CredentialInputHandler';// utils\nimport{getInputVariables}from'utils/genericHelper';// const\nimport{FLOWISE_CREDENTIAL_ID}from'store/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const EDITABLE_OPTIONS=['selectedTool','selectedAssistant'];const CustomWidthTooltip=styled(_ref=>{let{className,...props}=_ref;return/*#__PURE__*/_jsx(Tooltip,{...props,classes:{popper:className}});})({[\"& .\".concat(tooltipClasses.tooltip)]:{maxWidth:500}});// ===========================|| NodeInputHandler ||=========================== //\nconst NodeInputHandler=_ref2=>{var _ref4,_data$inputs$inputPar2,_ref5,_data$inputs$inputPar3,_ref6,_data$inputs$inputPar4,_ref7,_data$inputs$inputPar5,_ref8,_data$inputs$inputPar6,_ref9,_data$inputs$inputPar7,_ref10,_data$inputs$inputPar9,_ref11,_data$inputs$inputPar10,_ref12,_data$inputs$inputPar11;let{inputAnchor,inputParam,data,disabled=false,isAdditionalParams=false}=_ref2;const theme=useTheme();const customization=useSelector(state=>state.customization);const ref=useRef(null);const{reactFlowInstance}=useContext(flowContext);const updateNodeInternals=useUpdateNodeInternals();const[position,setPosition]=useState(0);const[showExpandDialog,setShowExpandDialog]=useState(false);const[expandDialogProps,setExpandDialogProps]=useState({});const[showAsyncOptionDialog,setAsyncOptionEditDialog]=useState('');const[asyncOptionEditDialogProps,setAsyncOptionEditDialogProps]=useState({});const[reloadTimestamp,setReloadTimestamp]=useState(Date.now().toString());const[showFormatPromptValuesDialog,setShowFormatPromptValuesDialog]=useState(false);const[formatPromptValuesDialogProps,setFormatPromptValuesDialogProps]=useState({});const[showPromptHubDialog,setShowPromptHubDialog]=useState(false);const[showManageScrapedLinksDialog,setShowManageScrapedLinksDialog]=useState(false);const[manageScrapedLinksDialogProps,setManageScrapedLinksDialogProps]=useState({});const onExpandDialogClicked=(value,inputParam)=>{const dialogProps={value,inputParam,disabled,confirmButtonName:'Save',cancelButtonName:'Cancel'};setExpandDialogProps(dialogProps);setShowExpandDialog(true);};const onShowPromptHubButtonClicked=()=>{setShowPromptHubDialog(true);};const onShowPromptHubButtonSubmit=templates=>{setShowPromptHubDialog(false);for(const t of templates){if(Object.prototype.hasOwnProperty.call(data.inputs,t.type)){data.inputs[t.type]=t.template;}}};const onManageLinksDialogClicked=(url,selectedLinks,relativeLinksMethod,limit)=>{const dialogProps={url,relativeLinksMethod,limit,selectedLinks,confirmButtonName:'Save',cancelButtonName:'Cancel'};setManageScrapedLinksDialogProps(dialogProps);setShowManageScrapedLinksDialog(true);};const onManageLinksDialogSave=(url,links)=>{setShowManageScrapedLinksDialog(false);data.inputs.url=url;data.inputs.selectedLinks=links;};const onEditJSONClicked=(value,inputParam)=>{// Preset values if the field is format prompt values\nlet inputValue=value;if(inputParam.name==='promptValues'&&!value){var _data$inputs$template,_data$inputs$systemMe,_data$inputs$humanMes;const obj={};const templateValue=((_data$inputs$template=data.inputs['template'])!==null&&_data$inputs$template!==void 0?_data$inputs$template:'')+((_data$inputs$systemMe=data.inputs['systemMessagePrompt'])!==null&&_data$inputs$systemMe!==void 0?_data$inputs$systemMe:'')+((_data$inputs$humanMes=data.inputs['humanMessagePrompt'])!==null&&_data$inputs$humanMes!==void 0?_data$inputs$humanMes:'');const inputVariables=getInputVariables(templateValue);for(const inputVariable of inputVariables){obj[inputVariable]='';}if(Object.keys(obj).length)inputValue=JSON.stringify(obj);}const dialogProp={value:inputValue,inputParam,nodes:reactFlowInstance.getNodes(),edges:reactFlowInstance.getEdges(),nodeId:data.id};setFormatPromptValuesDialogProps(dialogProp);setShowFormatPromptValuesDialog(true);};const onExpandDialogSave=(newValue,inputParamName)=>{setShowExpandDialog(false);data.inputs[inputParamName]=newValue;};const editAsyncOption=(inputParamName,inputValue)=>{if(inputParamName==='selectedTool'){setAsyncOptionEditDialogProps({title:'Edit Tool',type:'EDIT',cancelButtonName:'Cancel',confirmButtonName:'Save',toolId:inputValue});}else if(inputParamName==='selectedAssistant'){setAsyncOptionEditDialogProps({title:'Edit Assistant',type:'EDIT',cancelButtonName:'Cancel',confirmButtonName:'Save',assistantId:inputValue});}setAsyncOptionEditDialog(inputParamName);};const addAsyncOption=inputParamName=>{if(inputParamName==='selectedTool'){setAsyncOptionEditDialogProps({title:'Add New Tool',type:'ADD',cancelButtonName:'Cancel',confirmButtonName:'Add'});}else if(inputParamName==='selectedAssistant'){setAsyncOptionEditDialogProps({title:'Add New Assistant',type:'ADD',cancelButtonName:'Cancel',confirmButtonName:'Add'});}setAsyncOptionEditDialog(inputParamName);};const onConfirmAsyncOption=function(){let selectedOptionId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';if(!selectedOptionId){data.inputs[showAsyncOptionDialog]='';}else{data.inputs[showAsyncOptionDialog]=selectedOptionId;setReloadTimestamp(Date.now().toString());}setAsyncOptionEditDialogProps({});setAsyncOptionEditDialog('');};useEffect(()=>{if(ref.current&&ref.current.offsetTop&&ref.current.clientHeight){setPosition(ref.current.offsetTop+ref.current.clientHeight/2);updateNodeInternals(data.id);}},[data.id,ref,updateNodeInternals]);useEffect(()=>{updateNodeInternals(data.id);},[data.id,position,updateNodeInternals]);return/*#__PURE__*/_jsxs(\"div\",{ref:ref,children:[inputAnchor&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomWidthTooltip,{placement:\"left\",title:inputAnchor.type,children:/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Left,id:inputAnchor.id,isValidConnection:connection=>isValidConnection(connection,reactFlowInstance),style:{height:10,width:10,backgroundColor:data.selected?theme.palette.primary.main:theme.palette.text.secondary,top:position}},inputAnchor.id)}),/*#__PURE__*/_jsx(Box,{sx:{p:2},children:/*#__PURE__*/_jsxs(Typography,{children:[inputAnchor.label,!inputAnchor.optional&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),inputAnchor.description&&/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:inputAnchor.description})]})})]}),(inputParam&&!inputParam.additionalParams||isAdditionalParams)&&/*#__PURE__*/_jsxs(_Fragment,{children:[inputParam.acceptVariable&&/*#__PURE__*/_jsx(CustomWidthTooltip,{placement:\"left\",title:inputParam.type,children:/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Left,id:inputParam.id,isValidConnection:connection=>isValidConnection(connection,reactFlowInstance),style:{height:10,width:10,backgroundColor:data.selected?theme.palette.primary.main:theme.palette.text.secondary,top:position}},inputParam.id)}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[(data.name==='promptTemplate'||data.name==='chatPromptTemplate')&&(inputParam.name==='template'||inputParam.name==='systemMessagePrompt')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{style:{display:'flex',flexDirection:'row',width:'100%'},disabled:disabled,sx:{borderRadius:25,width:'100%',mb:2,mt:0},variant:\"outlined\",onClick:()=>onShowPromptHubButtonClicked(),endIcon:/*#__PURE__*/_jsx(IconAutoFixHigh,{}),children:\"Langchain Hub\"}),/*#__PURE__*/_jsx(PromptLangsmithHubDialog,{promptType:inputParam.name,show:showPromptHubDialog,onCancel:()=>setShowPromptHubDialog(false),onSubmit:onShowPromptHubButtonSubmit})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsxs(Typography,{children:[inputParam.label,!inputParam.optional&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),inputParam.description&&/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:inputParam.description})]}),/*#__PURE__*/_jsx(\"div\",{style:{flexGrow:1}}),(inputParam.type==='string'&&inputParam.rows||inputParam.type==='code')&&/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{height:25,width:25},title:\"Expand\",color:\"primary\",onClick:()=>{var _ref3,_data$inputs$inputPar;return onExpandDialogClicked((_ref3=(_data$inputs$inputPar=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar!==void 0?_data$inputs$inputPar:inputParam.default)!==null&&_ref3!==void 0?_ref3:'',inputParam);},children:/*#__PURE__*/_jsx(IconArrowsMaximize,{})})]}),inputParam.warning&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center',borderRadius:10,background:'rgb(254,252,191)',padding:10,marginTop:10,marginBottom:10},children:[/*#__PURE__*/_jsx(IconAlertTriangle,{size:30,color:\"orange\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'rgb(116,66,16)',marginLeft:10},children:inputParam.warning})]}),inputParam.type==='credential'&&/*#__PURE__*/_jsx(CredentialInputHandler,{disabled:disabled,data:data,inputParam:inputParam,onSelect:newValue=>{data.credential=newValue;data.inputs[FLOWISE_CREDENTIAL_ID]=newValue;// in case data.credential is not updated\n}}),inputParam.type==='file'&&/*#__PURE__*/_jsx(File,{disabled:disabled,fileType:inputParam.fileType||'*',onChange:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref4=(_data$inputs$inputPar2=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar2!==void 0?_data$inputs$inputPar2:inputParam.default)!==null&&_ref4!==void 0?_ref4:'Choose a file to upload'}),inputParam.type==='boolean'&&/*#__PURE__*/_jsx(SwitchInput,{disabled:disabled,onChange:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref5=(_data$inputs$inputPar3=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar3!==void 0?_data$inputs$inputPar3:inputParam.default)!==null&&_ref5!==void 0?_ref5:false}),inputParam.type==='datagrid'&&/*#__PURE__*/_jsx(DataGrid,{disabled:disabled,columns:inputParam.datagrid,hideFooter:true,rows:(_ref6=(_data$inputs$inputPar4=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar4!==void 0?_data$inputs$inputPar4:JSON.stringify(inputParam.default))!==null&&_ref6!==void 0?_ref6:[],onChange:newValue=>data.inputs[inputParam.name]=newValue}),inputParam.type==='code'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{height:'5px'}}),/*#__PURE__*/_jsx(\"div\",{style:{height:inputParam.rows?'100px':'200px'},children:/*#__PURE__*/_jsx(CodeEditor,{disabled:disabled,value:(_ref7=(_data$inputs$inputPar5=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar5!==void 0?_data$inputs$inputPar5:inputParam.default)!==null&&_ref7!==void 0?_ref7:'',height:inputParam.rows?'100px':'200px',theme:customization.isDarkMode?'dark':'light',lang:'js',placeholder:inputParam.placeholder,onValueChange:code=>data.inputs[inputParam.name]=code,basicSetup:{highlightActiveLine:false,highlightActiveLineGutter:false}})})]}),(inputParam.type==='string'||inputParam.type==='password'||inputParam.type==='number')&&/*#__PURE__*/_jsx(Input,{disabled:disabled,inputParam:inputParam,onChange:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref8=(_data$inputs$inputPar6=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar6!==void 0?_data$inputs$inputPar6:inputParam.default)!==null&&_ref8!==void 0?_ref8:'',nodes:inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable&&reactFlowInstance?reactFlowInstance.getNodes():[],edges:inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable&&reactFlowInstance?reactFlowInstance.getEdges():[],nodeId:data.id},data.inputs[inputParam.name]),inputParam.type==='json'&&/*#__PURE__*/_jsxs(_Fragment,{children:[!(inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable)&&/*#__PURE__*/_jsx(JsonEditorInput,{disabled:disabled,onChange:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref9=(_data$inputs$inputPar7=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar7!==void 0?_data$inputs$inputPar7:inputParam.default)!==null&&_ref9!==void 0?_ref9:'',isDarkMode:customization.isDarkMode}),(inputParam===null||inputParam===void 0?void 0:inputParam.acceptVariable)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{sx:{borderRadius:25,width:'100%',mb:0,mt:2},variant:\"outlined\",disabled:disabled,onClick:()=>{var _data$inputs$inputPar8;return onEditJSONClicked((_data$inputs$inputPar8=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar8!==void 0?_data$inputs$inputPar8:'',inputParam);},children:inputParam.label}),/*#__PURE__*/_jsx(FormatPromptValuesDialog,{show:showFormatPromptValuesDialog,dialogProps:formatPromptValuesDialogProps,onCancel:()=>setShowFormatPromptValuesDialog(false),onChange:newValue=>data.inputs[inputParam.name]=newValue})]})]}),inputParam.type==='options'&&/*#__PURE__*/_jsx(Dropdown,{disabled:disabled,name:inputParam.name,options:inputParam.options,onSelect:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref10=(_data$inputs$inputPar9=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar9!==void 0?_data$inputs$inputPar9:inputParam.default)!==null&&_ref10!==void 0?_ref10:'choose an option'}),inputParam.type==='multiOptions'&&/*#__PURE__*/_jsx(MultiDropdown,{disabled:disabled,name:inputParam.name,options:inputParam.options,onSelect:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref11=(_data$inputs$inputPar10=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar10!==void 0?_data$inputs$inputPar10:inputParam.default)!==null&&_ref11!==void 0?_ref11:'choose an option'}),inputParam.type==='asyncOptions'&&/*#__PURE__*/_jsxs(_Fragment,{children:[data.inputParams.length===1&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:10}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsx(AsyncDropdown,{disabled:disabled,name:inputParam.name,nodeData:data,value:(_ref12=(_data$inputs$inputPar11=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar11!==void 0?_data$inputs$inputPar11:inputParam.default)!==null&&_ref12!==void 0?_ref12:'choose an option',isCreateNewOption:EDITABLE_OPTIONS.includes(inputParam.name),onSelect:newValue=>data.inputs[inputParam.name]=newValue,onCreateNew:()=>addAsyncOption(inputParam.name)}),EDITABLE_OPTIONS.includes(inputParam.name)&&data.inputs[inputParam.name]&&/*#__PURE__*/_jsx(IconButton,{title:\"Edit\",color:\"primary\",size:\"small\",onClick:()=>editAsyncOption(inputParam.name,data.inputs[inputParam.name]),children:/*#__PURE__*/_jsx(IconEdit,{})})]},reloadTimestamp)]}),(data.name==='cheerioWebScraper'||data.name==='puppeteerWebScraper'||data.name==='playwrightWebScraper')&&inputParam.name==='url'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{style:{display:'flex',flexDirection:'row',width:'100%'},disabled:disabled,sx:{borderRadius:'12px',width:'100%',mt:1},variant:\"outlined\",onClick:()=>{var _ref13,_data$inputs$inputPar12,_data$inputs$relative,_parseInt;return onManageLinksDialogClicked((_ref13=(_data$inputs$inputPar12=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar12!==void 0?_data$inputs$inputPar12:inputParam.default)!==null&&_ref13!==void 0?_ref13:'',data.inputs.selectedLinks,(_data$inputs$relative=data.inputs['relativeLinksMethod'])!==null&&_data$inputs$relative!==void 0?_data$inputs$relative:'webCrawl',(_parseInt=parseInt(data.inputs['limit']))!==null&&_parseInt!==void 0?_parseInt:0);},children:\"Manage Links\"}),/*#__PURE__*/_jsx(ManageScrapedLinksDialog,{show:showManageScrapedLinksDialog,dialogProps:manageScrapedLinksDialogProps,onCancel:()=>setShowManageScrapedLinksDialog(false),onSave:onManageLinksDialogSave})]})]})]}),/*#__PURE__*/_jsx(ToolDialog,{show:showAsyncOptionDialog==='selectedTool',dialogProps:asyncOptionEditDialogProps,onCancel:()=>setAsyncOptionEditDialog(''),onConfirm:onConfirmAsyncOption}),/*#__PURE__*/_jsx(AssistantDialog,{show:showAsyncOptionDialog==='selectedAssistant',dialogProps:asyncOptionEditDialogProps,onCancel:()=>setAsyncOptionEditDialog(''),onConfirm:onConfirmAsyncOption}),/*#__PURE__*/_jsx(ExpandTextDialog,{show:showExpandDialog,dialogProps:expandDialogProps,onCancel:()=>setShowExpandDialog(false),onConfirm:(newValue,inputParamName)=>onExpandDialogSave(newValue,inputParamName)})]});};export default NodeInputHandler;","map":{"version":3,"names":["Handle","Position","useUpdateNodeInternals","useEffect","useRef","useState","useContext","useSelector","useTheme","styled","Box","Typography","Tooltip","IconButton","Button","IconAutoFixHigh","tooltipClasses","IconArrowsMaximize","IconEdit","IconAlertTriangle","Dropdown","MultiDropdown","AsyncDropdown","Input","DataGrid","File","SwitchInput","flowContext","isValidConnection","JsonEditorInput","TooltipWithParser","CodeEditor","ToolDialog","AssistantDialog","ExpandTextDialog","FormatPromptValuesDialog","PromptLangsmithHubDialog","ManageScrapedLinksDialog","CredentialInputHandler","getInputVariables","FLOWISE_CREDENTIAL_ID","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EDITABLE_OPTIONS","CustomWidthTooltip","_ref","className","props","classes","popper","concat","tooltip","maxWidth","NodeInputHandler","_ref2","_ref4","_data$inputs$inputPar2","_ref5","_data$inputs$inputPar3","_ref6","_data$inputs$inputPar4","_ref7","_data$inputs$inputPar5","_ref8","_data$inputs$inputPar6","_ref9","_data$inputs$inputPar7","_ref10","_data$inputs$inputPar9","_ref11","_data$inputs$inputPar10","_ref12","_data$inputs$inputPar11","inputAnchor","inputParam","data","disabled","isAdditionalParams","theme","customization","state","ref","reactFlowInstance","updateNodeInternals","position","setPosition","showExpandDialog","setShowExpandDialog","expandDialogProps","setExpandDialogProps","showAsyncOptionDialog","setAsyncOptionEditDialog","asyncOptionEditDialogProps","setAsyncOptionEditDialogProps","reloadTimestamp","setReloadTimestamp","Date","now","toString","showFormatPromptValuesDialog","setShowFormatPromptValuesDialog","formatPromptValuesDialogProps","setFormatPromptValuesDialogProps","showPromptHubDialog","setShowPromptHubDialog","showManageScrapedLinksDialog","setShowManageScrapedLinksDialog","manageScrapedLinksDialogProps","setManageScrapedLinksDialogProps","onExpandDialogClicked","value","dialogProps","confirmButtonName","cancelButtonName","onShowPromptHubButtonClicked","onShowPromptHubButtonSubmit","templates","t","Object","prototype","hasOwnProperty","call","inputs","type","template","onManageLinksDialogClicked","url","selectedLinks","relativeLinksMethod","limit","onManageLinksDialogSave","links","onEditJSONClicked","inputValue","name","_data$inputs$template","_data$inputs$systemMe","_data$inputs$humanMes","obj","templateValue","inputVariables","inputVariable","keys","length","JSON","stringify","dialogProp","nodes","getNodes","edges","getEdges","nodeId","id","onExpandDialogSave","newValue","inputParamName","editAsyncOption","title","toolId","assistantId","addAsyncOption","onConfirmAsyncOption","selectedOptionId","arguments","undefined","current","offsetTop","clientHeight","children","placement","Left","connection","style","height","width","backgroundColor","selected","palette","primary","main","text","secondary","top","sx","p","label","optional","color","description","marginLeft","additionalParams","acceptVariable","display","flexDirection","borderRadius","mb","mt","variant","onClick","endIcon","promptType","show","onCancel","onSubmit","flexGrow","rows","size","_ref3","_data$inputs$inputPar","default","warning","alignItems","background","padding","marginTop","marginBottom","onSelect","credential","fileType","onChange","columns","datagrid","hideFooter","isDarkMode","lang","placeholder","onValueChange","code","basicSetup","highlightActiveLine","highlightActiveLineGutter","_data$inputs$inputPar8","options","inputParams","nodeData","isCreateNewOption","includes","onCreateNew","_ref13","_data$inputs$inputPar12","_data$inputs$relative","_parseInt","parseInt","onSave","onConfirm"],"sources":["D:/Flowise/packages/ui/src/views/canvas/NodeInputHandler.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport { Handle, Position, useUpdateNodeInternals } from 'reactflow'\r\nimport { useEffect, useRef, useState, useContext } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles'\r\nimport { Box, Typography, Tooltip, IconButton, Button } from '@mui/material'\r\nimport IconAutoFixHigh from '@mui/icons-material/AutoFixHigh'\r\nimport { tooltipClasses } from '@mui/material/Tooltip'\r\nimport { IconArrowsMaximize, IconEdit, IconAlertTriangle } from '@tabler/icons'\r\n\r\n// project import\r\nimport { Dropdown } from 'ui-component/dropdown/Dropdown'\r\nimport { MultiDropdown } from 'ui-component/dropdown/MultiDropdown'\r\nimport { AsyncDropdown } from 'ui-component/dropdown/AsyncDropdown'\r\nimport { Input } from 'ui-component/input/Input'\r\nimport { DataGrid } from 'ui-component/grid/DataGrid'\r\nimport { File } from 'ui-component/file/File'\r\nimport { SwitchInput } from 'ui-component/switch/Switch'\r\nimport { flowContext } from 'store/context/ReactFlowContext'\r\nimport { isValidConnection } from 'utils/genericHelper'\r\nimport { JsonEditorInput } from 'ui-component/json/JsonEditor'\r\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\r\nimport { CodeEditor } from 'ui-component/editor/CodeEditor'\r\n\r\nimport ToolDialog from 'views/tools/ToolDialog'\r\nimport AssistantDialog from 'views/assistants/AssistantDialog'\r\nimport ExpandTextDialog from 'ui-component/dialog/ExpandTextDialog'\r\nimport FormatPromptValuesDialog from 'ui-component/dialog/FormatPromptValuesDialog'\r\nimport PromptLangsmithHubDialog from 'ui-component/dialog/PromptLangsmithHubDialog'\r\nimport ManageScrapedLinksDialog from 'ui-component/dialog/ManageScrapedLinksDialog'\r\nimport CredentialInputHandler from './CredentialInputHandler'\r\n\r\n// utils\r\nimport { getInputVariables } from 'utils/genericHelper'\r\n\r\n// const\r\nimport { FLOWISE_CREDENTIAL_ID } from 'store/constant'\r\n\r\nconst EDITABLE_OPTIONS = ['selectedTool', 'selectedAssistant']\r\n\r\nconst CustomWidthTooltip = styled(({ className, ...props }) => <Tooltip {...props} classes={{ popper: className }} />)({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        maxWidth: 500\r\n    }\r\n})\r\n\r\n// ===========================|| NodeInputHandler ||=========================== //\r\n\r\nconst NodeInputHandler = ({ inputAnchor, inputParam, data, disabled = false, isAdditionalParams = false }) => {\r\n    const theme = useTheme()\r\n    const customization = useSelector((state) => state.customization)\r\n    const ref = useRef(null)\r\n    const { reactFlowInstance } = useContext(flowContext)\r\n    const updateNodeInternals = useUpdateNodeInternals()\r\n    const [position, setPosition] = useState(0)\r\n    const [showExpandDialog, setShowExpandDialog] = useState(false)\r\n    const [expandDialogProps, setExpandDialogProps] = useState({})\r\n    const [showAsyncOptionDialog, setAsyncOptionEditDialog] = useState('')\r\n    const [asyncOptionEditDialogProps, setAsyncOptionEditDialogProps] = useState({})\r\n    const [reloadTimestamp, setReloadTimestamp] = useState(Date.now().toString())\r\n    const [showFormatPromptValuesDialog, setShowFormatPromptValuesDialog] = useState(false)\r\n    const [formatPromptValuesDialogProps, setFormatPromptValuesDialogProps] = useState({})\r\n    const [showPromptHubDialog, setShowPromptHubDialog] = useState(false)\r\n    const [showManageScrapedLinksDialog, setShowManageScrapedLinksDialog] = useState(false)\r\n    const [manageScrapedLinksDialogProps, setManageScrapedLinksDialogProps] = useState({})\r\n\r\n    const onExpandDialogClicked = (value, inputParam) => {\r\n        const dialogProps = {\r\n            value,\r\n            inputParam,\r\n            disabled,\r\n            confirmButtonName: 'Save',\r\n            cancelButtonName: 'Cancel'\r\n        }\r\n        setExpandDialogProps(dialogProps)\r\n        setShowExpandDialog(true)\r\n    }\r\n\r\n    const onShowPromptHubButtonClicked = () => {\r\n        setShowPromptHubDialog(true)\r\n    }\r\n\r\n    const onShowPromptHubButtonSubmit = (templates) => {\r\n        setShowPromptHubDialog(false)\r\n        for (const t of templates) {\r\n            if (Object.prototype.hasOwnProperty.call(data.inputs, t.type)) {\r\n                data.inputs[t.type] = t.template\r\n            }\r\n        }\r\n    }\r\n\r\n    const onManageLinksDialogClicked = (url, selectedLinks, relativeLinksMethod, limit) => {\r\n        const dialogProps = {\r\n            url,\r\n            relativeLinksMethod,\r\n            limit,\r\n            selectedLinks,\r\n            confirmButtonName: 'Save',\r\n            cancelButtonName: 'Cancel'\r\n        }\r\n        setManageScrapedLinksDialogProps(dialogProps)\r\n        setShowManageScrapedLinksDialog(true)\r\n    }\r\n\r\n    const onManageLinksDialogSave = (url, links) => {\r\n        setShowManageScrapedLinksDialog(false)\r\n        data.inputs.url = url\r\n        data.inputs.selectedLinks = links\r\n    }\r\n\r\n    const onEditJSONClicked = (value, inputParam) => {\r\n        // Preset values if the field is format prompt values\r\n        let inputValue = value\r\n        if (inputParam.name === 'promptValues' && !value) {\r\n            const obj = {}\r\n            const templateValue =\r\n                (data.inputs['template'] ?? '') + (data.inputs['systemMessagePrompt'] ?? '') + (data.inputs['humanMessagePrompt'] ?? '')\r\n            const inputVariables = getInputVariables(templateValue)\r\n            for (const inputVariable of inputVariables) {\r\n                obj[inputVariable] = ''\r\n            }\r\n            if (Object.keys(obj).length) inputValue = JSON.stringify(obj)\r\n        }\r\n        const dialogProp = {\r\n            value: inputValue,\r\n            inputParam,\r\n            nodes: reactFlowInstance.getNodes(),\r\n            edges: reactFlowInstance.getEdges(),\r\n            nodeId: data.id\r\n        }\r\n        setFormatPromptValuesDialogProps(dialogProp)\r\n        setShowFormatPromptValuesDialog(true)\r\n    }\r\n\r\n    const onExpandDialogSave = (newValue, inputParamName) => {\r\n        setShowExpandDialog(false)\r\n        data.inputs[inputParamName] = newValue\r\n    }\r\n\r\n    const editAsyncOption = (inputParamName, inputValue) => {\r\n        if (inputParamName === 'selectedTool') {\r\n            setAsyncOptionEditDialogProps({\r\n                title: 'Edit Tool',\r\n                type: 'EDIT',\r\n                cancelButtonName: 'Cancel',\r\n                confirmButtonName: 'Save',\r\n                toolId: inputValue\r\n            })\r\n        } else if (inputParamName === 'selectedAssistant') {\r\n            setAsyncOptionEditDialogProps({\r\n                title: 'Edit Assistant',\r\n                type: 'EDIT',\r\n                cancelButtonName: 'Cancel',\r\n                confirmButtonName: 'Save',\r\n                assistantId: inputValue\r\n            })\r\n        }\r\n        setAsyncOptionEditDialog(inputParamName)\r\n    }\r\n\r\n    const addAsyncOption = (inputParamName) => {\r\n        if (inputParamName === 'selectedTool') {\r\n            setAsyncOptionEditDialogProps({\r\n                title: 'Add New Tool',\r\n                type: 'ADD',\r\n                cancelButtonName: 'Cancel',\r\n                confirmButtonName: 'Add'\r\n            })\r\n        } else if (inputParamName === 'selectedAssistant') {\r\n            setAsyncOptionEditDialogProps({\r\n                title: 'Add New Assistant',\r\n                type: 'ADD',\r\n                cancelButtonName: 'Cancel',\r\n                confirmButtonName: 'Add'\r\n            })\r\n        }\r\n        setAsyncOptionEditDialog(inputParamName)\r\n    }\r\n\r\n    const onConfirmAsyncOption = (selectedOptionId = '') => {\r\n        if (!selectedOptionId) {\r\n            data.inputs[showAsyncOptionDialog] = ''\r\n        } else {\r\n            data.inputs[showAsyncOptionDialog] = selectedOptionId\r\n            setReloadTimestamp(Date.now().toString())\r\n        }\r\n        setAsyncOptionEditDialogProps({})\r\n        setAsyncOptionEditDialog('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref.current && ref.current.offsetTop && ref.current.clientHeight) {\r\n            setPosition(ref.current.offsetTop + ref.current.clientHeight / 2)\r\n            updateNodeInternals(data.id)\r\n        }\r\n    }, [data.id, ref, updateNodeInternals])\r\n\r\n    useEffect(() => {\r\n        updateNodeInternals(data.id)\r\n    }, [data.id, position, updateNodeInternals])\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            {inputAnchor && (\r\n                <>\r\n                    <CustomWidthTooltip placement='left' title={inputAnchor.type}>\r\n                        <Handle\r\n                            type='target'\r\n                            position={Position.Left}\r\n                            key={inputAnchor.id}\r\n                            id={inputAnchor.id}\r\n                            isValidConnection={(connection) => isValidConnection(connection, reactFlowInstance)}\r\n                            style={{\r\n                                height: 10,\r\n                                width: 10,\r\n                                backgroundColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary,\r\n                                top: position\r\n                            }}\r\n                        />\r\n                    </CustomWidthTooltip>\r\n                    <Box sx={{ p: 2 }}>\r\n                        <Typography>\r\n                            {inputAnchor.label}\r\n                            {!inputAnchor.optional && <span style={{ color: 'red' }}>&nbsp;*</span>}\r\n                            {inputAnchor.description && <TooltipWithParser style={{ marginLeft: 10 }} title={inputAnchor.description} />}\r\n                        </Typography>\r\n                    </Box>\r\n                </>\r\n            )}\r\n\r\n            {((inputParam && !inputParam.additionalParams) || isAdditionalParams) && (\r\n                <>\r\n                    {inputParam.acceptVariable && (\r\n                        <CustomWidthTooltip placement='left' title={inputParam.type}>\r\n                            <Handle\r\n                                type='target'\r\n                                position={Position.Left}\r\n                                key={inputParam.id}\r\n                                id={inputParam.id}\r\n                                isValidConnection={(connection) => isValidConnection(connection, reactFlowInstance)}\r\n                                style={{\r\n                                    height: 10,\r\n                                    width: 10,\r\n                                    backgroundColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary,\r\n                                    top: position\r\n                                }}\r\n                            />\r\n                        </CustomWidthTooltip>\r\n                    )}\r\n                    <Box sx={{ p: 2 }}>\r\n                        {(data.name === 'promptTemplate' || data.name === 'chatPromptTemplate') &&\r\n                            (inputParam.name === 'template' || inputParam.name === 'systemMessagePrompt') && (\r\n                                <>\r\n                                    <Button\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            width: '100%'\r\n                                        }}\r\n                                        disabled={disabled}\r\n                                        sx={{ borderRadius: 25, width: '100%', mb: 2, mt: 0 }}\r\n                                        variant='outlined'\r\n                                        onClick={() => onShowPromptHubButtonClicked()}\r\n                                        endIcon={<IconAutoFixHigh />}\r\n                                    >\r\n                                        Langchain Hub\r\n                                    </Button>\r\n                                    <PromptLangsmithHubDialog\r\n                                        promptType={inputParam.name}\r\n                                        show={showPromptHubDialog}\r\n                                        onCancel={() => setShowPromptHubDialog(false)}\r\n                                        onSubmit={onShowPromptHubButtonSubmit}\r\n                                    ></PromptLangsmithHubDialog>\r\n                                </>\r\n                            )}\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <Typography>\r\n                                {inputParam.label}\r\n                                {!inputParam.optional && <span style={{ color: 'red' }}>&nbsp;*</span>}\r\n                                {inputParam.description && <TooltipWithParser style={{ marginLeft: 10 }} title={inputParam.description} />}\r\n                            </Typography>\r\n                            <div style={{ flexGrow: 1 }}></div>\r\n                            {((inputParam.type === 'string' && inputParam.rows) || inputParam.type === 'code') && (\r\n                                <IconButton\r\n                                    size='small'\r\n                                    sx={{\r\n                                        height: 25,\r\n                                        width: 25\r\n                                    }}\r\n                                    title='Expand'\r\n                                    color='primary'\r\n                                    onClick={() =>\r\n                                        onExpandDialogClicked(data.inputs[inputParam.name] ?? inputParam.default ?? '', inputParam)\r\n                                    }\r\n                                >\r\n                                    <IconArrowsMaximize />\r\n                                </IconButton>\r\n                            )}\r\n                        </div>\r\n                        {inputParam.warning && (\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    borderRadius: 10,\r\n                                    background: 'rgb(254,252,191)',\r\n                                    padding: 10,\r\n                                    marginTop: 10,\r\n                                    marginBottom: 10\r\n                                }}\r\n                            >\r\n                                <IconAlertTriangle size={30} color='orange' />\r\n                                <span style={{ color: 'rgb(116,66,16)', marginLeft: 10 }}>{inputParam.warning}</span>\r\n                            </div>\r\n                        )}\r\n                        {inputParam.type === 'credential' && (\r\n                            <CredentialInputHandler\r\n                                disabled={disabled}\r\n                                data={data}\r\n                                inputParam={inputParam}\r\n                                onSelect={(newValue) => {\r\n                                    data.credential = newValue\r\n                                    data.inputs[FLOWISE_CREDENTIAL_ID] = newValue // in case data.credential is not updated\r\n                                }}\r\n                            />\r\n                        )}\r\n\r\n                        {inputParam.type === 'file' && (\r\n                            <File\r\n                                disabled={disabled}\r\n                                fileType={inputParam.fileType || '*'}\r\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? 'Choose a file to upload'}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'boolean' && (\r\n                            <SwitchInput\r\n                                disabled={disabled}\r\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? false}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'datagrid' && (\r\n                            <DataGrid\r\n                                disabled={disabled}\r\n                                columns={inputParam.datagrid}\r\n                                hideFooter={true}\r\n                                rows={data.inputs[inputParam.name] ?? JSON.stringify(inputParam.default) ?? []}\r\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'code' && (\r\n                            <>\r\n                                <div style={{ height: '5px' }}></div>\r\n                                <div style={{ height: inputParam.rows ? '100px' : '200px' }}>\r\n                                    <CodeEditor\r\n                                        disabled={disabled}\r\n                                        value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\r\n                                        height={inputParam.rows ? '100px' : '200px'}\r\n                                        theme={customization.isDarkMode ? 'dark' : 'light'}\r\n                                        lang={'js'}\r\n                                        placeholder={inputParam.placeholder}\r\n                                        onValueChange={(code) => (data.inputs[inputParam.name] = code)}\r\n                                        basicSetup={{ highlightActiveLine: false, highlightActiveLineGutter: false }}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {(inputParam.type === 'string' || inputParam.type === 'password' || inputParam.type === 'number') && (\r\n                            <Input\r\n                                key={data.inputs[inputParam.name]}\r\n                                disabled={disabled}\r\n                                inputParam={inputParam}\r\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\r\n                                nodes={inputParam?.acceptVariable && reactFlowInstance ? reactFlowInstance.getNodes() : []}\r\n                                edges={inputParam?.acceptVariable && reactFlowInstance ? reactFlowInstance.getEdges() : []}\r\n                                nodeId={data.id}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'json' && (\r\n                            <>\r\n                                {!inputParam?.acceptVariable && (\r\n                                    <JsonEditorInput\r\n                                        disabled={disabled}\r\n                                        onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                        value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\r\n                                        isDarkMode={customization.isDarkMode}\r\n                                    />\r\n                                )}\r\n                                {inputParam?.acceptVariable && (\r\n                                    <>\r\n                                        <Button\r\n                                            sx={{\r\n                                                borderRadius: 25,\r\n                                                width: '100%',\r\n                                                mb: 0,\r\n                                                mt: 2\r\n                                            }}\r\n                                            variant='outlined'\r\n                                            disabled={disabled}\r\n                                            onClick={() => onEditJSONClicked(data.inputs[inputParam.name] ?? '', inputParam)}\r\n                                        >\r\n                                            {inputParam.label}\r\n                                        </Button>\r\n                                        <FormatPromptValuesDialog\r\n                                            show={showFormatPromptValuesDialog}\r\n                                            dialogProps={formatPromptValuesDialogProps}\r\n                                            onCancel={() => setShowFormatPromptValuesDialog(false)}\r\n                                            onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                        ></FormatPromptValuesDialog>\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                        {inputParam.type === 'options' && (\r\n                            <Dropdown\r\n                                disabled={disabled}\r\n                                name={inputParam.name}\r\n                                options={inputParam.options}\r\n                                onSelect={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? 'choose an option'}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'multiOptions' && (\r\n                            <MultiDropdown\r\n                                disabled={disabled}\r\n                                name={inputParam.name}\r\n                                options={inputParam.options}\r\n                                onSelect={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? 'choose an option'}\r\n                            />\r\n                        )}\r\n                        {inputParam.type === 'asyncOptions' && (\r\n                            <>\r\n                                {data.inputParams.length === 1 && <div style={{ marginTop: 10 }} />}\r\n                                <div key={reloadTimestamp} style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                    <AsyncDropdown\r\n                                        disabled={disabled}\r\n                                        name={inputParam.name}\r\n                                        nodeData={data}\r\n                                        value={data.inputs[inputParam.name] ?? inputParam.default ?? 'choose an option'}\r\n                                        isCreateNewOption={EDITABLE_OPTIONS.includes(inputParam.name)}\r\n                                        onSelect={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                                        onCreateNew={() => addAsyncOption(inputParam.name)}\r\n                                    />\r\n                                    {EDITABLE_OPTIONS.includes(inputParam.name) && data.inputs[inputParam.name] && (\r\n                                        <IconButton\r\n                                            title='Edit'\r\n                                            color='primary'\r\n                                            size='small'\r\n                                            onClick={() => editAsyncOption(inputParam.name, data.inputs[inputParam.name])}\r\n                                        >\r\n                                            <IconEdit />\r\n                                        </IconButton>\r\n                                    )}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {(data.name === 'cheerioWebScraper' ||\r\n                            data.name === 'puppeteerWebScraper' ||\r\n                            data.name === 'playwrightWebScraper') &&\r\n                            inputParam.name === 'url' && (\r\n                                <>\r\n                                    <Button\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            width: '100%'\r\n                                        }}\r\n                                        disabled={disabled}\r\n                                        sx={{ borderRadius: '12px', width: '100%', mt: 1 }}\r\n                                        variant='outlined'\r\n                                        onClick={() =>\r\n                                            onManageLinksDialogClicked(\r\n                                                data.inputs[inputParam.name] ?? inputParam.default ?? '',\r\n                                                data.inputs.selectedLinks,\r\n                                                data.inputs['relativeLinksMethod'] ?? 'webCrawl',\r\n                                                parseInt(data.inputs['limit']) ?? 0\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        Manage Links\r\n                                    </Button>\r\n                                    <ManageScrapedLinksDialog\r\n                                        show={showManageScrapedLinksDialog}\r\n                                        dialogProps={manageScrapedLinksDialogProps}\r\n                                        onCancel={() => setShowManageScrapedLinksDialog(false)}\r\n                                        onSave={onManageLinksDialogSave}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                    </Box>\r\n                </>\r\n            )}\r\n            <ToolDialog\r\n                show={showAsyncOptionDialog === 'selectedTool'}\r\n                dialogProps={asyncOptionEditDialogProps}\r\n                onCancel={() => setAsyncOptionEditDialog('')}\r\n                onConfirm={onConfirmAsyncOption}\r\n            ></ToolDialog>\r\n            <AssistantDialog\r\n                show={showAsyncOptionDialog === 'selectedAssistant'}\r\n                dialogProps={asyncOptionEditDialogProps}\r\n                onCancel={() => setAsyncOptionEditDialog('')}\r\n                onConfirm={onConfirmAsyncOption}\r\n            ></AssistantDialog>\r\n            <ExpandTextDialog\r\n                show={showExpandDialog}\r\n                dialogProps={expandDialogProps}\r\n                onCancel={() => setShowExpandDialog(false)}\r\n                onConfirm={(newValue, inputParamName) => onExpandDialogSave(newValue, inputParamName)}\r\n            ></ExpandTextDialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nNodeInputHandler.propTypes = {\r\n    inputAnchor: PropTypes.object,\r\n    inputParam: PropTypes.object,\r\n    data: PropTypes.object,\r\n    disabled: PropTypes.bool,\r\n    isAdditionalParams: PropTypes.bool\r\n}\r\n\r\nexport default NodeInputHandler\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}