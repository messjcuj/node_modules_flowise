{"ast":null,"code":"import React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessages = {\n  error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n  error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n  error003: nodeType => \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\"),\n  error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n  error005: () => 'Only child nodes can use a parent extent.',\n  error006: () => \"Can't create edge. An edge needs a source and a target.\",\n  error007: id => \"The old edge with id=\".concat(id, \" does not exist.\"),\n  error009: type => \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\"),\n  error008: (sourceHandle, edge) => \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\"),\n  error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n  error011: edgeType => \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\"),\n  error012: id => \"Node with id \\\"\".concat(id, \"\\\" does not exist, it may have been removed. This can happen when a node is deleted before the \\\"onNodeClick\\\" handler is called.\")\n};\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst selector$g = s => s.userSelectionActive ? 'none' : 'all';\nfunction Panel(_ref) {\n  let {\n    position,\n    children,\n    className,\n    style,\n    ...rest\n  } = _ref;\n  const pointerEvents = useStore(selector$g);\n  const positionClasses = \"\".concat(position).split('-');\n  return React.createElement(\"div\", {\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    style: {\n      ...style,\n      pointerEvents\n    },\n    ...rest\n  }, children);\n}\nfunction Attribution(_ref2) {\n  let {\n    proOptions,\n    position = 'bottom-right'\n  } = _ref2;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return React.createElement(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\"\n  }, React.createElement(\"a\", {\n    href: \"https://reactflow.dev\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    \"aria-label\": \"React Flow attribution\"\n  }, \"React Flow\"));\n}\nconst EdgeText = _ref3 => {\n  let {\n    x,\n    y,\n    label,\n    labelStyle = {},\n    labelShowBg = true,\n    labelBgStyle = {},\n    labelBgPadding = [2, 4],\n    labelBgBorderRadius = 2,\n    children,\n    className,\n    ...rest\n  } = _ref3;\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden',\n    ...rest\n  }, labelShowBg && React.createElement(\"rect\", {\n    width: edgeTextBbox.width + 2 * labelBgPadding[0],\n    x: -labelBgPadding[0],\n    y: -labelBgPadding[1],\n    height: edgeTextBbox.height + 2 * labelBgPadding[1],\n    className: \"react-flow__edge-textbg\",\n    style: labelBgStyle,\n    rx: labelBgBorderRadius,\n    ry: labelBgBorderRadius\n  }), React.createElement(\"text\", {\n    className: \"react-flow__edge-text\",\n    y: edgeTextBbox.height / 2,\n    dy: \"0.3em\",\n    ref: edgeRef,\n    style: labelStyle\n  }, label), children);\n};\nvar EdgeText$1 = memo(EdgeText);\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = function (val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nconst clampPosition = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  let extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n  const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nconst getHostForElement = element => {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = _ref4 => {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = _ref4;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nconst boxToRect = _ref5 => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref5;\n  return {\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nconst nodeToRect = node => ({\n  ...(node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }),\n  width: node.width || 0,\n  height: node.height || 0\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n  const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = obj => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nconst isReactKeyboardEvent = event => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath;\n  const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  const target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 || (_kbEvent$composedPath = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath === void 0 ? void 0 : _kbEvent$composedPath[0]) || event.target;\n  const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nconst isMouseEvent = event => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  const isMouseTriggered = isMouseEvent(event);\n  const evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  const evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nconst isMacOs = () => {\n  var _navigator;\n  return typeof navigator !== 'undefined' && ((_navigator = navigator) === null || _navigator === void 0 || (_navigator = _navigator.userAgent) === null || _navigator === void 0 ? void 0 : _navigator.indexOf('Mac')) >= 0;\n};\nconst BaseEdge = _ref6 => {\n  let {\n    id,\n    path,\n    labelX,\n    labelY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth = 20\n  } = _ref6;\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    id: id,\n    style: style,\n    d: path,\n    fill: \"none\",\n    className: \"react-flow__edge-path\",\n    markerEnd: markerEnd,\n    markerStart: markerStart\n  }), interactionWidth && React.createElement(\"path\", {\n    d: path,\n    fill: \"none\",\n    strokeOpacity: 0,\n    strokeWidth: interactionWidth,\n    className: \"react-flow__edge-interaction\"\n  }), label && isNumeric(labelX) && isNumeric(labelY) ? React.createElement(EdgeText$1, {\n    x: labelX,\n    y: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius\n  }) : null);\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, {\n        ...edge\n      });\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref7;\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  } = _ref8;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref9;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top\n  } = _ref10;\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(_ref11 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref11;\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = _ref12 => {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target\n  } = _ref12;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target,\n    targetPosition = Position.Top,\n    center,\n    offset\n  } = _ref13;\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const sourceGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const targetGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    if (sourcePosition === targetPosition) {\n      const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n      // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n      if (diff <= offset) {\n        const gapOffset = Math.min(offset - 1, offset - diff);\n        if (sourceDir[dirAccessor] === currDir) {\n          sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n        } else {\n          targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n        }\n      }\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    const sourceGapPoint = {\n      x: sourceGapped.x + sourceGapOffset.x,\n      y: sourceGapped.y + sourceGapOffset.y\n    };\n    const targetGapPoint = {\n      x: targetGapped.x + targetGapOffset.x,\n      y: targetGapped.y + targetGapOffset.y\n    };\n    const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n    const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n    // we want to place the label on the longest segment of the edge\n    if (maxXDistance >= maxYDistance) {\n      centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n      centerY = points[0].y;\n    } else {\n      centerX = points[0].x;\n      centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n    }\n  }\n  const pathPoints = [source, {\n    x: sourceGapped.x + sourceGapOffset.x,\n    y: sourceGapped.y + sourceGapOffset.y\n  }, ...points, {\n    x: targetGapped.x + targetGapOffset.x,\n    y: targetGapped.y + targetGapOffset.y\n  }, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * yDir);\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref14) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    borderRadius = 5,\n    centerX,\n    centerY,\n    offset = 20\n  } = _ref14;\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(_ref15 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref15;\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n    offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => {\n  var _props$pathOptions2;\n  return React.createElement(SmoothStepEdge, {\n    ...props,\n    pathOptions: useMemo(() => {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  });\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref16;\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(_ref17 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref17;\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2,\n    c\n  } = _ref18;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    curvature = 0.25\n  } = _ref19;\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(_ref20 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref20;\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n  const nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = _ref21 => {\n  let {\n    source,\n    sourceHandle,\n    target,\n    targetHandle\n  } = _ref21;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(key => \"\".concat(key, \"=\").concat(marker[key])).join('&'));\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = {\n      ...edgeParams\n    };\n  } else {\n    edge = {\n      ...edgeParams,\n      id: getEdgeId(edgeParams)\n    };\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst updateEdge = function (oldEdge, newConnection, edges) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  const {\n    id: oldEdgeId,\n    ...rest\n  } = oldEdge;\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdgeId);\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = {\n    ...rest,\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  };\n  return edges.filter(e => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = (_ref22, _ref23, snapToGrid, _ref24) => {\n  let {\n    x,\n    y\n  } = _ref22;\n  let [tx, ty, tScale] = _ref23;\n  let [snapX, snapY] = _ref24;\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst rendererPointToPoint = (_ref25, _ref26) => {\n  let {\n    x,\n    y\n  } = _ref25;\n  let [tx, ty, tScale] = _ref26;\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nconst getNodePositionWithOrigin = function (node) {\n  var _node$width, _node$height;\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  const offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  const offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  const position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return {\n    ...position,\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  };\n};\nconst getNodesBounds = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, node) => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x,\n      y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n  return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = function (nodeInternals, rect) {\n  let [tx, ty, tScale] = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1];\n  let partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  const paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      width,\n      height,\n      selectable = true,\n      hidden = false\n    } = node;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    const {\n      positionAbsolute\n    } = getNodePositionWithOrigin(node, nodeOrigin);\n    const nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const {\n    x,\n    y,\n    zoom\n  } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n  console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n  return [x, y, zoom];\n};\nconst getViewportForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return {\n    x,\n    y,\n    zoom: clampedZoom\n  };\n};\nconst getD3Transition = function (selection) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce((res, h) => {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n  // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n  // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const domNodes = doc.elementsFromPoint(x, y);\n  const handleBelow = domNodes.find(el => el.classList.contains('react-flow__handle'));\n  if (handleBelow) {\n    const handleNodeId = handleBelow.getAttribute('data-nodeid');\n    if (handleNodeId) {\n      const handleType = getHandleType(undefined, handleBelow);\n      const handleId = handleBelow.getAttribute('data-handleid');\n      const validHandleResult = validator({\n        nodeId: handleNodeId,\n        id: handleId,\n        type: handleType\n      });\n      if (validHandleResult) {\n        const handle = handles.find(h => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n        return {\n          handle: {\n            id: handleId,\n            type: handleType,\n            nodeId: handleNodeId,\n            x: (handle === null || handle === void 0 ? void 0 : handle.x) || pos.x,\n            y: (handle === null || handle === void 0 ? void 0 : handle.y) || pos.y\n          },\n          validHandleResult\n        };\n      }\n    }\n  }\n  // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n  let closestHandles = [];\n  let minDistance = Infinity;\n  handles.forEach(handle => {\n    const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n    if (distance <= connectionRadius) {\n      const validHandleResult = validator(handle);\n      if (distance <= minDistance) {\n        if (distance < minDistance) {\n          closestHandles = [{\n            handle,\n            validHandleResult\n          }];\n        } else if (distance === minDistance) {\n          // when multiple handles are on the same distance we collect all of them\n          closestHandles.push({\n            handle,\n            validHandleResult\n          });\n        }\n        minDistance = distance;\n      }\n    }\n  });\n  if (!closestHandles.length) {\n    return {\n      handle: null,\n      validHandleResult: defaultResult()\n    };\n  }\n  if (closestHandles.length === 1) {\n    return closestHandles[0];\n  }\n  const hasValidHandle = closestHandles.some(_ref27 => {\n    let {\n      validHandleResult\n    } = _ref27;\n    return validHandleResult.isValid;\n  });\n  const hasTargetHandle = closestHandles.some(_ref28 => {\n    let {\n      handle\n    } = _ref28;\n    return handle.type === 'target';\n  });\n  // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n  return closestHandles.find(_ref29 => {\n    let {\n      handle,\n      validHandleResult\n    } = _ref29;\n    return hasTargetHandle ? handle.type === 'target' : hasValidHandle ? validHandleResult.isValid : true;\n  }) || closestHandles[0];\n}\nconst nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\nconst defaultResult = () => ({\n  handleDomNode: null,\n  isValid: false,\n  connection: nullConnection,\n  endHandle: null\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  const isTarget = fromType === 'target';\n  const handleToCheck = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  const result = {\n    ...defaultResult(),\n    handleDomNode: handleToCheck\n  };\n  if (handleToCheck) {\n    const handleType = getHandleType(undefined, handleToCheck);\n    const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    const handleId = handleToCheck.getAttribute('data-handleid');\n    const connectable = handleToCheck.classList.contains('connectable');\n    const connectableEnd = handleToCheck.classList.contains('connectableend');\n    const connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    const isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref30) {\n  let {\n    nodes,\n    nodeId,\n    handleId,\n    handleType\n  } = _ref30;\n  return nodes.reduce((res, node) => {\n    if (node[internalsSymbol]) {\n      const {\n        handleBounds\n      } = node[internalsSymbol];\n      let sourceHandles = [];\n      let targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push(...sourceHandles, ...targetHandles);\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 || handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  let connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref31) {\n  let {\n    event,\n    handleId,\n    nodeId,\n    onConnect,\n    isTarget,\n    getState,\n    setState,\n    isValidConnection,\n    edgeUpdaterType,\n    onEdgeUpdateEnd\n  } = _ref31;\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  const {\n    connectionMode,\n    domNode,\n    autoPanOnConnect,\n    connectionRadius,\n    onConnectStart,\n    panBy,\n    getNodes,\n    cancelConnection\n  } = getState();\n  let autoPanId = 0;\n  let closestHandle;\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  const containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  let prevActiveHandle;\n  let connectionPosition = getEventPosition(event, containerBounds);\n  let autoPanStarted = false;\n  let connection = null;\n  let isValid = false;\n  let handleDomNode = null;\n  const handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId,\n    handleId,\n    handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  const autoPan = () => {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId,\n      handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart === null || onConnectStart === void 0 || onConnectStart(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onPointerMove(event) {\n    const {\n      transform\n    } = getState();\n    connectionPosition = getEventPosition(event, containerBounds);\n    const {\n      handle,\n      validHandleResult\n    } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, handle => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n    closestHandle = handle;\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    handleDomNode = validHandleResult.handleDomNode;\n    connection = validHandleResult.connection;\n    isValid = validHandleResult.isValid;\n    setState({\n      connectionPosition: closestHandle && isValid ? rendererPointToPoint({\n        x: closestHandle.x,\n        y: closestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n      connectionEndHandle: validHandleResult.endHandle\n    });\n    if (!closestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState;\n    if ((closestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 || onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 || _getState$onConnectEn.call(_getState, event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 || onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nconst alwaysValid = () => true;\nconst selector$f = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst connectingSelector = (nodeId, handleId, type) => state => {\n  const {\n    connectionStartHandle: startHandle,\n    connectionEndHandle: endHandle,\n    connectionClickStartHandle: clickHandle\n  } = state;\n  return {\n    connecting: (startHandle === null || startHandle === void 0 ? void 0 : startHandle.nodeId) === nodeId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.handleId) === handleId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.type) === type || (endHandle === null || endHandle === void 0 ? void 0 : endHandle.nodeId) === nodeId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.handleId) === handleId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.type) === type,\n    clickConnecting: (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.nodeId) === nodeId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.handleId) === handleId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.type) === type\n  };\n};\nconst Handle = forwardRef((_ref32, ref) => {\n  let {\n    type = 'source',\n    position = Position.Top,\n    isValidConnection,\n    isConnectable = true,\n    isConnectableStart = true,\n    isConnectableEnd = true,\n    id,\n    onConnect,\n    children,\n    className,\n    onMouseDown,\n    onTouchStart,\n    ...rest\n  } = _ref32;\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const store = useStoreApi();\n  const nodeId = useNodeId();\n  const {\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$f, shallow);\n  const {\n    connecting,\n    clickConnecting\n  } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 || _store$getState$onErr.call(_store$getState, '010', errorMessages['error010']());\n  }\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = {\n      ...defaultEdgeOptions,\n      ...params\n    };\n    if (hasDefaultEdges) {\n      const {\n        edges,\n        setEdges\n      } = store.getState();\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction === null || onConnectAction === void 0 || onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 || onConnect(edgeParams);\n  };\n  const onPointerDown = event => {\n    if (!nodeId) {\n      return;\n    }\n    const isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 || onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 || onTouchStart(event);\n    }\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionClickStartHandle,\n      connectionMode,\n      isValidConnection: isValidConnectionStore\n    } = store.getState();\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 || onClickConnectStart(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    const {\n      connection,\n      isValid\n    } = isValidHandle({\n      nodeId,\n      id: handleId,\n      type\n    }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 || onClickConnectEnd(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return React.createElement(\"div\", {\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref,\n    ...rest\n  }, children);\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = _ref33 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top,\n    sourcePosition = Position.Bottom\n  } = _ref33;\n  return React.createElement(React.Fragment, null, React.createElement(Handle$1, {\n    type: \"target\",\n    position: targetPosition,\n    isConnectable: isConnectable\n  }), data === null || data === void 0 ? void 0 : data.label, React.createElement(Handle$1, {\n    type: \"source\",\n    position: sourcePosition,\n    isConnectable: isConnectable\n  }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = _ref34 => {\n  let {\n    data,\n    isConnectable,\n    sourcePosition = Position.Bottom\n  } = _ref34;\n  return React.createElement(React.Fragment, null, data === null || data === void 0 ? void 0 : data.label, React.createElement(Handle$1, {\n    type: \"source\",\n    position: sourcePosition,\n    isConnectable: isConnectable\n  }));\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = _ref35 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top\n  } = _ref35;\n  return React.createElement(React.Fragment, null, React.createElement(Handle$1, {\n    type: \"target\",\n    position: targetPosition,\n    isConnectable: isConnectable\n  }), data === null || data === void 0 ? void 0 : data.label);\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$e = s => ({\n  selectedNodes: s.getNodes().filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected)\n});\nconst selectId = obj => obj.id;\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(_ref36 => {\n  let {\n    onSelectionChange\n  } = _ref36;\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$e, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 || onSelectionChange(params);\n    store.getState().onSelectionChange.forEach(fn => fn(params));\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = s => !!s.onSelectionChange;\nfunction Wrapper$1(_ref37) {\n  let {\n    onSelectionChange\n  } = _ref37;\n  const storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return React.createElement(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nconst selector$d = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = _ref38 => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    edgesFocusable,\n    edgesUpdatable,\n    elevateNodesOnSelect,\n    minZoom,\n    maxZoom,\n    nodeExtent,\n    onNodesChange,\n    onEdgesChange,\n    elementsSelectable,\n    connectionMode,\n    snapGrid,\n    snapToGrid,\n    translateExtent,\n    connectOnClick,\n    defaultEdgeOptions,\n    fitView,\n    fitViewOptions,\n    onNodesDelete,\n    onEdgesDelete,\n    onNodeDrag,\n    onNodeDragStart,\n    onNodeDragStop,\n    onSelectionDrag,\n    onSelectionDragStart,\n    onSelectionDragStop,\n    noPanClassName,\n    nodeOrigin,\n    rfId,\n    autoPanOnConnect,\n    autoPanOnNodeDrag,\n    onError,\n    connectionRadius,\n    isValidConnection,\n    nodeDragThreshold\n  } = _ref38;\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$d, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(e => ({\n      ...e,\n      ...defaultEdgeOptions\n    }));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = s => s.ariaLiveMessage;\nfunction AriaLiveMessage(_ref39) {\n  let {\n    rfId\n  } = _ref39;\n  const ariaLiveMessage = useStore(selector$c);\n  return React.createElement(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle\n  }, ariaLiveMessage);\n}\nfunction A11yDescriptions(_ref40) {\n  let {\n    rfId,\n    disableKeyboardA11y\n  } = _ref40;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n    style: style\n  }, \"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '), React.createElement(\"div\", {\n    id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n    style: style\n  }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"), !disableKeyboardA11y && React.createElement(AriaLiveMessage, {\n    rfId: rfId\n  }));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function () {\n  let keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    actInsideInputWithModifier: true\n  };\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember if a modifier key is pressed in order to track it\n  const modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    const doc = typeof document !== 'undefined' ? document : null;\n    const target = (options === null || options === void 0 ? void 0 : options.target) || doc;\n    if (keyCode !== null) {\n      const downHandler = event => {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        const preventAction = (!modifierPressed.current || modifierPressed.current && !options.actInsideInputWithModifier) && isInputDOMNode(event);\n        if (preventAction) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        const preventAction = (!modifierPressed.current || modifierPressed.current && !options.actInsideInputWithModifier) && isInputDOMNode(event);\n        if (preventAction) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n        if (event.key === 'Meta') {\n          pressedKeys.current.clear();\n        }\n        modifierPressed.current = false;\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      target === null || target === void 0 || target.addEventListener('keydown', downHandler);\n      target === null || target === void 0 || target.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        target === null || target === void 0 || target.removeEventListener('keydown', downHandler);\n        target === null || target === void 0 || target.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  if (!node.parentNode) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(node => {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(\"Parent node \".concat(node.parentNode, \" not found\"));\n    }\n    if (node.parentNode || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol, _node$internalsSymbol2;\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nodeInternals, {\n        ...node.position,\n        z: (_node$internalsSymbol = (_node$internalsSymbol2 = node[internalsSymbol]) === null || _node$internalsSymbol2 === void 0 ? void 0 : _node$internalsSymbol2.z) !== null && _node$internalsSymbol !== void 0 ? _node$internalsSymbol : 0\n      }, nodeOrigin);\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(node => {\n    var _currInternals$intern;\n    const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    const currInternals = nodeInternals.get(node.id);\n    const internals = {\n      ...node,\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    };\n    if (node.parentNode) {\n      parentNodes[node.parentNode] = true;\n    }\n    const resetHandleBounds = (currInternals === null || currInternals === void 0 ? void 0 : currInternals.type) && (currInternals === null || currInternals === void 0 ? void 0 : currInternals.type) !== node.type;\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: resetHandleBounds ? undefined : currInternals === null || currInternals === void 0 || (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction fitView(get) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getNodes,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit,\n    nodeOrigin\n  } = get();\n  const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  const d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    const nodes = getNodes().filter(n => {\n      var _options$nodes;\n      const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(optionNode => optionNode.id === n.id);\n      }\n      return isVisible;\n    });\n    const nodesInitialized = nodes.every(n => n.width && n.height);\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      const bounds = getNodesBounds(nodes, nodeOrigin);\n      const {\n        x,\n        y,\n        zoom\n      } = getViewportForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1);\n      const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, {\n        ...node,\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      });\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref41) {\n  let {\n    changedNodes,\n    changedEdges,\n    get,\n    set\n  } = _ref41;\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 || onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: () => false,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  screenToFlowPosition: position => position,\n  flowToScreenPosition: position => position,\n  viewportInitialized: false\n};\nconst selector$b = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$b, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          var _transform$x, _transform$y, _transform$zoom;\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          var _options$padding2;\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const {\n            x,\n            y,\n            zoom\n          } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        // @deprecated Use `screenToFlowPosition`.\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        screenToFlowPosition: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid,\n            domNode\n          } = store.getState();\n          if (!domNode) {\n            return position;\n          }\n          const {\n            x: domX,\n            y: domY\n          } = domNode.getBoundingClientRect();\n          const relativePosition = {\n            x: position.x - domX,\n            y: position.y - domY\n          };\n          return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n        },\n        flowToScreenPosition: position => {\n          const {\n            transform,\n            domNode\n          } = store.getState();\n          if (!domNode) {\n            return position;\n          }\n          const {\n            x: domX,\n            y: domY\n          } = domNode.getBoundingClientRect();\n          const rendererPosition = rendererPointToPoint(position, transform);\n          return {\n            x: rendererPosition.x + domX,\n            y: rendererPosition.y + domY\n          };\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    return store.getState().getNodes().map(n => ({\n      ...n\n    }));\n  }, []);\n  const getNode = useCallback(id => {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => ({\n      ...e\n    }));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = getNodes();\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = getNodes();\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      getNodes,\n      edges = [],\n      transform\n    } = store.getState();\n    const [x, y, zoom] = transform;\n    return {\n      nodes: getNodes().map(n => ({\n        ...n\n      })),\n      edges: edges.map(e => ({\n        ...e\n      })),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  const deleteElements = useCallback(_ref42 => {\n    let {\n      nodes: nodesDeleted,\n      edges: edgesDeleted\n    } = _ref42;\n    const {\n      nodeInternals,\n      getNodes,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodeIds = (nodesDeleted || []).map(node => node.id);\n    const edgeIds = (edgesDeleted || []).map(edge => edge.id);\n    const nodesToRemove = getNodes().reduce((res, node) => {\n      const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(n => n.id === node.parentNode);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const initialHitEdges = deletableEdges.filter(e => edgeIds.includes(e.id));\n    if (nodesToRemove || initialHitEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 || onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 || onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  const getNodeRect = useCallback(nodeOrRect => {\n    const isRect = isRectObject(nodeOrRect);\n    const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    if (!isRect && !node) {\n      return [null, null, isRect];\n    }\n    const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  const getIntersectingNodes = useCallback(function (nodeOrRect) {\n    let partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let nodes = arguments.length > 2 ? arguments[2] : undefined;\n    const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(n => {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      const currNodeRect = nodeToRect(n);\n      const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      const partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    });\n  }, []);\n  const isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    let partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const [nodeRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return false;\n    }\n    const overlappingArea = getOverlappingArea(nodeRect, area);\n    const partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n  }, []);\n  return useMemo(() => {\n    return {\n      ...viewportHelper,\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject,\n      deleteElements,\n      getIntersectingNodes,\n      isNodeIntersecting\n    };\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nconst deleteKeyOptions = {\n  actInsideInputWithModifier: false\n};\nvar useGlobalKeyHandler = _ref43 => {\n  let {\n    deleteKeyCode,\n    multiSelectionKeyCode\n  } = _ref43;\n  const store = useStoreApi();\n  const {\n    deleteElements\n  } = useReactFlow();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (deleteKeyPressed) {\n      const {\n        edges,\n        getNodes\n      } = store.getState();\n      const selectedNodes = getNodes().filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState2;\n        (_store$getState$onErr2 = (_store$getState2 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 || _store$getState$onErr2.call(_store$getState2, '004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = eventTransform => ({\n  x: eventTransform.x,\n  y: eventTransform.y,\n  zoom: eventTransform.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(\".\".concat(className));\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = event => {\n  const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler,\n  userSelectionActive: s.userSelectionActive\n});\nconst ZoomPane = _ref44 => {\n  let {\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onPaneContextMenu,\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    elementsSelectable,\n    panOnDrag = true,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    zoomActivationKeyCode,\n    preventScrolling = true,\n    children,\n    noWheelClassName,\n    noPanClassName\n  } = _ref44;\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomedWithRightMouseButton = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler,\n    userSelectionActive\n  } = useStore(selector$a, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  const mouseButton = useRef(0);\n  const isPanScrolling = useRef(false);\n  const panScrollTimeout = useRef();\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const bbox = zoomPane.current.getBoundingClientRect();\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      const extent = [[0, 0], [bbox.width, bbox.height]];\n      const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      d3ZoomInstance.wheelDelta(wheelDelta);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          const _isMacOs = isMacOs();\n          // macos sets ctrlKey=true for pinch gesture on a trackpad\n          if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          // this enables vertical scrolling with shift + scroll on windows\n          if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n          }\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed,\n          // @ts-ignore\n          {\n            internal: true\n          });\n          const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n          const {\n            onViewportChangeStart,\n            onViewportChange,\n            onViewportChangeEnd\n          } = store.getState();\n          clearTimeout(panScrollTimeout.current);\n          // for pan on scroll we need to handle the event calls on our own\n          // we can't use the start, zoom and end events from d3-zoom\n          // because start and move gets called on every scroll event and not once at the beginning\n          if (!isPanScrolling.current) {\n            isPanScrolling.current = true;\n            onMoveStart === null || onMoveStart === void 0 || onMoveStart(event, nextViewport);\n            onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(nextViewport);\n          }\n          if (isPanScrolling.current) {\n            onMove === null || onMove === void 0 || onMove(event, nextViewport);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(nextViewport);\n            panScrollTimeout.current = setTimeout(() => {\n              onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event, nextViewport);\n              onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(nextViewport);\n              isPanScrolling.current = false;\n            }, 150);\n          }\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName, onMoveStart, onMove, onMoveEnd]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        var _event$sourceEvent, _event$sourceEvent2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = (_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.button;\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        const flowTransform = eventToFlowTransform(event.transform);\n        isZoomingOrPanning.current = true;\n        prevTransform.current = flowTransform;\n        if (((_event$sourceEvent2 = event.sourceEvent) === null || _event$sourceEvent2 === void 0 ? void 0 : _event$sourceEvent2.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(flowTransform);\n        onMoveStart === null || onMoveStart === void 0 || onMoveStart(event.sourceEvent, flowTransform);\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', event => {\n          var _mouseButton$current, _event$sourceEvent3;\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if ((onMove || onViewportChange) && !((_event$sourceEvent3 = event.sourceEvent) !== null && _event$sourceEvent3 !== void 0 && _event$sourceEvent3.internal)) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 || onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        var _mouseButton$current2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if ((panOnDrag === true || Array.isArray(panOnDrag) && panOnDrag.includes(1)) && event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && (event.type !== 'wheel' || panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed)) {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return React.createElement(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle\n  }, children);\n};\nconst selector$9 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  userSelectionRect: s.userSelectionRect\n});\nfunction UserSelection() {\n  const {\n    userSelectionActive,\n    userSelectionRect\n  } = useStore(selector$9, shallow);\n  const isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  const parent = res.find(e => e.id === updateItem.parentNode);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = {\n        ...parent.style\n      } || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChanges = changes.filter(c => c.id === item.id);\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    const updateItem = {\n      ...item\n    };\n    for (const currentChange of currentChanges) {\n      if (currentChange) {\n        switch (currentChange.type) {\n          case 'select':\n            {\n              updateItem.selected = currentChange.selected;\n              break;\n            }\n          case 'position':\n            {\n              if (typeof currentChange.position !== 'undefined') {\n                updateItem.position = currentChange.position;\n              }\n              if (typeof currentChange.positionAbsolute !== 'undefined') {\n                updateItem.positionAbsolute = currentChange.positionAbsolute;\n              }\n              if (typeof currentChange.dragging !== 'undefined') {\n                updateItem.dragging = currentChange.dragging;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'dimensions':\n            {\n              if (typeof currentChange.dimensions !== 'undefined') {\n                updateItem.width = currentChange.dimensions.width;\n                updateItem.height = currentChange.dimensions.height;\n              }\n              if (typeof currentChange.updateStyle !== 'undefined') {\n                updateItem.style = {\n                  ...(updateItem.style || {}),\n                  ...currentChange.dimensions\n                };\n              }\n              if (typeof currentChange.resizing === 'boolean') {\n                updateItem.resizing = currentChange.resizing;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'remove':\n            {\n              return res;\n            }\n        }\n      }\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n  return event => {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 || handler(event);\n  };\n};\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable,\n  dragging: s.paneDragging\n});\nconst Pane = memo(_ref45 => {\n  let {\n    isSelecting,\n    selectionMode = SelectionMode.Full,\n    panOnDrag,\n    onSelectionStart,\n    onSelectionEnd,\n    onPaneClick,\n    onPaneContextMenu,\n    onPaneScroll,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    children\n  } = _ref45;\n  const container = useRef(null);\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const {\n    userSelectionActive,\n    elementsSelectable,\n    dragging\n  } = useStore(selector$8, shallow);\n  const resetUserSelection = () => {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onClick = event => {\n    onPaneClick === null || onPaneClick === void 0 || onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = event => {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 || onPaneContextMenu(event);\n  };\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  const onMouseDown = event => {\n    const {\n      resetSelectedElements,\n      domNode\n    } = store.getState();\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = getEventPosition(event, containerBounds.current);\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 || onSelectionStart(event);\n  };\n  const onMouseMove = event => {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    const {\n      userSelectionRect,\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange,\n      nodeOrigin,\n      getNodes\n    } = store.getState();\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    const mousePos = getEventPosition(event, containerBounds.current);\n    const startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    const startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    const nextUserSelectRect = {\n      ...userSelectionRect,\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    };\n    const nodes = getNodes();\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  const onMouseUp = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    const {\n      userSelectionRect\n    } = store.getState();\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 || onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n  };\n  const onMouseLeave = event => {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return React.createElement(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle\n  }, children, React.createElement(UserSelection, null));\n});\nPane.displayName = 'Pane';\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined')).map(n => {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode,\n      width: n.width,\n      height: n.height,\n      expandParent: n.expandParent\n    };\n  });\n}\nfunction clampNodeExtent(node, extent) {\n  if (!extent || extent === 'parent') {\n    return extent;\n  }\n  return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  let nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  let onError = arguments.length > 5 ? arguments[5] : undefined;\n  const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n  let currentExtent = clampedNodeExtent;\n  if (node.extent === 'parent' && !node.expandParent) {\n    if (node.parentNode && node.width && node.height) {\n      const parent = nodeInternals.get(node.parentNode);\n      const {\n        x: parentX,\n        y: parentY\n      } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 || onError('005', errorMessages['error005']());\n      currentExtent = clampedNodeExtent;\n    }\n  } else if (node.extent && node.parentNode && node.extent !== 'parent') {\n    const parent = nodeInternals.get(node.parentNode);\n    const {\n      x: parentX,\n      y: parentY\n    } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    const parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  const positionAbsolute = currentExtent && currentExtent !== 'parent' ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref46) {\n  let {\n    nodeId,\n    dragItems,\n    nodeInternals\n  } = _ref46;\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return {\n      ...node,\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    };\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return {\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n      ...getDimensions(handle)\n    };\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    if (node) {\n      handler(event, {\n        ...node\n      });\n    }\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref47) {\n  let {\n    id,\n    store,\n    unselect = false,\n    nodeRef\n  } = _ref47;\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals,\n    onError\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  if (!node) {\n    onError === null || onError === void 0 || onError('012', errorMessages['error012'](id));\n    return;\n  }\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node],\n      edges: []\n    });\n    requestAnimationFrame(() => {\n      var _nodeRef$current;\n      return nodeRef === null || nodeRef === void 0 || (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  const store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(_ref48 => {\n    let {\n      sourceEvent\n    } = _ref48;\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n      ...pointerPos\n    };\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n}\nfunction useDrag(_ref49) {\n  let {\n    nodeRef,\n    disabled = false,\n    noDragClassName,\n    handleSelector,\n    nodeId,\n    isSelectable,\n    selectNodesOnDrag\n  } = _ref49;\n  const store = useStoreApi();\n  const [dragging, setDragging] = useState(false);\n  const dragItems = useRef([]);\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  const autoPanId = useRef(0);\n  const containerBounds = useRef(null);\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const dragEvent = useRef(null);\n  const autoPanStarted = useRef(false);\n  const dragStarted = useRef(false);\n  const getPointerPosition = useGetPointerPosition();\n  useEffect(() => {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      const selection = select(nodeRef.current);\n      const updateNodes = _ref50 => {\n        let {\n          x,\n          y\n        } = _ref50;\n        const {\n          nodeInternals,\n          onNodeDrag,\n          onSelectionDrag,\n          updateNodePositions,\n          nodeExtent,\n          snapGrid,\n          snapToGrid,\n          nodeOrigin,\n          onError\n        } = store.getState();\n        lastPos.current = {\n          x,\n          y\n        };\n        let hasChange = false;\n        let nodesBox = {\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 0\n        };\n        if (dragItems.current.length > 1 && nodeExtent) {\n          const rect = getNodesBounds(dragItems.current, nodeOrigin);\n          nodesBox = rectToBox(rect);\n        }\n        dragItems.current = dragItems.current.map(n => {\n          const nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n          // based on its position so that the node stays at it's position relative to the selection.\n          const adjustedNodeExtent = [[nodeExtent[0][0], nodeExtent[0][1]], [nodeExtent[1][0], nodeExtent[1][1]]];\n          if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n            var _n$width, _n$height;\n            adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n            adjustedNodeExtent[1][0] = n.positionAbsolute.x + ((_n$width = n.width) !== null && _n$width !== void 0 ? _n$width : 0) - nodesBox.x2 + nodeExtent[1][0];\n            adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n            adjustedNodeExtent[1][1] = n.positionAbsolute.y + ((_n$height = n.height) !== null && _n$height !== void 0 ? _n$height : 0) - nodesBox.y2 + nodeExtent[1][1];\n          }\n          const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a change\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      const autoPan = () => {\n        if (!containerBounds.current) {\n          return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          const {\n            transform,\n            panBy\n          } = store.getState();\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          if (panBy({\n            x: xMovement,\n            y: yMovement\n          })) {\n            updateNodes(lastPos.current);\n          }\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      const startDrag = event => {\n        const {\n          nodeInternals,\n          multiSelectionActive,\n          nodesDraggable,\n          unselectNodesAndEdges,\n          onNodeDragStart,\n          onSelectionDragStart\n        } = store.getState();\n        dragStarted.current = true;\n        const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n        if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n          var _nodeInternals$get;\n          if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n            // we need to reset selected nodes when selectNodesOnDrag=false\n            unselectNodesAndEdges();\n          }\n        }\n        if (nodeId && isSelectable && selectNodesOnDrag) {\n          handleNodeClick({\n            id: nodeId,\n            store,\n            nodeRef: nodeRef\n          });\n        }\n        const pointerPos = getPointerPosition(event);\n        lastPos.current = pointerPos;\n        dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n        if (onStart && dragItems.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onStart(event.sourceEvent, currentNode, nodes);\n        }\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            domNode,\n            nodeDragThreshold\n          } = store.getState();\n          if (nodeDragThreshold === 0) {\n            startDrag(event);\n          }\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', event => {\n          const pointerPos = getPointerPosition(event);\n          const {\n            autoPanOnNodeDrag,\n            nodeDragThreshold\n          } = store.getState();\n          if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          if (!dragStarted.current) {\n            var _lastPos$current$x2, _lastPos$current, _lastPos$current$y2, _lastPos$current2;\n            const x = pointerPos.xSnapped - ((_lastPos$current$x2 = lastPos === null || lastPos === void 0 || (_lastPos$current = lastPos.current) === null || _lastPos$current === void 0 ? void 0 : _lastPos$current.x) !== null && _lastPos$current$x2 !== void 0 ? _lastPos$current$x2 : 0);\n            const y = pointerPos.ySnapped - ((_lastPos$current$y2 = lastPos === null || lastPos === void 0 || (_lastPos$current2 = lastPos.current) === null || _lastPos$current2 === void 0 ? void 0 : _lastPos$current2.y) !== null && _lastPos$current$y2 !== void 0 ? _lastPos$current$y2 : 0);\n            const distance = Math.sqrt(x * x + y * y);\n            if (distance > nodeDragThreshold) {\n              startDrag(event);\n            }\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current && dragStarted.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', event => {\n          if (!dragStarted.current) {\n            return;\n          }\n          setDragging(false);\n          autoPanStarted.current = false;\n          dragStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(params => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions,\n      getNodes,\n      snapToGrid,\n      snapGrid,\n      onError,\n      nodesDraggable\n    } = store.getState();\n    const selectedNodes = getNodes().filter(n => n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined'));\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    const xVelo = snapToGrid ? snapGrid[0] : 5;\n    const yVelo = snapToGrid ? snapGrid[1] : 5;\n    const factor = params.isShiftPressed ? 4 : 1;\n    const positionDiffX = params.x * xVelo * factor;\n    const positionDiffY = params.y * yVelo * factor;\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        const {\n          positionAbsolute,\n          position\n        } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = _ref51 => {\n    let {\n      id,\n      type,\n      data,\n      xPos,\n      yPos,\n      xPosOrigin,\n      yPosOrigin,\n      selected,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onContextMenu,\n      onDoubleClick,\n      style,\n      className,\n      isDraggable,\n      isSelectable,\n      isConnectable,\n      isFocusable,\n      selectNodesOnDrag,\n      sourcePosition,\n      targetPosition,\n      hidden,\n      resizeObserver,\n      dragHandle,\n      zIndex,\n      isParent,\n      noDragClassName,\n      noPanClassName,\n      initialized,\n      disableKeyboardA11y,\n      ariaLabel,\n      rfId,\n      hasHandleBounds\n    } = _ref51;\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      const {\n        nodeDragThreshold\n      } = store.getState();\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store,\n          nodeRef\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        if (node) {\n          onClick(event, {\n            ...node\n          });\n        }\n      }\n    };\n    const onKeyDown = event => {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        handleNodeClick({\n          id,\n          store,\n          unselect,\n          nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(() => {\n      return () => {\n        if (nodeRef.current) {\n          resizeObserver === null || resizeObserver === void 0 || resizeObserver.unobserve(nodeRef.current);\n        }\n      };\n    }, []);\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        if (!initialized || !hasHandleBounds) {\n          // At this point we always want to make sure that the node gets re-measured / re-initialized.\n          // We need to unobserve it first in case it is still observed\n          resizeObserver === null || resizeObserver === void 0 || resizeObserver.unobserve(currNode);\n          resizeObserver === null || resizeObserver === void 0 || resizeObserver.observe(currNode);\n        }\n      }\n    }, [hidden, initialized, hasHandleBounds]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), {\n        // this is overwritable by passing `nopan` as a class name\n        [noPanClassName]: isDraggable\n      }, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging\n      }]),\n      ref: nodeRef,\n      style: {\n        zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden',\n        ...style\n      },\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel\n    }, React.createElement(Provider, {\n      value: id\n    }, React.createElement(NodeComponent, {\n      id: id,\n      data: data,\n      type: type,\n      xPos: xPos,\n      yPos: yPos,\n      selected: selected,\n      isConnectable: isConnectable,\n      sourcePosition: sourcePosition,\n      targetPosition: targetPosition,\n      dragging: dragging,\n      dragHandle: dragHandle,\n      zIndex: zIndex\n    })));\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = s => {\n  const selectedNodes = s.getNodes().filter(n => n.selected);\n  return {\n    ...getNodesBounds(selectedNodes, s.nodeOrigin),\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  };\n};\nfunction NodesSelection(_ref52) {\n  let {\n    onSelectionContextMenu,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref52;\n  const store = useStoreApi();\n  const {\n    width,\n    height,\n    x: left,\n    y: top,\n    transformString,\n    userSelectionActive\n  } = useStore(selector$7, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 || _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = store.getState().getNodes().filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return React.createElement(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    }\n  }, React.createElement(\"div\", {\n    ref: nodeRef,\n    className: \"react-flow__nodesselection-rect\",\n    onContextMenu: onContextMenu,\n    tabIndex: disableKeyboardA11y ? undefined : -1,\n    onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n    style: {\n      width,\n      height,\n      top,\n      left\n    }\n  }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$6 = s => s.nodesSelectionActive;\nconst FlowRenderer = _ref53 => {\n  let {\n    children,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneContextMenu,\n    onPaneScroll,\n    deleteKeyCode,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    onSelectionStart,\n    onSelectionEnd,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    elementsSelectable,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll: _panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag: _panOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    onSelectionContextMenu,\n    noWheelClassName,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref53;\n  const nodesSelectionActive = useStore(selector$6);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  const panOnDrag = panActivationKeyPressed || _panOnDrag;\n  const panOnScroll = panActivationKeyPressed || _panOnScroll;\n  const isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  return React.createElement(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName\n  }, React.createElement(Pane, {\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    panOnDrag: panOnDrag,\n    isSelecting: !!isSelecting,\n    selectionMode: selectionMode\n  }, children, nodesSelectionActive && React.createElement(NodesSelection$1, {\n    onSelectionContextMenu: onSelectionContextMenu,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y\n  })));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : s.getNodes(), [onlyRenderVisible]));\n  return nodes;\n}\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nconst getPositionWithOrigin = _ref54 => {\n  let {\n    x,\n    y,\n    width,\n    height,\n    origin\n  } = _ref54;\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst selector$5 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  nodesFocusable: s.nodesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions,\n  onError: s.onError\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    elementsSelectable,\n    updateNodeDimensions,\n    onError\n  } = useStore(selector$5, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 || (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 || _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle\n  }, nodes.map(node => {\n    var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol3, _node$internalsSymbol4, _node$internalsSymbol5, _node$internalsSymbol6;\n    let nodeType = node.type || 'default';\n    if (!props.nodeTypes[nodeType]) {\n      onError === null || onError === void 0 || onError('003', errorMessages['error003'](nodeType));\n      nodeType = 'default';\n    }\n    const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n    const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n    const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n    const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n    const isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n    const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n    const posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n    const posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n    const posOrigin = getPositionWithOrigin({\n      x: posX,\n      y: posY,\n      width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n      height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n      origin: props.nodeOrigin\n    });\n    return React.createElement(NodeComponent, {\n      key: node.id,\n      id: node.id,\n      className: node.className,\n      style: node.style,\n      type: nodeType,\n      data: node.data,\n      sourcePosition: node.sourcePosition || Position.Bottom,\n      targetPosition: node.targetPosition || Position.Top,\n      hidden: node.hidden,\n      xPos: posX,\n      yPos: posY,\n      xPosOrigin: posOrigin.x,\n      yPosOrigin: posOrigin.y,\n      selectNodesOnDrag: props.selectNodesOnDrag,\n      onClick: props.onNodeClick,\n      onMouseEnter: props.onNodeMouseEnter,\n      onMouseMove: props.onNodeMouseMove,\n      onMouseLeave: props.onNodeMouseLeave,\n      onContextMenu: props.onNodeContextMenu,\n      onDoubleClick: props.onNodeDoubleClick,\n      selected: !!node.selected,\n      isDraggable: isDraggable,\n      isSelectable: isSelectable,\n      isConnectable: isConnectable,\n      isFocusable: isFocusable,\n      resizeObserver: resizeObserver,\n      dragHandle: node.dragHandle,\n      zIndex: (_node$internalsSymbol3 = (_node$internalsSymbol4 = node[internalsSymbol]) === null || _node$internalsSymbol4 === void 0 ? void 0 : _node$internalsSymbol4.z) !== null && _node$internalsSymbol3 !== void 0 ? _node$internalsSymbol3 : 0,\n      isParent: !!((_node$internalsSymbol5 = node[internalsSymbol]) !== null && _node$internalsSymbol5 !== void 0 && _node$internalsSymbol5.isParent),\n      noDragClassName: props.noDragClassName,\n      noPanClassName: props.noPanClassName,\n      initialized: !!node.width && !!node.height,\n      rfId: props.rfId,\n      disableKeyboardA11y: props.disableKeyboardA11y,\n      ariaLabel: node.ariaLabel,\n      hasHandleBounds: !!((_node$internalsSymbol6 = node[internalsSymbol]) !== null && _node$internalsSymbol6 !== void 0 && _node$internalsSymbol6.handleBounds)\n    });\n  }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = _ref55 => {\n  let {\n    position,\n    centerX,\n    centerY,\n    radius = 10,\n    onMouseDown,\n    onMouseEnter,\n    onMouseOut,\n    type\n  } = _ref55;\n  return React.createElement(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nconst alwaysValidConnection = () => true;\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = _ref56 => {\n    let {\n      id,\n      className,\n      type,\n      data,\n      onClick,\n      onEdgeDoubleClick,\n      selected,\n      animated,\n      label,\n      labelStyle,\n      labelShowBg,\n      labelBgStyle,\n      labelBgPadding,\n      labelBgBorderRadius,\n      style,\n      source,\n      target,\n      sourceX,\n      sourceY,\n      targetX,\n      targetY,\n      sourcePosition,\n      targetPosition,\n      elementsSelectable,\n      hidden,\n      sourceHandleId,\n      targetHandleId,\n      onContextMenu,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      edgeUpdaterRadius,\n      onEdgeUpdate,\n      onEdgeUpdateStart,\n      onEdgeUpdateEnd,\n      markerEnd,\n      markerStart,\n      rfId,\n      ariaLabel,\n      isFocusable,\n      isUpdatable,\n      pathOptions,\n      interactionWidth\n    } = _ref56;\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => \"url('#\".concat(getMarkerId(markerStart, rfId), \"')\"), [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => \"url('#\".concat(getMarkerId(markerEnd, rfId), \"')\"), [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges,\n        unselectNodesAndEdges,\n        multiSelectionActive\n      } = store.getState();\n      const edge = edges.find(e => e.id === id);\n      if (!edge) {\n        return;\n      }\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        if (edge.selected && multiSelectionActive) {\n          var _edgeRef$current;\n          unselectNodesAndEdges({\n            nodes: [],\n            edges: [edge]\n          });\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 || _edgeRef$current.blur();\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n      if (onClick) {\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      const {\n        edges,\n        isValidConnection: isValidConnectionStore\n      } = store.getState();\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      const isTarget = isSourceHandle;\n      const edge = edges.find(e => e.id === id);\n      setUpdating(true);\n      onEdgeUpdateStart === null || onEdgeUpdateStart === void 0 || onEdgeUpdateStart(event, edge, handleType);\n      const _onEdgeUpdateEnd = evt => {\n        setUpdating(false);\n        onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 || onEdgeUpdateEnd(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onEdgeUpdate === null || onEdgeUpdate === void 0 ? void 0 : onEdgeUpdate(edge, connection);\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current2;\n          (_edgeRef$current2 = edgeRef.current) === null || _edgeRef$current2 === void 0 || _edgeRef$current2.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return React.createElement(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : 'img',\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef\n    }, !updating && React.createElement(EdgeComponent, {\n      id: id,\n      source: source,\n      target: target,\n      selected: selected,\n      animated: animated,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius,\n      data: data,\n      style: style,\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourcePosition: sourcePosition,\n      targetPosition: targetPosition,\n      sourceHandleId: sourceHandleId,\n      targetHandleId: targetHandleId,\n      markerStart: markerStartUrl,\n      markerEnd: markerEndUrl,\n      pathOptions: pathOptions,\n      interactionWidth: interactionWidth\n    }), isUpdatable && React.createElement(React.Fragment, null, (isUpdatable === 'source' || isUpdatable === true) && React.createElement(EdgeAnchor, {\n      position: sourcePosition,\n      centerX: sourceX,\n      centerY: sourceY,\n      radius: edgeUpdaterRadius,\n      onMouseDown: onEdgeUpdaterSourceMouseDown,\n      onMouseEnter: onEdgeUpdaterMouseEnter,\n      onMouseOut: onEdgeUpdaterMouseOut,\n      type: \"source\"\n    }), (isUpdatable === 'target' || isUpdatable === true) && React.createElement(EdgeAnchor, {\n      position: targetPosition,\n      centerX: targetX,\n      centerY: targetY,\n      radius: edgeUpdaterRadius,\n      onMouseDown: onEdgeUpdaterTargetMouseDown,\n      onMouseEnter: onEdgeUpdaterMouseEnter,\n      onMouseOut: onEdgeUpdaterMouseOut,\n      type: \"target\"\n    })));\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nfunction getHandlePosition(position, nodeRect) {\n  let handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  const y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  const width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  const height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(d => d.id === handleId) || null;\n  }\n  return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref57) {\n  let {\n    sourcePos,\n    targetPos,\n    sourceWidth,\n    sourceHeight,\n    targetWidth,\n    targetHeight,\n    width,\n    height,\n    transform\n  } = _ref57;\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol7, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  const handleBounds = (node === null || node === void 0 || (_node$internalsSymbol7 = node[internalsSymbol]) === null || _node$internalsSymbol7 === void 0 ? void 0 : _node$internalsSymbol7.handleBounds) || null;\n  const isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 || (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 || (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 || (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 || (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  let elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _sourceNode$internals, _targetNode$internals;\n      const targetNode = nodeInternals.get(edge.target);\n      const sourceNode = nodeInternals.get(edge.source);\n      const edgeOrConnectedNodeSelected = edge.selected || (targetNode === null || targetNode === void 0 ? void 0 : targetNode.selected) || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.selected);\n      const selectedZIndex = Math.max((sourceNode === null || sourceNode === void 0 || (_sourceNode$internals = sourceNode[internalsSymbol]) === null || _sourceNode$internals === void 0 ? void 0 : _sourceNode$internals.z) || 0, (targetNode === null || targetNode === void 0 || (_targetNode$internals = targetNode[internalsSymbol]) === null || _targetNode$internals === void 0 ? void 0 : _targetNode$internals.z) || 0, 1000);\n      z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(_ref58 => {\n    let [key, edges] = _ref58;\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst ArrowSymbol = _ref59 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref59;\n  return React.createElement(\"polyline\", {\n    style: {\n      stroke: color,\n      strokeWidth\n    },\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = _ref60 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref60;\n  return React.createElement(\"polyline\", {\n    style: {\n      stroke: color,\n      fill: color,\n      strokeWidth\n    },\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const store = useStoreApi();\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState3;\n      (_store$getState$onErr3 = (_store$getState3 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 || _store$getState$onErr3.call(_store$getState3, '009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = _ref61 => {\n  let {\n    id,\n    type,\n    color,\n    width = 12.5,\n    height = 12.5,\n    markerUnits = 'strokeWidth',\n    strokeWidth,\n    orient = 'auto-start-reverse'\n  } = _ref61;\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return React.createElement(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\"\n  }, React.createElement(Symbol, {\n    color: color,\n    strokeWidth: strokeWidth\n  }));\n};\nconst markerSelector = _ref62 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref62;\n  return s => {\n    const ids = [];\n    return s.edges.reduce((markers, edge) => {\n      [edge.markerStart, edge.markerEnd].forEach(marker => {\n        if (marker && typeof marker === 'object') {\n          const markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push({\n              id: markerId,\n              color: marker.color || defaultColor,\n              ...marker\n            });\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort((a, b) => a.id.localeCompare(b.id));\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = _ref63 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref63;\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return React.createElement(\"defs\", null, markers.map(marker => React.createElement(Marker, {\n    id: marker.id,\n    key: marker.id,\n    type: marker.type,\n    color: marker.color,\n    width: marker.width,\n    height: marker.height,\n    markerUnits: marker.markerUnits,\n    strokeWidth: marker.strokeWidth,\n    orient: marker.orient\n  })));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$4 = s => ({\n  nodesConnectable: s.nodesConnectable,\n  edgesFocusable: s.edgesFocusable,\n  edgesUpdatable: s.edgesUpdatable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals,\n  onError: s.onError\n});\nconst EdgeRenderer = _ref64 => {\n  let {\n    defaultMarkerColor,\n    onlyRenderVisibleElements,\n    elevateEdgesOnSelect,\n    rfId,\n    edgeTypes,\n    noPanClassName,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeClick,\n    edgeUpdaterRadius,\n    onEdgeDoubleClick,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    children\n  } = _ref64;\n  const {\n    edgesFocusable,\n    edgesUpdatable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals,\n    onError\n  } = useStore(selector$4, shallow);\n  const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, edgeTree.map(_ref65 => {\n    let {\n      level,\n      edges,\n      isMaxLevel\n    } = _ref65;\n    return React.createElement(\"svg\", {\n      key: level,\n      style: {\n        zIndex: level\n      },\n      width: width,\n      height: height,\n      className: \"react-flow__edges react-flow__container\"\n    }, isMaxLevel && React.createElement(MarkerDefinitions$1, {\n      defaultColor: defaultMarkerColor,\n      rfId: rfId\n    }), React.createElement(\"g\", null, edges.map(edge => {\n      var _targetHandleBounds$t, _targetHandleBounds$s;\n      const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n      const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n      if (!sourceIsValid || !targetIsValid) {\n        return null;\n      }\n      let edgeType = edge.type || 'default';\n      if (!edgeTypes[edgeType]) {\n        onError === null || onError === void 0 || onError('011', errorMessages['error011'](edgeType));\n        edgeType = 'default';\n      }\n      const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n      // when connection type is loose we can define all handles as sources and connect source -> source\n      const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n      const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n      const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n      const sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n      const targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n      const isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n      const isUpdatable = typeof onEdgeUpdate !== 'undefined' && (edge.updatable || edgesUpdatable && typeof edge.updatable === 'undefined');\n      if (!sourceHandle || !targetHandle) {\n        onError === null || onError === void 0 || onError('008', errorMessages['error008'](sourceHandle, edge));\n        return null;\n      }\n      const {\n        sourceX,\n        sourceY,\n        targetX,\n        targetY\n      } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n      return React.createElement(EdgeComponent, {\n        key: edge.id,\n        id: edge.id,\n        className: cc([edge.className, noPanClassName]),\n        type: edgeType,\n        data: edge.data,\n        selected: !!edge.selected,\n        animated: !!edge.animated,\n        hidden: !!edge.hidden,\n        label: edge.label,\n        labelStyle: edge.labelStyle,\n        labelShowBg: edge.labelShowBg,\n        labelBgStyle: edge.labelBgStyle,\n        labelBgPadding: edge.labelBgPadding,\n        labelBgBorderRadius: edge.labelBgBorderRadius,\n        style: edge.style,\n        source: edge.source,\n        target: edge.target,\n        sourceHandleId: edge.sourceHandle,\n        targetHandleId: edge.targetHandle,\n        markerEnd: edge.markerEnd,\n        markerStart: edge.markerStart,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        elementsSelectable: elementsSelectable,\n        onEdgeUpdate: onEdgeUpdate,\n        onContextMenu: onEdgeContextMenu,\n        onMouseEnter: onEdgeMouseEnter,\n        onMouseMove: onEdgeMouseMove,\n        onMouseLeave: onEdgeMouseLeave,\n        onClick: onEdgeClick,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        rfId: rfId,\n        ariaLabel: edge.ariaLabel,\n        isFocusable: isFocusable,\n        isUpdatable: isUpdatable,\n        pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n        interactionWidth: edge.interactionWidth\n      });\n    })));\n  }), children);\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$3 = s => \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\nfunction Viewport(_ref66) {\n  let {\n    children\n  } = _ref66;\n  const transform = useStore(selector$3);\n  return React.createElement(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    }\n  }, children);\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = _ref67 => {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  let {\n    nodeId,\n    handleType,\n    style,\n    type = ConnectionLineType.Bezier,\n    CustomComponent,\n    connectionStatus\n  } = _ref67;\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY,\n    connectionMode\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(nodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n    connectionMode: s.connectionMode\n  }), [nodeId]), shallow);\n  const fromHandleBounds = fromNode === null || fromNode === void 0 || (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  let handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  const fromHandle = handleId ? handleBounds.find(d => d.id === handleId) : handleBounds[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  const fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  const fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  const fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return React.createElement(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (type === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath({\n      ...pathParams,\n      borderRadius: 0\n    });\n  } else if (type === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return React.createElement(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = s => ({\n  nodeId: s.connectionNodeId,\n  handleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  connectionStatus: s.connectionStatus,\n  width: s.width,\n  height: s.height\n});\nfunction ConnectionLineWrapper(_ref68) {\n  let {\n    containerStyle,\n    style,\n    type,\n    component\n  } = _ref68;\n  const {\n    nodeId,\n    handleType,\n    nodesConnectable,\n    width,\n    height,\n    connectionStatus\n  } = useStore(selector$2, shallow);\n  const isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return React.createElement(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\"\n  }, React.createElement(\"g\", {\n    className: cc(['react-flow__connection', connectionStatus])\n  }, React.createElement(ConnectionLine, {\n    nodeId: nodeId,\n    handleType: handleType,\n    style: style,\n    type: type,\n    CustomComponent: component,\n    connectionStatus: connectionStatus\n  })));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const store = useStoreApi();\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        var _store$getState$onErr4, _store$getState4;\n        (_store$getState$onErr4 = (_store$getState4 = store.getState()).onError) === null || _store$getState$onErr4 === void 0 || _store$getState$onErr4.call(_store$getState4, '002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst GraphView = _ref69 => {\n  let {\n    nodeTypes,\n    edgeTypes,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onInit,\n    onNodeClick,\n    onEdgeClick,\n    onNodeDoubleClick,\n    onEdgeDoubleClick,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionLineType,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    deleteKeyCode,\n    onlyRenderVisibleElements,\n    elementsSelectable,\n    selectNodesOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    defaultMarkerColor,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    edgeUpdaterRadius,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    noDragClassName,\n    noWheelClassName,\n    noPanClassName,\n    elevateEdgesOnSelect,\n    disableKeyboardA11y,\n    nodeOrigin,\n    nodeExtent,\n    rfId\n  } = _ref69;\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  useOnInitHandler(onInit);\n  return React.createElement(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y\n  }, React.createElement(Viewport, null, React.createElement(EdgeRenderer$1, {\n    edgeTypes: edgeTypesWrapped,\n    onEdgeClick: onEdgeClick,\n    onEdgeDoubleClick: onEdgeDoubleClick,\n    onEdgeUpdate: onEdgeUpdate,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    onEdgeContextMenu: onEdgeContextMenu,\n    onEdgeMouseEnter: onEdgeMouseEnter,\n    onEdgeMouseMove: onEdgeMouseMove,\n    onEdgeMouseLeave: onEdgeMouseLeave,\n    onEdgeUpdateStart: onEdgeUpdateStart,\n    onEdgeUpdateEnd: onEdgeUpdateEnd,\n    edgeUpdaterRadius: edgeUpdaterRadius,\n    defaultMarkerColor: defaultMarkerColor,\n    noPanClassName: noPanClassName,\n    elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n    disableKeyboardA11y: disableKeyboardA11y,\n    rfId: rfId\n  }, React.createElement(ConnectionLineWrapper, {\n    style: connectionLineStyle,\n    type: connectionLineType,\n    component: connectionLineComponent,\n    containerStyle: connectionLineContainerStyle\n  })), React.createElement(\"div\", {\n    className: \"react-flow__edgelabel-renderer\"\n  }), React.createElement(NodeRenderer$1, {\n    nodeTypes: nodeTypesWrapped,\n    onNodeClick: onNodeClick,\n    onNodeDoubleClick: onNodeDoubleClick,\n    onNodeMouseEnter: onNodeMouseEnter,\n    onNodeMouseMove: onNodeMouseMove,\n    onNodeMouseLeave: onNodeMouseLeave,\n    onNodeContextMenu: onNodeContextMenu,\n    selectNodesOnDrag: selectNodesOnDrag,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    noPanClassName: noPanClassName,\n    noDragClassName: noDragClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    nodeOrigin: nodeOrigin,\n    nodeExtent: nodeExtent,\n    rfId: rfId\n  })));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  nodeDragThreshold: 0,\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  onSelectionChange: [],\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n  ...initialState,\n  setNodes: nodes => {\n    const {\n      nodeInternals,\n      nodeOrigin,\n      elevateNodesOnSelect\n    } = get();\n    set({\n      nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n    });\n  },\n  getNodes: () => {\n    return Array.from(get().nodeInternals.values());\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => ({\n        ...defaultEdgeOptions,\n        ...e\n      }))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, {\n            ...node,\n            [internalsSymbol]: {\n              ...node[internalsSymbol],\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            },\n            ...dimensions\n          });\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, {\n      initial: true,\n      ...fitViewOnInitOptions\n    });\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n      onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n    }\n  },\n  updateNodePositions: function (nodeDragItems) {\n    let positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      triggerNodeChanges\n    } = get();\n    const changes = nodeDragItems.map(node => {\n      const change = {\n        id: node.id,\n        type: 'position',\n        dragging\n      };\n      if (positionChanged) {\n        change.positionAbsolute = node.positionAbsolute;\n        change.position = node.position;\n      }\n      return change;\n    });\n    triggerNodeChanges(changes);\n  },\n  triggerNodeChanges: changes => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes,\n      nodeOrigin,\n      getNodes,\n      elevateNodesOnSelect\n    } = get();\n    if (changes !== null && changes !== void 0 && changes.length) {\n      if (hasDefaultNodes) {\n        const nodes = applyNodeChanges(changes, getNodes());\n        const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n        set({\n          nodeInternals: nextNodeInternals\n        });\n      }\n      onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(getNodes(), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: function () {\n    let {\n      nodes,\n      edges\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      edges: storeEdges,\n      getNodes\n    } = get();\n    const nodesToUnselect = nodes ? nodes : getNodes();\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    var _get$d3Zoom;\n    (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 || _get$d3Zoom.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      edges,\n      getNodes\n    } = get();\n    const nodes = getNodes();\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  panBy: delta => {\n    const {\n      transform,\n      width,\n      height,\n      d3Zoom,\n      d3Selection,\n      translateExtent\n    } = get();\n    if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n      return false;\n    }\n    const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n    const extent = [[0, 0], [width, height]];\n    const constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n    d3Zoom.transform(d3Selection, constrainedTransform);\n    const transformChanged = transform[0] !== constrainedTransform.x || transform[1] !== constrainedTransform.y || transform[2] !== constrainedTransform.k;\n    return transformChanged;\n  },\n  cancelConnection: () => set({\n    connectionNodeId: initialState.connectionNodeId,\n    connectionHandleId: initialState.connectionHandleId,\n    connectionHandleType: initialState.connectionHandleType,\n    connectionStatus: initialState.connectionStatus,\n    connectionStartHandle: initialState.connectionStartHandle,\n    connectionEndHandle: initialState.connectionEndHandle\n  }),\n  reset: () => set({\n    ...initialState\n  })\n}), Object.is);\nconst ReactFlowProvider = _ref70 => {\n  let {\n    children\n  } = _ref70;\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return React.createElement(Provider$1, {\n    value: storeRef.current\n  }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = _ref71 => {\n  let {\n    children\n  } = _ref71;\n  const isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return React.createElement(React.Fragment, null, children);\n  }\n  return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nconst ReactFlow = forwardRef((_ref72, ref) => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    className,\n    nodeTypes = defaultNodeTypes,\n    edgeTypes = defaultEdgeTypes,\n    onNodeClick,\n    onEdgeClick,\n    onInit,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onNodeDoubleClick,\n    onNodeDragStart,\n    onNodeDrag,\n    onNodeDragStop,\n    onNodesDelete,\n    onEdgesDelete,\n    onSelectionChange,\n    onSelectionDragStart,\n    onSelectionDrag,\n    onSelectionDragStop,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionMode = ConnectionMode.Strict,\n    connectionLineType = ConnectionLineType.Bezier,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    deleteKeyCode = 'Backspace',\n    selectionKeyCode = 'Shift',\n    selectionOnDrag = false,\n    selectionMode = SelectionMode.Full,\n    panActivationKeyCode = 'Space',\n    multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control',\n    zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control',\n    snapToGrid = false,\n    snapGrid = initSnapGrid,\n    onlyRenderVisibleElements = false,\n    selectNodesOnDrag = true,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    nodeOrigin = initNodeOrigin,\n    edgesFocusable,\n    edgesUpdatable,\n    elementsSelectable,\n    defaultViewport = initDefaultViewport,\n    minZoom = 0.5,\n    maxZoom = 2,\n    translateExtent = infiniteExtent,\n    preventScrolling = true,\n    nodeExtent,\n    defaultMarkerColor = '#b1b1b7',\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    panOnDrag = true,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    children,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeDoubleClick,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    edgeUpdaterRadius = 10,\n    onNodesChange,\n    onEdgesChange,\n    noDragClassName = 'nodrag',\n    noWheelClassName = 'nowheel',\n    noPanClassName = 'nopan',\n    fitView = false,\n    fitViewOptions,\n    connectOnClick = true,\n    attributionPosition,\n    proOptions,\n    defaultEdgeOptions,\n    elevateNodesOnSelect = true,\n    elevateEdgesOnSelect = false,\n    disableKeyboardA11y = false,\n    autoPanOnConnect = true,\n    autoPanOnNodeDrag = true,\n    connectionRadius = 20,\n    isValidConnection,\n    onError,\n    style,\n    id,\n    nodeDragThreshold,\n    ...rest\n  } = _ref72;\n  const rfId = id || '1';\n  return React.createElement(\"div\", {\n    ...rest,\n    style: {\n      ...style,\n      ...wrapperStyle\n    },\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id\n  }, React.createElement(Wrapper, null, React.createElement(GraphView$1, {\n    onInit: onInit,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onNodeClick: onNodeClick,\n    onEdgeClick: onEdgeClick,\n    onNodeMouseEnter: onNodeMouseEnter,\n    onNodeMouseMove: onNodeMouseMove,\n    onNodeMouseLeave: onNodeMouseLeave,\n    onNodeContextMenu: onNodeContextMenu,\n    onNodeDoubleClick: onNodeDoubleClick,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    connectionLineType: connectionLineType,\n    connectionLineStyle: connectionLineStyle,\n    connectionLineComponent: connectionLineComponent,\n    connectionLineContainerStyle: connectionLineContainerStyle,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    selectNodesOnDrag: selectNodesOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    preventScrolling: preventScrolling,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneScroll: onPaneScroll,\n    onPaneContextMenu: onPaneContextMenu,\n    onSelectionContextMenu: onSelectionContextMenu,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    onEdgeUpdate: onEdgeUpdate,\n    onEdgeContextMenu: onEdgeContextMenu,\n    onEdgeDoubleClick: onEdgeDoubleClick,\n    onEdgeMouseEnter: onEdgeMouseEnter,\n    onEdgeMouseMove: onEdgeMouseMove,\n    onEdgeMouseLeave: onEdgeMouseLeave,\n    onEdgeUpdateStart: onEdgeUpdateStart,\n    onEdgeUpdateEnd: onEdgeUpdateEnd,\n    edgeUpdaterRadius: edgeUpdaterRadius,\n    defaultMarkerColor: defaultMarkerColor,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    elevateEdgesOnSelect: elevateEdgesOnSelect,\n    rfId: rfId,\n    disableKeyboardA11y: disableKeyboardA11y,\n    nodeOrigin: nodeOrigin,\n    nodeExtent: nodeExtent\n  }), React.createElement(StoreUpdater, {\n    nodes: nodes,\n    edges: edges,\n    defaultNodes: defaultNodes,\n    defaultEdges: defaultEdges,\n    onConnect: onConnect,\n    onConnectStart: onConnectStart,\n    onConnectEnd: onConnectEnd,\n    onClickConnectStart: onClickConnectStart,\n    onClickConnectEnd: onClickConnectEnd,\n    nodesDraggable: nodesDraggable,\n    nodesConnectable: nodesConnectable,\n    nodesFocusable: nodesFocusable,\n    edgesFocusable: edgesFocusable,\n    edgesUpdatable: edgesUpdatable,\n    elementsSelectable: elementsSelectable,\n    elevateNodesOnSelect: elevateNodesOnSelect,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    nodeExtent: nodeExtent,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    snapToGrid: snapToGrid,\n    snapGrid: snapGrid,\n    connectionMode: connectionMode,\n    translateExtent: translateExtent,\n    connectOnClick: connectOnClick,\n    defaultEdgeOptions: defaultEdgeOptions,\n    fitView: fitView,\n    fitViewOptions: fitViewOptions,\n    onNodesDelete: onNodesDelete,\n    onEdgesDelete: onEdgesDelete,\n    onNodeDragStart: onNodeDragStart,\n    onNodeDrag: onNodeDrag,\n    onNodeDragStop: onNodeDragStop,\n    onSelectionDrag: onSelectionDrag,\n    onSelectionDragStart: onSelectionDragStart,\n    onSelectionDragStop: onSelectionDragStop,\n    noPanClassName: noPanClassName,\n    nodeOrigin: nodeOrigin,\n    rfId: rfId,\n    autoPanOnConnect: autoPanOnConnect,\n    autoPanOnNodeDrag: autoPanOnNodeDrag,\n    onError: onError,\n    connectionRadius: connectionRadius,\n    isValidConnection: isValidConnection,\n    nodeDragThreshold: nodeDragThreshold\n  }), React.createElement(Wrapper$1, {\n    onSelectionChange: onSelectionChange\n  }), children, React.createElement(Attribution, {\n    proOptions: proOptions,\n    position: attributionPosition\n  }), React.createElement(A11yDescriptions, {\n    rfId: rfId,\n    disableKeyboardA11y: disableKeyboardA11y\n  })));\n});\nReactFlow.displayName = 'ReactFlow';\nconst selector$1 = s => {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref73) {\n  let {\n    children\n  } = _ref73;\n  const edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const updateIds = Array.isArray(id) ? id : [id];\n    const updates = updateIds.reduce((res, updateId) => {\n      const nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(updateId, \"\\\"]\"));\n      if (nodeElement) {\n        res.push({\n          id: updateId,\n          nodeElement,\n          forceUpdate: true\n        });\n      }\n      return res;\n    }, []);\n    requestAnimationFrame(() => updateNodeDimensions(updates));\n  }, []);\n}\nconst nodesSelector = state => state.getNodes();\nfunction useNodes() {\n  const nodes = useStore(nodesSelector, shallow);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector, shallow);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref74) {\n  let {\n    onStart,\n    onChange,\n    onEnd\n  } = _ref74;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref75) {\n  let {\n    onChange\n  } = _ref75;\n  const store = useStoreApi();\n  useEffect(() => {\n    const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n    store.setState({\n      onSelectionChange: nextSelectionChangeHandlers\n    });\n    return () => {\n      const nextHandlers = store.getState().onSelectionChange.filter(fn => fn !== onChange);\n      store.setState({\n        onSelectionChange: nextHandlers\n      });\n    };\n  }, [onChange]);\n}\nconst selector = options => s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().filter(n => options.includeHiddenNodes ? true : !n.hidden).every(n => {\n    var _n$internalsSymbol;\n    return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n  });\n};\nconst defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  const initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["React","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStoreWithEqualityFn","createWithEqualityFn","shallow","zoomIdentity","zoom","select","pointer","drag","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","concat","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","pointerEvents","positionClasses","split","createElement","Attribution","_ref2","proOptions","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","edgeTextBbox","setEdgeTextBbox","width","height","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","_navigator","navigator","userAgent","indexOf","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","interactionWidth","Fragment","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","_ref11","handleDirections","getDirection","_ref12","source","distance","a","b","sqrt","pow","getPoints","_ref13","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","sourceGapPoint","targetGapPoint","maxXDistance","maxYDistance","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","borderRadius","reduce","res","p","i","segment","SmoothStepEdge","_ref15","pathOptions","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref16","StraightEdge","_ref17","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","BezierEdge","_ref20","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","tx","ty","tScale","snapX","snapY","round","rendererPointToPoint","_ref25","_ref26","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getNodesBounds","box","currBox","Infinity","getRectOfNodes","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","getViewportForBounds","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","doc","connectionRadius","handles","validator","domNodes","elementsFromPoint","handleBelow","classList","contains","handleNodeId","getAttribute","handleType","getHandleType","handleId","validHandleResult","handle","closestHandles","minDistance","defaultResult","hasValidHandle","_ref27","isValid","hasTargetHandle","_ref28","_ref29","nullConnection","handleDomNode","connection","endHandle","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","isTarget","handleToCheck","querySelector","result","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","_ref30","sourceHandles","targetHandles","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref31","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","closestHandle","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","add","toggle","onPointerUp","_getState$onConnectEn","_getState","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","connectionClickStartHandle","clickHandle","connecting","clickConnecting","Handle","_ref32","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","_store$getState$onErr","_store$getState","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","_ref33","data","DefaultNode$1","InputNode","_ref34","InputNode$1","OutputNode","_ref35","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref36","onSelectionChange","fn","changeSelector","Wrapper$1","_ref37","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref38","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","nodeDragThreshold","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref39","A11yDescriptions","_ref40","disableKeyboardA11y","useKeyPress","keyCode","actInsideInputWithModifier","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","preventAction","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol","_node$internalsSymbol2","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","zIndex","currInternals","internals","resetHandleBounds","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref41","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","screenToFlowPosition","flowToScreenPosition","viewportInitialized","selector$b","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","nextZoom","_options$padding2","domX","domY","relativePosition","rendererPosition","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","changes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","deleteElements","_ref42","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","deleteKeyOptions","useGlobalKeyHandler","_ref43","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","nodesSelectionActive","multiSelectionActive","useResizeHandler","rendererNode","resizeObserver","updateDimensions","_store$getState$onErr2","_store$getState2","ResizeObserver","observe","unobserve","containerStyle","viewChanged","prevViewport","eventTransform","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","_ref44","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","on","stopImmediatePropagation","currentZoom","property","_isMacOs","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","passive","_event$sourceEvent","_event$sourceEvent2","sourceEvent","flowTransform","paneDragging","_mouseButton$current","_event$sourceEvent3","_mouseButton$current2","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","isActive","handleParentExpand","updateItem","parent","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref45","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onContextMenu","onWheel","startX","startY","onMouseMove","_userSelectionRect$st","_userSelectionRect$st2","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","hasActiveSelection","onMouseEnter","isParentSelected","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","clampNodeExtent","calcNextPosition","nextPosition","clampedNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","_ref46","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref47","unselect","addSelectedNodes","unselectNodesAndEdges","_nodeRef$current","blur","useGetPointerPosition","getPointerPosition","_ref48","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref49","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","dragStarted","updateNodes","_ref50","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","_n$width","_n$height","updatedPos","onDrag","currentNode","_lastPos$current$x","_lastPos$current$y","startDrag","onStart","_nodeInternals$get","dragHandler","_lastPos$current$x2","_lastPos$current","_lastPos$current$y2","_lastPos$current2","onStop","isDraggable","useUpdateNodePositions","updatePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref51","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isFocusable","dragHandle","initialized","ariaLabel","hasHandleBounds","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","tabIndex","role","selector$7","transformString","NodesSelection","_ref52","onSelectionContextMenu","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref53","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnScroll","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","createNodeTypes","nodeTypes","standardTypes","input","default","output","group","wrappedTypes","specialTypes","getPositionWithOrigin","_ref54","origin","selector$5","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol3","_node$internalsSymbol4","_node$internalsSymbol5","_node$internalsSymbol6","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref55","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref56","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","_edgeRef$current","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","_edgeRef$current2","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref57","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol7","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_sourceNode$internals","_targetNode$internals","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","_ref58","useVisibleEdges","ArrowSymbol","_ref59","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref60","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState3","Marker","_ref61","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref62","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref63","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref64","defaultMarkerColor","_ref65","_targetHandleBounds$t","_targetHandleBounds$s","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","EdgeRenderer$1","selector$3","Viewport","_ref66","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","ConnectionLine","_ref67","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","_ref68","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","_store$getState$onErr4","_store$getState4","GraphView","_ref69","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","_get$d3Zoom","transformChanged","is","ReactFlowProvider","_ref70","storeRef","Wrapper","_ref71","isWrapped","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref72","attributionPosition","selector$1","_s$domNode","EdgeLabelRenderer","_ref73","edgeLabelRenderer","useUpdateNodeInternals","updateIds","updateId","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref74","onChange","onEnd","useOnSelectionChange","_ref75","nextSelectionChangeHandlers","nextHandlers","_n$internalsSymbol","defaultOptions","useNodesInitialized"],"sources":["D:/Flowise/node_modules/@reactflow/core/dist/esm/index.mjs"],"sourcesContent":["import React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (React.createElement(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest }, children));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (React.createElement(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\" },\n        React.createElement(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\" }, \"React Flow\")));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (React.createElement(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest },\n        labelShowBg && (React.createElement(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })),\n        React.createElement(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle }, label),\n        children));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }),\n        interactionWidth && (React.createElement(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })),\n        label && isNumeric(labelX) && isNumeric(labelY) ? (React.createElement(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (React.createElement(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getNodesBounds = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n    return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n    console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n    return [x, y, zoom];\n};\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                const handle = handles.find((h) => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: handle?.x || pos.x,\n                        y: handle?.y || pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (React.createElement(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest }, children));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n        data?.label,\n        React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (React.createElement(React.Fragment, null,\n    data?.label,\n    React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (React.createElement(React.Fragment, null,\n    React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n    data?.label));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return React.createElement(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, nodeDragThreshold, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (React.createElement(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle }, ariaLiveMessage));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style },\n            \"Press enter or space to select a node.\",\n            !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.',\n            \" Press delete to remove it and escape to cancel.\",\n            ' '),\n        React.createElement(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"),\n        !disableKeyboardA11y && React.createElement(AriaLiveMessage, { rfId: rfId })));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { actInsideInputWithModifier: true }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const doc = typeof document !== 'undefined' ? document : null;\n        const target = options?.target || doc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            parentNodes[node.parentNode] = true;\n        }\n        const resetHandleBounds = currInternals?.type && currInternals?.type !== node.type;\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: resetHandleBounds ? undefined : currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getNodesBounds(nodes, nodeOrigin);\n            const { x, y, zoom } = getViewportForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    screenToFlowPosition: (position) => position,\n    flowToScreenPosition: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                // @deprecated Use `screenToFlowPosition`.\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                screenToFlowPosition: (position) => {\n                    const { transform, snapToGrid, snapGrid, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const relativePosition = {\n                        x: position.x - domX,\n                        y: position.y - domY,\n                    };\n                    return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n                },\n                flowToScreenPosition: (position) => {\n                    const { transform, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const rendererPosition = rendererPointToPoint(position, transform);\n                    return {\n                        x: rendererPosition.x + domX,\n                        y: rendererPosition.y + domY,\n                    };\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        if (!isRect && !node) {\n            return [null, null, isRect];\n        }\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    const _isMacOs = isMacOs();\n                    // macos sets ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if ((panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(1))) &&\n                    event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) &&\n                    (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (React.createElement(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle }, children));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (React.createElement(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle },\n        children,\n        React.createElement(UserSelection, null)));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n        expandParent: n.expandParent,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode && node.extent !== 'parent') {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const dragStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getNodesBounds(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            const startDrag = (event) => {\n                const { nodeInternals, multiSelectionActive, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                dragStarted.current = true;\n                const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                    if (!nodeInternals.get(nodeId)?.selected) {\n                        // we need to reset selected nodes when selectNodesOnDrag=false\n                        unselectNodesAndEdges();\n                    }\n                }\n                if (nodeId && isSelectable && selectNodesOnDrag) {\n                    handleNodeClick({\n                        id: nodeId,\n                        store,\n                        nodeRef: nodeRef,\n                    });\n                }\n                const pointerPos = getPointerPosition(event);\n                lastPos.current = pointerPos;\n                dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                if (onStart && dragItems.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onStart(event.sourceEvent, currentNode, nodes);\n                }\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { domNode, nodeDragThreshold } = store.getState();\n                    if (nodeDragThreshold === 0) {\n                        startDrag(event);\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag, nodeDragThreshold } = store.getState();\n                    if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    if (!dragStarted.current) {\n                        const x = pointerPos.xSnapped - (lastPos?.current?.x ?? 0);\n                        const y = pointerPos.ySnapped - (lastPos?.current?.y ?? 0);\n                        const distance = Math.sqrt(x * x + y * y);\n                        if (distance > nodeDragThreshold) {\n                            startDrag(event);\n                        }\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current &&\n                        dragStarted.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    if (!dragStarted.current) {\n                        return;\n                    }\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    dragStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, hasHandleBounds, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            const { nodeDragThreshold } = store.getState();\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            return () => {\n                if (nodeRef.current) {\n                    resizeObserver?.unobserve(nodeRef.current);\n                }\n            };\n        }, []);\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                if (!initialized || !hasHandleBounds) {\n                    // At this point we always want to make sure that the node gets re-measured / re-initialized.\n                    // We need to unobserve it first in case it is still observed\n                    resizeObserver?.unobserve(currNode);\n                    resizeObserver?.observe(currNode);\n                }\n            }\n        }, [hidden, initialized, hasHandleBounds]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel },\n            React.createElement(Provider, { value: id },\n                React.createElement(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }))));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getNodesBounds(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (React.createElement(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        } },\n        React.createElement(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } })));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (React.createElement(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName },\n        React.createElement(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode },\n            children,\n            nodesSelectionActive && (React.createElement(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y })))));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (React.createElement(\"div\", { className: \"react-flow__nodes\", style: containerStyle }, nodes.map((node) => {\n        let nodeType = node.type || 'default';\n        if (!props.nodeTypes[nodeType]) {\n            onError?.('003', errorMessages['error003'](nodeType));\n            nodeType = 'default';\n        }\n        const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n        const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n        const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n        const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n        const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n        const clampedPosition = props.nodeExtent\n            ? clampPosition(node.positionAbsolute, props.nodeExtent)\n            : node.positionAbsolute;\n        const posX = clampedPosition?.x ?? 0;\n        const posY = clampedPosition?.y ?? 0;\n        const posOrigin = getPositionWithOrigin({\n            x: posX,\n            y: posY,\n            width: node.width ?? 0,\n            height: node.height ?? 0,\n            origin: props.nodeOrigin,\n        });\n        return (React.createElement(NodeComponent, { key: node.id, id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel, hasHandleBounds: !!node[internalsSymbol]?.handleBounds }));\n    })));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (React.createElement(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url('#${getMarkerId(markerStart, rfId)}')`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url('#${getMarkerId(markerEnd, rfId)}')`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n            const edge = edges.find((e) => e.id === id);\n            if (!edge) {\n                return;\n            }\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                if (edge.selected && multiSelectionActive) {\n                    unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                    edgeRef.current?.blur();\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n            if (onClick) {\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (React.createElement(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef },\n            !updating && (React.createElement(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })),\n            isUpdatable && (React.createElement(React.Fragment, null,\n                (isUpdatable === 'source' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })),\n                (isUpdatable === 'target' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))))));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (React.createElement(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\" },\n        React.createElement(Symbol, { color: color, strokeWidth: strokeWidth })));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (React.createElement(\"defs\", null, markers.map((marker) => (React.createElement(Marker, { id: marker.id, key: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient })))));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        edgeTree.map(({ level, edges, isMaxLevel }) => (React.createElement(\"svg\", { key: level, style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\" },\n            isMaxLevel && React.createElement(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }),\n            React.createElement(\"g\", null, edges.map((edge) => {\n                const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                if (!sourceIsValid || !targetIsValid) {\n                    return null;\n                }\n                let edgeType = edge.type || 'default';\n                if (!edgeTypes[edgeType]) {\n                    onError?.('011', errorMessages['error011'](edgeType));\n                    edgeType = 'default';\n                }\n                const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                // when connection type is loose we can define all handles as sources and connect source -> source\n                const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                    ? targetHandleBounds.target\n                    : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                const sourcePosition = sourceHandle?.position || Position.Bottom;\n                const targetPosition = targetHandle?.position || Position.Top;\n                const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                    (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                if (!sourceHandle || !targetHandle) {\n                    onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                    return null;\n                }\n                const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                return (React.createElement(EdgeComponent, { key: edge.id, id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }));\n            }))))),\n        children));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (React.createElement(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform } }, children));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (React.createElement(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return React.createElement(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (React.createElement(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\" },\n        React.createElement(\"g\", { className: cc(['react-flow__connection', connectionStatus]) },\n            React.createElement(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }))));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (React.createElement(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y },\n        React.createElement(Viewport, null,\n            React.createElement(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId },\n                React.createElement(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle })),\n            React.createElement(\"div\", { className: \"react-flow__edgelabel-renderer\" }),\n            React.createElement(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId }))));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    nodeDragThreshold: 0,\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    onSelectionChange: [],\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return React.createElement(Provider$1, { value: storeRef.current }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, nodeDragThreshold, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (React.createElement(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id },\n        React.createElement(Wrapper, null,\n            React.createElement(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }),\n            React.createElement(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, nodeDragThreshold: nodeDragThreshold }),\n            React.createElement(Wrapper$1, { onSelectionChange: onSelectionChange }),\n            children,\n            React.createElement(Attribution, { proOptions: proOptions, position: attributionPosition }),\n            React.createElement(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y }))));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n        store.setState({ onSelectionChange: nextSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChange.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChange: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}