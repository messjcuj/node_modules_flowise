{"ast":null,"code":"import{createPortal}from'react-dom';import{useState,useEffect,useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction}from'store/actions';import{cloneDeep}from'lodash';import{Box,Typography,Button,Dialog,DialogActions,DialogContent,DialogTitle,Stack,OutlinedInput}from'@mui/material';import{StyledButton}from'ui-component/button/StyledButton';import{Grid}from'ui-component/grid/Grid';import{TooltipWithParser}from'ui-component/tooltip/TooltipWithParser';import{GridActionsCellItem}from'@mui/x-data-grid';import DeleteIcon from'@mui/icons-material/Delete';import ConfirmDialog from'ui-component/dialog/ConfirmDialog';import{CodeEditor}from'ui-component/editor/CodeEditor';import HowToUseFunctionDialog from'./HowToUseFunctionDialog';// Icons\nimport{IconX,IconFileExport}from'@tabler/icons';// API\nimport toolsApi from'api/tools';// Hooks\nimport useConfirm from'hooks/useConfirm';import useApi from'hooks/useApi';// utils\nimport useNotifier from'utils/useNotifier';import{generateRandomGradient,formatDataGridRows}from'utils/genericHelper';import{HIDE_CANVAS_DIALOG,SHOW_CANVAS_DIALOG}from'store/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const exampleAPIFunc=\"/*\\n* You can use any libraries imported in Flowise\\n* You can use properties specified in Output Schema as variables. Ex: Property = userid, Variable = $userid\\n* You can get default flow config: $flow.sessionId, $flow.chatId, $flow.chatflowId, $flow.input\\n* You can get custom variables: $vars.<variable-name>\\n* Must return a string value at the end of function\\n*/\\n\\nconst fetch = require('node-fetch');\\nconst url = 'https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&current_weather=true';\\nconst options = {\\n    method: 'GET',\\n    headers: {\\n        'Content-Type': 'application/json'\\n    }\\n};\\ntry {\\n    const response = await fetch(url, options);\\n    const text = await response.text();\\n    return text;\\n} catch (error) {\\n    console.error(error);\\n    return '';\\n}\";const ToolDialog=_ref=>{let{show,dialogProps,onUseTemplate,onCancel,onConfirm}=_ref;const portalElement=document.getElementById('portal');const customization=useSelector(state=>state.customization);const dispatch=useDispatch();// ==============================|| Snackbar ||============================== //\nuseNotifier();const{confirm}=useConfirm();const enqueueSnackbar=function(){return dispatch(enqueueSnackbarAction(...arguments));};const closeSnackbar=function(){return dispatch(closeSnackbarAction(...arguments));};const getSpecificToolApi=useApi(toolsApi.getSpecificTool);const[toolId,setToolId]=useState('');const[toolName,setToolName]=useState('');const[toolDesc,setToolDesc]=useState('');const[toolIcon,setToolIcon]=useState('');const[toolSchema,setToolSchema]=useState([]);const[toolFunc,setToolFunc]=useState('');const[showHowToDialog,setShowHowToDialog]=useState(false);const deleteItem=useCallback(id=>()=>{setTimeout(()=>{setToolSchema(prevRows=>prevRows.filter(row=>row.id!==id));});},[]);const addNewRow=()=>{setTimeout(()=>{setToolSchema(prevRows=>{let allRows=[...cloneDeep(prevRows)];const lastRowId=allRows.length?allRows[allRows.length-1].id+1:1;allRows.push({id:lastRowId,property:'',description:'',type:'',required:false});return allRows;});});};const onRowUpdate=newRow=>{setTimeout(()=>{setToolSchema(prevRows=>{let allRows=[...cloneDeep(prevRows)];const indexToUpdate=allRows.findIndex(row=>row.id===newRow.id);if(indexToUpdate>=0){allRows[indexToUpdate]={...newRow};}return allRows;});});};const columns=useMemo(()=>[{field:'property',headerName:'Property',editable:true,flex:1},{field:'type',headerName:'Type',type:'singleSelect',valueOptions:['string','number','boolean','date'],editable:true,width:120},{field:'description',headerName:'Description',editable:true,flex:1},{field:'required',headerName:'Required',type:'boolean',editable:true,width:80},{field:'actions',type:'actions',width:80,getActions:params=>[/*#__PURE__*/_jsx(GridActionsCellItem,{icon:/*#__PURE__*/_jsx(DeleteIcon,{}),label:\"Delete\",onClick:deleteItem(params.id)},'Delete')]}],[deleteItem]);useEffect(()=>{if(show)dispatch({type:SHOW_CANVAS_DIALOG});else dispatch({type:HIDE_CANVAS_DIALOG});return()=>dispatch({type:HIDE_CANVAS_DIALOG});},[show,dispatch]);useEffect(()=>{if(getSpecificToolApi.data){setToolId(getSpecificToolApi.data.id);setToolName(getSpecificToolApi.data.name);setToolDesc(getSpecificToolApi.data.description);setToolSchema(formatDataGridRows(getSpecificToolApi.data.schema));if(getSpecificToolApi.data.func)setToolFunc(getSpecificToolApi.data.func);else setToolFunc('');}},[getSpecificToolApi.data]);useEffect(()=>{if(dialogProps.type==='EDIT'&&dialogProps.data){// When tool dialog is opened from Tools dashboard\nsetToolId(dialogProps.data.id);setToolName(dialogProps.data.name);setToolDesc(dialogProps.data.description);setToolIcon(dialogProps.data.iconSrc);setToolSchema(formatDataGridRows(dialogProps.data.schema));if(dialogProps.data.func)setToolFunc(dialogProps.data.func);else setToolFunc('');}else if(dialogProps.type==='EDIT'&&dialogProps.toolId){// When tool dialog is opened from CustomTool node in canvas\ngetSpecificToolApi.request(dialogProps.toolId);}else if(dialogProps.type==='IMPORT'&&dialogProps.data){// When tool dialog is to import existing tool\nsetToolName(dialogProps.data.name);setToolDesc(dialogProps.data.description);setToolIcon(dialogProps.data.iconSrc);setToolSchema(formatDataGridRows(dialogProps.data.schema));if(dialogProps.data.func)setToolFunc(dialogProps.data.func);else setToolFunc('');}else if(dialogProps.type==='TEMPLATE'&&dialogProps.data){// When tool dialog is a template\nsetToolName(dialogProps.data.name);setToolDesc(dialogProps.data.description);setToolIcon(dialogProps.data.iconSrc);setToolSchema(formatDataGridRows(dialogProps.data.schema));if(dialogProps.data.func)setToolFunc(dialogProps.data.func);else setToolFunc('');}else if(dialogProps.type==='ADD'){// When tool dialog is to add a new tool\nsetToolId('');setToolName('');setToolDesc('');setToolIcon('');setToolSchema([]);setToolFunc('');}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dialogProps]);const useToolTemplate=()=>{onUseTemplate(dialogProps.data);};const exportTool=async()=>{try{const toolResp=await toolsApi.getSpecificTool(toolId);if(toolResp.data){const toolData=toolResp.data;delete toolData.id;delete toolData.createdDate;delete toolData.updatedDate;let dataStr=JSON.stringify(toolData,null,2);let dataUri='data:application/json;charset=utf-8,'+encodeURIComponent(dataStr);let exportFileDefaultName=\"\".concat(toolName,\"-CustomTool.json\");let linkElement=document.createElement('a');linkElement.setAttribute('href',dataUri);linkElement.setAttribute('download',exportFileDefaultName);linkElement.click();}}catch(error){const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);enqueueSnackbar({message:\"Failed to export Tool: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}};const addNewTool=async()=>{try{const obj={name:toolName,description:toolDesc,color:generateRandomGradient(),schema:JSON.stringify(toolSchema),func:toolFunc,iconSrc:toolIcon};const createResp=await toolsApi.createNewTool(obj);if(createResp.data){enqueueSnackbar({message:'New Tool added',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm(createResp.data.id);}}catch(error){const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);enqueueSnackbar({message:\"Failed to add new Tool: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}};const saveTool=async()=>{try{const saveResp=await toolsApi.updateTool(toolId,{name:toolName,description:toolDesc,schema:JSON.stringify(toolSchema),func:toolFunc,iconSrc:toolIcon});if(saveResp.data){enqueueSnackbar({message:'Tool saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm(saveResp.data.id);}}catch(error){console.error(error);const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);enqueueSnackbar({message:\"Failed to save Tool: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}};const deleteTool=async()=>{const confirmPayload={title:\"Delete Tool\",description:\"Delete tool \".concat(toolName,\"?\"),confirmButtonName:'Delete',cancelButtonName:'Cancel'};const isConfirmed=await confirm(confirmPayload);if(isConfirmed){try{const delResp=await toolsApi.deleteTool(toolId);if(delResp.data){enqueueSnackbar({message:'Tool deleted',options:{key:new Date().getTime()+Math.random(),variant:'success',action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onConfirm();}}catch(error){const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);enqueueSnackbar({message:\"Failed to delete Tool: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:key=>/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:()=>closeSnackbar(key),children:/*#__PURE__*/_jsx(IconX,{})})}});onCancel();}}};const component=show?/*#__PURE__*/_jsxs(Dialog,{fullWidth:true,maxWidth:\"md\",open:show,onClose:onCancel,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row'},children:[dialogProps.title,/*#__PURE__*/_jsx(\"div\",{style:{flex:1}}),dialogProps.type==='EDIT'&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>exportTool(),startIcon:/*#__PURE__*/_jsx(IconFileExport,{}),children:\"Export\"})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Tool Name\",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:'Tool name must be small capital letter with underscore. Ex: my_tool'})]})}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"toolName\",type:\"string\",fullWidth:true,disabled:dialogProps.type==='TEMPLATE',placeholder:\"My New Tool\",value:toolName,name:\"toolName\",onChange:e=>setToolName(e.target.value)})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Tool description\",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:'Description of what the tool does. This is for ChatGPT to determine when to use this tool.'})]})}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"toolDesc\",type:\"string\",fullWidth:true,disabled:dialogProps.type==='TEMPLATE',placeholder:\"Description of what the tool does. This is for ChatGPT to determine when to use this tool.\",multiline:true,rows:3,value:toolDesc,name:\"toolDesc\",onChange:e=>setToolDesc(e.target.value)})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsx(Typography,{variant:\"overline\",children:\"Tool Icon Src\"})}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"toolIcon\",type:\"string\",fullWidth:true,disabled:dialogProps.type==='TEMPLATE',placeholder:\"https://raw.githubusercontent.com/gilbarbara/logos/main/logos/airtable.svg\",value:toolIcon,name:\"toolIcon\",onChange:e=>setToolIcon(e.target.value)})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Output Schema\",/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:'What should be the output response in JSON format?'})]})}),/*#__PURE__*/_jsx(Grid,{columns:columns,rows:toolSchema,disabled:dialogProps.type==='TEMPLATE',addNewRow:addNewRow,onRowUpdate:onRowUpdate})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Javascript Function\",/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:\"Function to execute when tool is being used. You can use properties specified in Output Schema as variables. For example, if the property is <code>userid</code>, you can use as <code>$userid</code>. Return value must be a string. You can also override the code from API by following this <a target=\\\"_blank\\\" href=\\\"https://docs.flowiseai.com/tools/custom-tool#override-function-from-api\\\">guide</a>\"})]})}),/*#__PURE__*/_jsx(Button,{style:{marginBottom:10,marginRight:10},color:\"secondary\",variant:\"outlined\",onClick:()=>setShowHowToDialog(true),children:\"How to use Function\"}),dialogProps.type!=='TEMPLATE'&&/*#__PURE__*/_jsx(Button,{style:{marginBottom:10},variant:\"outlined\",onClick:()=>setToolFunc(exampleAPIFunc),children:\"See Example\"}),/*#__PURE__*/_jsx(CodeEditor,{disabled:dialogProps.type==='TEMPLATE',value:toolFunc,height:\"calc(100vh - 220px)\",theme:customization.isDarkMode?'dark':'light',lang:'js',onValueChange:code=>setToolFunc(code)})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[dialogProps.type==='EDIT'&&/*#__PURE__*/_jsx(StyledButton,{color:\"error\",variant:\"contained\",onClick:()=>deleteTool(),children:\"Delete\"}),dialogProps.type==='TEMPLATE'&&/*#__PURE__*/_jsx(StyledButton,{color:\"secondary\",variant:\"contained\",onClick:useToolTemplate,children:\"Use Template\"}),dialogProps.type!=='TEMPLATE'&&/*#__PURE__*/_jsx(StyledButton,{disabled:!(toolName&&toolDesc),variant:\"contained\",onClick:()=>dialogProps.type==='ADD'||dialogProps.type==='IMPORT'?addNewTool():saveTool(),children:dialogProps.confirmButtonName})]}),/*#__PURE__*/_jsx(ConfirmDialog,{}),/*#__PURE__*/_jsx(HowToUseFunctionDialog,{show:showHowToDialog,onCancel:()=>setShowHowToDialog(false)})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default ToolDialog;","map":{"version":3,"names":["createPortal","useState","useEffect","useCallback","useMemo","useDispatch","useSelector","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","cloneDeep","Box","Typography","Button","Dialog","DialogActions","DialogContent","DialogTitle","Stack","OutlinedInput","StyledButton","Grid","TooltipWithParser","GridActionsCellItem","DeleteIcon","ConfirmDialog","CodeEditor","HowToUseFunctionDialog","IconX","IconFileExport","toolsApi","useConfirm","useApi","useNotifier","generateRandomGradient","formatDataGridRows","HIDE_CANVAS_DIALOG","SHOW_CANVAS_DIALOG","jsx","_jsx","jsxs","_jsxs","exampleAPIFunc","ToolDialog","_ref","show","dialogProps","onUseTemplate","onCancel","onConfirm","portalElement","document","getElementById","customization","state","dispatch","confirm","arguments","getSpecificToolApi","getSpecificTool","toolId","setToolId","toolName","setToolName","toolDesc","setToolDesc","toolIcon","setToolIcon","toolSchema","setToolSchema","toolFunc","setToolFunc","showHowToDialog","setShowHowToDialog","deleteItem","id","setTimeout","prevRows","filter","row","addNewRow","allRows","lastRowId","length","push","property","description","type","required","onRowUpdate","newRow","indexToUpdate","findIndex","columns","field","headerName","editable","flex","valueOptions","width","getActions","params","icon","label","onClick","data","name","schema","func","iconSrc","request","useToolTemplate","exportTool","toolResp","toolData","createdDate","updatedDate","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","concat","linkElement","createElement","setAttribute","click","error","errorData","response","status","statusText","message","options","key","Date","getTime","Math","random","variant","persist","action","style","color","children","addNewTool","obj","createResp","createNewTool","saveTool","saveResp","updateTool","console","deleteTool","confirmPayload","title","confirmButtonName","cancelButtonName","isConfirmed","delResp","component","fullWidth","maxWidth","open","onClose","sx","fontSize","display","flexDirection","startIcon","p","position","direction","marginLeft","disabled","placeholder","value","onChange","e","target","multiline","rows","marginBottom","marginRight","height","theme","isDarkMode","lang","onValueChange","code"],"sources":["D:/Flowise/packages/ui/src/views/tools/ToolDialog.js"],"sourcesContent":["import { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nimport { Box, Typography, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, OutlinedInput } from '@mui/material'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\nimport { Grid } from 'ui-component/grid/Grid'\r\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\r\nimport { GridActionsCellItem } from '@mui/x-data-grid'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\r\nimport { CodeEditor } from 'ui-component/editor/CodeEditor'\r\nimport HowToUseFunctionDialog from './HowToUseFunctionDialog'\r\n\r\n// Icons\r\nimport { IconX, IconFileExport } from '@tabler/icons'\r\n\r\n// API\r\nimport toolsApi from 'api/tools'\r\n\r\n// Hooks\r\nimport useConfirm from 'hooks/useConfirm'\r\nimport useApi from 'hooks/useApi'\r\n\r\n// utils\r\nimport useNotifier from 'utils/useNotifier'\r\nimport { generateRandomGradient, formatDataGridRows } from 'utils/genericHelper'\r\nimport { HIDE_CANVAS_DIALOG, SHOW_CANVAS_DIALOG } from 'store/actions'\r\n\r\nconst exampleAPIFunc = `/*\r\n* You can use any libraries imported in Flowise\r\n* You can use properties specified in Output Schema as variables. Ex: Property = userid, Variable = $userid\r\n* You can get default flow config: $flow.sessionId, $flow.chatId, $flow.chatflowId, $flow.input\r\n* You can get custom variables: $vars.<variable-name>\r\n* Must return a string value at the end of function\r\n*/\r\n\r\nconst fetch = require('node-fetch');\r\nconst url = 'https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&current_weather=true';\r\nconst options = {\r\n    method: 'GET',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\ntry {\r\n    const response = await fetch(url, options);\r\n    const text = await response.text();\r\n    return text;\r\n} catch (error) {\r\n    console.error(error);\r\n    return '';\r\n}`\r\n\r\nconst ToolDialog = ({ show, dialogProps, onUseTemplate, onCancel, onConfirm }) => {\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const customization = useSelector((state) => state.customization)\r\n    const dispatch = useDispatch()\r\n\r\n    // ==============================|| Snackbar ||============================== //\r\n\r\n    useNotifier()\r\n    const { confirm } = useConfirm()\r\n\r\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\r\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\r\n\r\n    const getSpecificToolApi = useApi(toolsApi.getSpecificTool)\r\n\r\n    const [toolId, setToolId] = useState('')\r\n    const [toolName, setToolName] = useState('')\r\n    const [toolDesc, setToolDesc] = useState('')\r\n    const [toolIcon, setToolIcon] = useState('')\r\n    const [toolSchema, setToolSchema] = useState([])\r\n    const [toolFunc, setToolFunc] = useState('')\r\n    const [showHowToDialog, setShowHowToDialog] = useState(false)\r\n\r\n    const deleteItem = useCallback(\r\n        (id) => () => {\r\n            setTimeout(() => {\r\n                setToolSchema((prevRows) => prevRows.filter((row) => row.id !== id))\r\n            })\r\n        },\r\n        []\r\n    )\r\n\r\n    const addNewRow = () => {\r\n        setTimeout(() => {\r\n            setToolSchema((prevRows) => {\r\n                let allRows = [...cloneDeep(prevRows)]\r\n                const lastRowId = allRows.length ? allRows[allRows.length - 1].id + 1 : 1\r\n                allRows.push({\r\n                    id: lastRowId,\r\n                    property: '',\r\n                    description: '',\r\n                    type: '',\r\n                    required: false\r\n                })\r\n                return allRows\r\n            })\r\n        })\r\n    }\r\n\r\n    const onRowUpdate = (newRow) => {\r\n        setTimeout(() => {\r\n            setToolSchema((prevRows) => {\r\n                let allRows = [...cloneDeep(prevRows)]\r\n                const indexToUpdate = allRows.findIndex((row) => row.id === newRow.id)\r\n                if (indexToUpdate >= 0) {\r\n                    allRows[indexToUpdate] = { ...newRow }\r\n                }\r\n                return allRows\r\n            })\r\n        })\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            { field: 'property', headerName: 'Property', editable: true, flex: 1 },\r\n            {\r\n                field: 'type',\r\n                headerName: 'Type',\r\n                type: 'singleSelect',\r\n                valueOptions: ['string', 'number', 'boolean', 'date'],\r\n                editable: true,\r\n                width: 120\r\n            },\r\n            { field: 'description', headerName: 'Description', editable: true, flex: 1 },\r\n            { field: 'required', headerName: 'Required', type: 'boolean', editable: true, width: 80 },\r\n            {\r\n                field: 'actions',\r\n                type: 'actions',\r\n                width: 80,\r\n                getActions: (params) => [\r\n                    <GridActionsCellItem key={'Delete'} icon={<DeleteIcon />} label='Delete' onClick={deleteItem(params.id)} />\r\n                ]\r\n            }\r\n        ],\r\n        [deleteItem]\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (show) dispatch({ type: SHOW_CANVAS_DIALOG })\r\n        else dispatch({ type: HIDE_CANVAS_DIALOG })\r\n        return () => dispatch({ type: HIDE_CANVAS_DIALOG })\r\n    }, [show, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (getSpecificToolApi.data) {\r\n            setToolId(getSpecificToolApi.data.id)\r\n            setToolName(getSpecificToolApi.data.name)\r\n            setToolDesc(getSpecificToolApi.data.description)\r\n            setToolSchema(formatDataGridRows(getSpecificToolApi.data.schema))\r\n            if (getSpecificToolApi.data.func) setToolFunc(getSpecificToolApi.data.func)\r\n            else setToolFunc('')\r\n        }\r\n    }, [getSpecificToolApi.data])\r\n\r\n    useEffect(() => {\r\n        if (dialogProps.type === 'EDIT' && dialogProps.data) {\r\n            // When tool dialog is opened from Tools dashboard\r\n            setToolId(dialogProps.data.id)\r\n            setToolName(dialogProps.data.name)\r\n            setToolDesc(dialogProps.data.description)\r\n            setToolIcon(dialogProps.data.iconSrc)\r\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\r\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\r\n            else setToolFunc('')\r\n        } else if (dialogProps.type === 'EDIT' && dialogProps.toolId) {\r\n            // When tool dialog is opened from CustomTool node in canvas\r\n            getSpecificToolApi.request(dialogProps.toolId)\r\n        } else if (dialogProps.type === 'IMPORT' && dialogProps.data) {\r\n            // When tool dialog is to import existing tool\r\n            setToolName(dialogProps.data.name)\r\n            setToolDesc(dialogProps.data.description)\r\n            setToolIcon(dialogProps.data.iconSrc)\r\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\r\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\r\n            else setToolFunc('')\r\n        } else if (dialogProps.type === 'TEMPLATE' && dialogProps.data) {\r\n            // When tool dialog is a template\r\n            setToolName(dialogProps.data.name)\r\n            setToolDesc(dialogProps.data.description)\r\n            setToolIcon(dialogProps.data.iconSrc)\r\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\r\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\r\n            else setToolFunc('')\r\n        } else if (dialogProps.type === 'ADD') {\r\n            // When tool dialog is to add a new tool\r\n            setToolId('')\r\n            setToolName('')\r\n            setToolDesc('')\r\n            setToolIcon('')\r\n            setToolSchema([])\r\n            setToolFunc('')\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dialogProps])\r\n\r\n    const useToolTemplate = () => {\r\n        onUseTemplate(dialogProps.data)\r\n    }\r\n\r\n    const exportTool = async () => {\r\n        try {\r\n            const toolResp = await toolsApi.getSpecificTool(toolId)\r\n            if (toolResp.data) {\r\n                const toolData = toolResp.data\r\n                delete toolData.id\r\n                delete toolData.createdDate\r\n                delete toolData.updatedDate\r\n                let dataStr = JSON.stringify(toolData, null, 2)\r\n                let dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr)\r\n\r\n                let exportFileDefaultName = `${toolName}-CustomTool.json`\r\n\r\n                let linkElement = document.createElement('a')\r\n                linkElement.setAttribute('href', dataUri)\r\n                linkElement.setAttribute('download', exportFileDefaultName)\r\n                linkElement.click()\r\n            }\r\n        } catch (error) {\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            enqueueSnackbar({\r\n                message: `Failed to export Tool: ${errorData}`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'error',\r\n                    persist: true,\r\n                    action: (key) => (\r\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                            <IconX />\r\n                        </Button>\r\n                    )\r\n                }\r\n            })\r\n            onCancel()\r\n        }\r\n    }\r\n\r\n    const addNewTool = async () => {\r\n        try {\r\n            const obj = {\r\n                name: toolName,\r\n                description: toolDesc,\r\n                color: generateRandomGradient(),\r\n                schema: JSON.stringify(toolSchema),\r\n                func: toolFunc,\r\n                iconSrc: toolIcon\r\n            }\r\n            const createResp = await toolsApi.createNewTool(obj)\r\n            if (createResp.data) {\r\n                enqueueSnackbar({\r\n                    message: 'New Tool added',\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'success',\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onConfirm(createResp.data.id)\r\n            }\r\n        } catch (error) {\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            enqueueSnackbar({\r\n                message: `Failed to add new Tool: ${errorData}`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'error',\r\n                    persist: true,\r\n                    action: (key) => (\r\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                            <IconX />\r\n                        </Button>\r\n                    )\r\n                }\r\n            })\r\n            onCancel()\r\n        }\r\n    }\r\n\r\n    const saveTool = async () => {\r\n        try {\r\n            const saveResp = await toolsApi.updateTool(toolId, {\r\n                name: toolName,\r\n                description: toolDesc,\r\n                schema: JSON.stringify(toolSchema),\r\n                func: toolFunc,\r\n                iconSrc: toolIcon\r\n            })\r\n            if (saveResp.data) {\r\n                enqueueSnackbar({\r\n                    message: 'Tool saved',\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'success',\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onConfirm(saveResp.data.id)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            enqueueSnackbar({\r\n                message: `Failed to save Tool: ${errorData}`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'error',\r\n                    persist: true,\r\n                    action: (key) => (\r\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                            <IconX />\r\n                        </Button>\r\n                    )\r\n                }\r\n            })\r\n            onCancel()\r\n        }\r\n    }\r\n\r\n    const deleteTool = async () => {\r\n        const confirmPayload = {\r\n            title: `Delete Tool`,\r\n            description: `Delete tool ${toolName}?`,\r\n            confirmButtonName: 'Delete',\r\n            cancelButtonName: 'Cancel'\r\n        }\r\n        const isConfirmed = await confirm(confirmPayload)\r\n\r\n        if (isConfirmed) {\r\n            try {\r\n                const delResp = await toolsApi.deleteTool(toolId)\r\n                if (delResp.data) {\r\n                    enqueueSnackbar({\r\n                        message: 'Tool deleted',\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: 'success',\r\n                            action: (key) => (\r\n                                <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                    <IconX />\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    })\r\n                    onConfirm()\r\n                }\r\n            } catch (error) {\r\n                const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n                enqueueSnackbar({\r\n                    message: `Failed to delete Tool: ${errorData}`,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'error',\r\n                        persist: true,\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onCancel()\r\n            }\r\n        }\r\n    }\r\n\r\n    const component = show ? (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='md'\r\n            open={show}\r\n            onClose={onCancel}\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    {dialogProps.title}\r\n                    <div style={{ flex: 1 }} />\r\n                    {dialogProps.type === 'EDIT' && (\r\n                        <Button variant='outlined' onClick={() => exportTool()} startIcon={<IconFileExport />}>\r\n                            Export\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>\r\n                            Tool Name\r\n                            <span style={{ color: 'red' }}>&nbsp;*</span>\r\n                            <TooltipWithParser\r\n                                style={{ marginLeft: 10 }}\r\n                                title={'Tool name must be small capital letter with underscore. Ex: my_tool'}\r\n                            />\r\n                        </Typography>\r\n                    </Stack>\r\n                    <OutlinedInput\r\n                        id='toolName'\r\n                        type='string'\r\n                        fullWidth\r\n                        disabled={dialogProps.type === 'TEMPLATE'}\r\n                        placeholder='My New Tool'\r\n                        value={toolName}\r\n                        name='toolName'\r\n                        onChange={(e) => setToolName(e.target.value)}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>\r\n                            Tool description\r\n                            <span style={{ color: 'red' }}>&nbsp;*</span>\r\n                            <TooltipWithParser\r\n                                style={{ marginLeft: 10 }}\r\n                                title={'Description of what the tool does. This is for ChatGPT to determine when to use this tool.'}\r\n                            />\r\n                        </Typography>\r\n                    </Stack>\r\n                    <OutlinedInput\r\n                        id='toolDesc'\r\n                        type='string'\r\n                        fullWidth\r\n                        disabled={dialogProps.type === 'TEMPLATE'}\r\n                        placeholder='Description of what the tool does. This is for ChatGPT to determine when to use this tool.'\r\n                        multiline={true}\r\n                        rows={3}\r\n                        value={toolDesc}\r\n                        name='toolDesc'\r\n                        onChange={(e) => setToolDesc(e.target.value)}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>Tool Icon Src</Typography>\r\n                    </Stack>\r\n                    <OutlinedInput\r\n                        id='toolIcon'\r\n                        type='string'\r\n                        fullWidth\r\n                        disabled={dialogProps.type === 'TEMPLATE'}\r\n                        placeholder='https://raw.githubusercontent.com/gilbarbara/logos/main/logos/airtable.svg'\r\n                        value={toolIcon}\r\n                        name='toolIcon'\r\n                        onChange={(e) => setToolIcon(e.target.value)}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>\r\n                            Output Schema\r\n                            <TooltipWithParser style={{ marginLeft: 10 }} title={'What should be the output response in JSON format?'} />\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Grid\r\n                        columns={columns}\r\n                        rows={toolSchema}\r\n                        disabled={dialogProps.type === 'TEMPLATE'}\r\n                        addNewRow={addNewRow}\r\n                        onRowUpdate={onRowUpdate}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>\r\n                            Javascript Function\r\n                            <TooltipWithParser\r\n                                style={{ marginLeft: 10 }}\r\n                                title='Function to execute when tool is being used. You can use properties specified in Output Schema as variables. For example, if the property is <code>userid</code>, you can use as <code>$userid</code>. Return value must be a string. You can also override the code from API by following this <a target=\"_blank\" href=\"https://docs.flowiseai.com/tools/custom-tool#override-function-from-api\">guide</a>'\r\n                            />\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Button\r\n                        style={{ marginBottom: 10, marginRight: 10 }}\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        onClick={() => setShowHowToDialog(true)}\r\n                    >\r\n                        How to use Function\r\n                    </Button>\r\n                    {dialogProps.type !== 'TEMPLATE' && (\r\n                        <Button style={{ marginBottom: 10 }} variant='outlined' onClick={() => setToolFunc(exampleAPIFunc)}>\r\n                            See Example\r\n                        </Button>\r\n                    )}\r\n                    <CodeEditor\r\n                        disabled={dialogProps.type === 'TEMPLATE'}\r\n                        value={toolFunc}\r\n                        height='calc(100vh - 220px)'\r\n                        theme={customization.isDarkMode ? 'dark' : 'light'}\r\n                        lang={'js'}\r\n                        onValueChange={(code) => setToolFunc(code)}\r\n                    />\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {dialogProps.type === 'EDIT' && (\r\n                    <StyledButton color='error' variant='contained' onClick={() => deleteTool()}>\r\n                        Delete\r\n                    </StyledButton>\r\n                )}\r\n                {dialogProps.type === 'TEMPLATE' && (\r\n                    <StyledButton color='secondary' variant='contained' onClick={useToolTemplate}>\r\n                        Use Template\r\n                    </StyledButton>\r\n                )}\r\n                {dialogProps.type !== 'TEMPLATE' && (\r\n                    <StyledButton\r\n                        disabled={!(toolName && toolDesc)}\r\n                        variant='contained'\r\n                        onClick={() => (dialogProps.type === 'ADD' || dialogProps.type === 'IMPORT' ? addNewTool() : saveTool())}\r\n                    >\r\n                        {dialogProps.confirmButtonName}\r\n                    </StyledButton>\r\n                )}\r\n            </DialogActions>\r\n            <ConfirmDialog />\r\n            <HowToUseFunctionDialog show={showHowToDialog} onCancel={() => setShowHowToDialog(false)} />\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nToolDialog.propTypes = {\r\n    show: PropTypes.bool,\r\n    dialogProps: PropTypes.object,\r\n    onUseTemplate: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    onConfirm: PropTypes.func\r\n}\r\n\r\nexport default ToolDialog\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}