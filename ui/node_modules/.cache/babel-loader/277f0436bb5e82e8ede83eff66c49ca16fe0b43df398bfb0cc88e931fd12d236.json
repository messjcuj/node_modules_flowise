{"ast":null,"code":"import{useState,useRef,useEffect,useCallback}from'react';import{useSelector}from'react-redux';import socketIOClient from'socket.io-client';import{cloneDeep}from'lodash';import rehypeMathjax from'rehype-mathjax';import rehypeRaw from'rehype-raw';import remarkGfm from'remark-gfm';import remarkMath from'remark-math';import axios from'axios';import{CircularProgress,OutlinedInput,Divider,InputAdornment,IconButton,Box,Chip,Button}from'@mui/material';import{useTheme}from'@mui/material/styles';import{IconSend,IconDownload}from'@tabler/icons';// project import\nimport{CodeBlock}from'ui-component/markdown/CodeBlock';import{MemoizedReactMarkdown}from'ui-component/markdown/MemoizedReactMarkdown';import SourceDocDialog from'ui-component/dialog/SourceDocDialog';import'./ChatMessage.css';// api\nimport chatmessageApi from'api/chatmessage';import chatflowsApi from'api/chatflows';import predictionApi from'api/prediction';// Hooks\nimport useApi from'hooks/useApi';// Const\nimport{baseURL,maxScroll}from'store/constant';import robotPNG from'assets/images/robot.png';import userPNG from'assets/images/account.png';import StarterPromptsCard from'../../ui-component/cards/StarterPromptsCard';import{isValidURL,removeDuplicateURL,setLocalStorageChatflow}from'utils/genericHelper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const ChatMessage=_ref=>{let{open,chatflowid,isDialog}=_ref;const theme=useTheme();const customization=useSelector(state=>state.customization);const ps=useRef();const[userInput,setUserInput]=useState('');const[loading,setLoading]=useState(false);const[messages,setMessages]=useState([{message:'Hi there! How can I help?',type:'apiMessage'}]);const[socketIOClientId,setSocketIOClientId]=useState('');const[isChatFlowAvailableToStream,setIsChatFlowAvailableToStream]=useState(false);const[sourceDialogOpen,setSourceDialogOpen]=useState(false);const[sourceDialogProps,setSourceDialogProps]=useState({});const[chatId,setChatId]=useState(undefined);const inputRef=useRef(null);const getChatmessageApi=useApi(chatmessageApi.getInternalChatmessageFromChatflow);const getIsChatflowStreamingApi=useApi(chatflowsApi.getIsChatflowStreaming);const getChatflowConfig=useApi(chatflowsApi.getSpecificChatflow);const[starterPrompts,setStarterPrompts]=useState([]);const onSourceDialogClick=(data,title)=>{setSourceDialogProps({data,title});setSourceDialogOpen(true);};const onURLClick=data=>{window.open(data,'_blank');};const scrollToBottom=()=>{if(ps.current){ps.current.scrollTo({top:maxScroll});}};const onChange=useCallback(e=>setUserInput(e.target.value),[setUserInput]);const updateLastMessage=text=>{setMessages(prevMessages=>{let allMessages=[...cloneDeep(prevMessages)];if(allMessages[allMessages.length-1].type==='userMessage')return allMessages;allMessages[allMessages.length-1].message+=text;return allMessages;});};const updateLastMessageSourceDocuments=sourceDocuments=>{setMessages(prevMessages=>{let allMessages=[...cloneDeep(prevMessages)];if(allMessages[allMessages.length-1].type==='userMessage')return allMessages;allMessages[allMessages.length-1].sourceDocuments=sourceDocuments;return allMessages;});};// Handle errors\nconst handleError=function(){let message=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'Oops! There seems to be an error. Please try again.';message=message.replace(\"Unable to parse JSON response from chat agent.\\n\\n\",'');setMessages(prevMessages=>[...prevMessages,{message,type:'apiMessage'}]);setLoading(false);setUserInput('');setTimeout(()=>{var _inputRef$current;(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();},100);};const handlePromptClick=async promptStarterInput=>{setUserInput(promptStarterInput);handleSubmit(undefined,promptStarterInput);};// Handle form submission\nconst handleSubmit=async(e,promptStarterInput)=>{if(e)e.preventDefault();if(!promptStarterInput&&userInput.trim()===''){return;}let input=userInput;if(promptStarterInput!==undefined&&promptStarterInput.trim()!=='')input=promptStarterInput;setLoading(true);setMessages(prevMessages=>[...prevMessages,{message:input,type:'userMessage'}]);// Send user question and history to API\ntry{const params={question:input,history:messages.filter(msg=>msg.message!=='Hi there! How can I help?'),chatId};if(isChatFlowAvailableToStream)params.socketIOClientId=socketIOClientId;const response=await predictionApi.sendMessageAndGetPrediction(chatflowid,params);if(response.data){const data=response.data;if(!chatId)setChatId(data.chatId);if(!isChatFlowAvailableToStream){let text='';if(data.text)text=data.text;else if(data.json)text='```json\\n'+JSON.stringify(data.json,null,2);else text=JSON.stringify(data,null,2);setMessages(prevMessages=>[...prevMessages,{message:text,sourceDocuments:data===null||data===void 0?void 0:data.sourceDocuments,usedTools:data===null||data===void 0?void 0:data.usedTools,fileAnnotations:data===null||data===void 0?void 0:data.fileAnnotations,type:'apiMessage'}]);}setLocalStorageChatflow(chatflowid,data.chatId,messages);setLoading(false);setUserInput('');setTimeout(()=>{var _inputRef$current2;(_inputRef$current2=inputRef.current)===null||_inputRef$current2===void 0?void 0:_inputRef$current2.focus();scrollToBottom();},100);}}catch(error){const errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);handleError(errorData);return;}};// Prevent blank submissions and allow for multiline input\nconst handleEnter=e=>{// Check if IME composition is in progress\nconst isIMEComposition=e.isComposing||e.keyCode===229;if(e.key==='Enter'&&userInput&&!isIMEComposition){if(!e.shiftKey&&userInput){handleSubmit(e);}}else if(e.key==='Enter'){e.preventDefault();}};const downloadFile=async fileAnnotation=>{try{const response=await axios.post(\"\".concat(baseURL,\"/api/v1/openai-assistants-file\"),{fileName:fileAnnotation.fileName},{responseType:'blob'});const blob=new Blob([response.data],{type:response.headers['content-type']});const downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;link.download=fileAnnotation.fileName;document.body.appendChild(link);link.click();link.remove();}catch(error){console.error('Download failed:',error);}};// Get chatmessages successful\nuseEffect(()=>{var _getChatmessageApi$da;if((_getChatmessageApi$da=getChatmessageApi.data)!==null&&_getChatmessageApi$da!==void 0&&_getChatmessageApi$da.length){var _getChatmessageApi$da2;const chatId=(_getChatmessageApi$da2=getChatmessageApi.data[0])===null||_getChatmessageApi$da2===void 0?void 0:_getChatmessageApi$da2.chatId;setChatId(chatId);const loadedMessages=getChatmessageApi.data.map(message=>{const obj={message:message.content,type:message.role};if(message.sourceDocuments)obj.sourceDocuments=JSON.parse(message.sourceDocuments);if(message.usedTools)obj.usedTools=JSON.parse(message.usedTools);if(message.fileAnnotations)obj.fileAnnotations=JSON.parse(message.fileAnnotations);return obj;});setMessages(prevMessages=>[...prevMessages,...loadedMessages]);setLocalStorageChatflow(chatflowid,chatId,messages);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getChatmessageApi.data]);// Get chatflow streaming capability\nuseEffect(()=>{if(getIsChatflowStreamingApi.data){var _getIsChatflowStreami,_getIsChatflowStreami2;setIsChatFlowAvailableToStream((_getIsChatflowStreami=(_getIsChatflowStreami2=getIsChatflowStreamingApi.data)===null||_getIsChatflowStreami2===void 0?void 0:_getIsChatflowStreami2.isStreaming)!==null&&_getIsChatflowStreami!==void 0?_getIsChatflowStreami:false);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getIsChatflowStreamingApi.data]);useEffect(()=>{if(getChatflowConfig.data){var _getChatflowConfig$da,_getChatflowConfig$da2;if((_getChatflowConfig$da=getChatflowConfig.data)!==null&&_getChatflowConfig$da!==void 0&&_getChatflowConfig$da.chatbotConfig&&JSON.parse((_getChatflowConfig$da2=getChatflowConfig.data)===null||_getChatflowConfig$da2===void 0?void 0:_getChatflowConfig$da2.chatbotConfig)){var _getChatflowConfig$da3;let config=JSON.parse((_getChatflowConfig$da3=getChatflowConfig.data)===null||_getChatflowConfig$da3===void 0?void 0:_getChatflowConfig$da3.chatbotConfig);if(config.starterPrompts){let inputFields=[];Object.getOwnPropertyNames(config.starterPrompts).forEach(key=>{if(config.starterPrompts[key]){inputFields.push(config.starterPrompts[key]);}});setStarterPrompts(inputFields);}}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getChatflowConfig.data]);// Auto scroll chat to bottom\nuseEffect(()=>{scrollToBottom();},[messages]);useEffect(()=>{if(isDialog&&inputRef){setTimeout(()=>{var _inputRef$current3;(_inputRef$current3=inputRef.current)===null||_inputRef$current3===void 0?void 0:_inputRef$current3.focus();},100);}},[isDialog,inputRef]);useEffect(()=>{let socket;if(open&&chatflowid){getChatmessageApi.request(chatflowid);getIsChatflowStreamingApi.request(chatflowid);getChatflowConfig.request(chatflowid);scrollToBottom();socket=socketIOClient(baseURL);socket.on('connect',()=>{setSocketIOClientId(socket.id);});socket.on('start',()=>{setMessages(prevMessages=>[...prevMessages,{message:'',type:'apiMessage'}]);});socket.on('sourceDocuments',updateLastMessageSourceDocuments);socket.on('token',updateLastMessage);}return()=>{setUserInput('');setLoading(false);setMessages([{message:'Hi there! How can I help?',type:'apiMessage'}]);if(socket){socket.disconnect();setSocketIOClientId('');}};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[open,chatflowid]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:isDialog?'cloud-dialog':'cloud',children:/*#__PURE__*/_jsx(\"div\",{ref:ps,className:\"messagelist\",children:messages&&messages.map((message,index)=>{return/*#__PURE__*/ (// The latest message sent by the user will be animated while waiting for a response\n_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{sx:{background:message.type==='apiMessage'?theme.palette.asyncSelect.main:''},style:{display:'flex'},className:message.type==='userMessage'&&loading&&index===messages.length-1?customization.isDarkMode?'usermessagewaiting-dark':'usermessagewaiting-light':message.type==='usermessagewaiting'?'apimessage':'usermessage',children:[message.type==='apiMessage'?/*#__PURE__*/_jsx(\"img\",{src:robotPNG,alt:\"AI\",width:\"30\",height:\"30\",className:\"boticon\"}):/*#__PURE__*/_jsx(\"img\",{src:userPNG,alt:\"Me\",width:\"30\",height:\"30\",className:\"usericon\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',width:'100%'},children:[message.usedTools&&/*#__PURE__*/_jsx(\"div\",{style:{display:'block',flexDirection:'row',width:'100%'},children:message.usedTools.map((tool,index)=>{return/*#__PURE__*/_jsx(Chip,{size:\"small\",label:tool.tool,component:\"a\",sx:{mr:1,mt:1},variant:\"outlined\",clickable:true,onClick:()=>onSourceDialogClick(tool,'Used Tools')},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"markdownanswer\",children:/*#__PURE__*/_jsx(MemoizedReactMarkdown,{remarkPlugins:[remarkGfm,remarkMath],rehypePlugins:[rehypeMathjax,rehypeRaw],components:{code(_ref2){let{inline,className,children,...props}=_ref2;const match=/language-(\\w+)/.exec(className||'');return!inline?/*#__PURE__*/_jsx(CodeBlock,{chatflowid:chatflowid,isDialog:isDialog,language:match&&match[1]||'',value:String(children).replace(/\\n$/,''),...props},Math.random()):/*#__PURE__*/_jsx(\"code\",{className:className,...props,children:children});}},children:message.message})}),message.fileAnnotations&&/*#__PURE__*/_jsx(\"div\",{style:{display:'block',flexDirection:'row',width:'100%'},children:message.fileAnnotations.map((fileAnnotation,index)=>{return/*#__PURE__*/_jsx(Button,{sx:{fontSize:'0.85rem',textTransform:'none',mb:1},variant:\"outlined\",onClick:()=>downloadFile(fileAnnotation),endIcon:/*#__PURE__*/_jsx(IconDownload,{color:theme.palette.primary.main}),children:fileAnnotation.fileName},index);})}),message.sourceDocuments&&/*#__PURE__*/_jsx(\"div\",{style:{display:'block',flexDirection:'row',width:'100%'},children:removeDuplicateURL(message).map((source,index)=>{const URL=source.metadata&&source.metadata.source?isValidURL(source.metadata.source):undefined;return/*#__PURE__*/_jsx(Chip,{size:\"small\",label:URL?URL.pathname.substring(0,15)==='/'?URL.host:\"\".concat(URL.pathname.substring(0,15),\"...\"):\"\".concat(source.pageContent.substring(0,15),\"...\"),component:\"a\",sx:{mr:1,mb:1},variant:\"outlined\",clickable:true,onClick:()=>URL?onURLClick(source.metadata.source):onSourceDialogClick(source)},index);})})]})]},index)}));})})}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[messages&&messages.length===1&&/*#__PURE__*/_jsx(StarterPromptsCard,{starterPrompts:starterPrompts||[],onPromptClick:handlePromptClick,isGrid:isDialog}),/*#__PURE__*/_jsx(Divider,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:'100%'},children:/*#__PURE__*/_jsx(\"form\",{style:{width:'100%'},onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(OutlinedInput,{inputRef:inputRef// eslint-disable-next-line\n,autoFocus:true,sx:{width:'100%'},disabled:loading||!chatflowid,onKeyDown:handleEnter,id:\"userInput\",name:\"userInput\",placeholder:loading?'Waiting for response...':'Type your question...',value:userInput,onChange:onChange,multiline:true,maxRows:isDialog?7:2,endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",sx:{padding:'15px'},children:/*#__PURE__*/_jsx(IconButton,{type:\"submit\",disabled:loading||!chatflowid,edge:\"end\",children:loading?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:20})}):/*#__PURE__*/ // Send icon SVG in input field\n_jsx(IconSend,{color:loading||!chatflowid?'#9e9e9e':customization.isDarkMode?'white':'#1e88e5'})})})})})})}),/*#__PURE__*/_jsx(SourceDocDialog,{show:sourceDialogOpen,dialogProps:sourceDialogProps,onCancel:()=>setSourceDialogOpen(false)})]});};","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useSelector","socketIOClient","cloneDeep","rehypeMathjax","rehypeRaw","remarkGfm","remarkMath","axios","CircularProgress","OutlinedInput","Divider","InputAdornment","IconButton","Box","Chip","Button","useTheme","IconSend","IconDownload","CodeBlock","MemoizedReactMarkdown","SourceDocDialog","chatmessageApi","chatflowsApi","predictionApi","useApi","baseURL","maxScroll","robotPNG","userPNG","StarterPromptsCard","isValidURL","removeDuplicateURL","setLocalStorageChatflow","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatMessage","_ref","open","chatflowid","isDialog","theme","customization","state","ps","userInput","setUserInput","loading","setLoading","messages","setMessages","message","type","socketIOClientId","setSocketIOClientId","isChatFlowAvailableToStream","setIsChatFlowAvailableToStream","sourceDialogOpen","setSourceDialogOpen","sourceDialogProps","setSourceDialogProps","chatId","setChatId","undefined","inputRef","getChatmessageApi","getInternalChatmessageFromChatflow","getIsChatflowStreamingApi","getIsChatflowStreaming","getChatflowConfig","getSpecificChatflow","starterPrompts","setStarterPrompts","onSourceDialogClick","data","title","onURLClick","window","scrollToBottom","current","scrollTo","top","onChange","e","target","value","updateLastMessage","text","prevMessages","allMessages","length","updateLastMessageSourceDocuments","sourceDocuments","handleError","arguments","replace","setTimeout","_inputRef$current","focus","handlePromptClick","promptStarterInput","handleSubmit","preventDefault","trim","input","params","question","history","filter","msg","response","sendMessageAndGetPrediction","json","JSON","stringify","usedTools","fileAnnotations","_inputRef$current2","error","errorData","concat","status","statusText","handleEnter","isIMEComposition","isComposing","keyCode","key","shiftKey","downloadFile","fileAnnotation","post","fileName","responseType","blob","Blob","headers","downloadUrl","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove","console","_getChatmessageApi$da","_getChatmessageApi$da2","loadedMessages","map","obj","content","role","parse","_getIsChatflowStreami","_getIsChatflowStreami2","isStreaming","_getChatflowConfig$da","_getChatflowConfig$da2","chatbotConfig","_getChatflowConfig$da3","config","inputFields","Object","getOwnPropertyNames","forEach","push","_inputRef$current3","socket","request","on","id","disconnect","children","className","ref","index","sx","background","palette","asyncSelect","main","style","display","isDarkMode","src","alt","width","height","flexDirection","tool","size","label","component","mr","mt","variant","clickable","onClick","remarkPlugins","rehypePlugins","components","code","_ref2","inline","props","match","exec","language","String","Math","random","fontSize","textTransform","mb","endIcon","color","primary","source","metadata","pathname","substring","host","pageContent","position","onPromptClick","isGrid","onSubmit","autoFocus","disabled","onKeyDown","name","placeholder","multiline","maxRows","endAdornment","padding","edge","show","dialogProps","onCancel"],"sources":["D:/Flowise/packages/ui/src/views/chatmessage/ChatMessage.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport socketIOClient from 'socket.io-client'\r\nimport { cloneDeep } from 'lodash'\r\nimport rehypeMathjax from 'rehype-mathjax'\r\nimport rehypeRaw from 'rehype-raw'\r\nimport remarkGfm from 'remark-gfm'\r\nimport remarkMath from 'remark-math'\r\nimport axios from 'axios'\r\n\r\nimport { CircularProgress, OutlinedInput, Divider, InputAdornment, IconButton, Box, Chip, Button } from '@mui/material'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { IconSend, IconDownload } from '@tabler/icons'\r\n\r\n// project import\r\nimport { CodeBlock } from 'ui-component/markdown/CodeBlock'\r\nimport { MemoizedReactMarkdown } from 'ui-component/markdown/MemoizedReactMarkdown'\r\nimport SourceDocDialog from 'ui-component/dialog/SourceDocDialog'\r\nimport './ChatMessage.css'\r\n\r\n// api\r\nimport chatmessageApi from 'api/chatmessage'\r\nimport chatflowsApi from 'api/chatflows'\r\nimport predictionApi from 'api/prediction'\r\n\r\n// Hooks\r\nimport useApi from 'hooks/useApi'\r\n\r\n// Const\r\nimport { baseURL, maxScroll } from 'store/constant'\r\n\r\nimport robotPNG from 'assets/images/robot.png'\r\nimport userPNG from 'assets/images/account.png'\r\nimport StarterPromptsCard from '../../ui-component/cards/StarterPromptsCard'\r\nimport { isValidURL, removeDuplicateURL, setLocalStorageChatflow } from 'utils/genericHelper'\r\n\r\nexport const ChatMessage = ({ open, chatflowid, isDialog }) => {\r\n    const theme = useTheme()\r\n    const customization = useSelector((state) => state.customization)\r\n\r\n    const ps = useRef()\r\n\r\n    const [userInput, setUserInput] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            message: 'Hi there! How can I help?',\r\n            type: 'apiMessage'\r\n        }\r\n    ])\r\n    const [socketIOClientId, setSocketIOClientId] = useState('')\r\n    const [isChatFlowAvailableToStream, setIsChatFlowAvailableToStream] = useState(false)\r\n    const [sourceDialogOpen, setSourceDialogOpen] = useState(false)\r\n    const [sourceDialogProps, setSourceDialogProps] = useState({})\r\n    const [chatId, setChatId] = useState(undefined)\r\n\r\n    const inputRef = useRef(null)\r\n    const getChatmessageApi = useApi(chatmessageApi.getInternalChatmessageFromChatflow)\r\n    const getIsChatflowStreamingApi = useApi(chatflowsApi.getIsChatflowStreaming)\r\n    const getChatflowConfig = useApi(chatflowsApi.getSpecificChatflow)\r\n\r\n    const [starterPrompts, setStarterPrompts] = useState([])\r\n\r\n    const onSourceDialogClick = (data, title) => {\r\n        setSourceDialogProps({ data, title })\r\n        setSourceDialogOpen(true)\r\n    }\r\n\r\n    const onURLClick = (data) => {\r\n        window.open(data, '_blank')\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        if (ps.current) {\r\n            ps.current.scrollTo({ top: maxScroll })\r\n        }\r\n    }\r\n\r\n    const onChange = useCallback((e) => setUserInput(e.target.value), [setUserInput])\r\n\r\n    const updateLastMessage = (text) => {\r\n        setMessages((prevMessages) => {\r\n            let allMessages = [...cloneDeep(prevMessages)]\r\n            if (allMessages[allMessages.length - 1].type === 'userMessage') return allMessages\r\n            allMessages[allMessages.length - 1].message += text\r\n            return allMessages\r\n        })\r\n    }\r\n\r\n    const updateLastMessageSourceDocuments = (sourceDocuments) => {\r\n        setMessages((prevMessages) => {\r\n            let allMessages = [...cloneDeep(prevMessages)]\r\n            if (allMessages[allMessages.length - 1].type === 'userMessage') return allMessages\r\n            allMessages[allMessages.length - 1].sourceDocuments = sourceDocuments\r\n            return allMessages\r\n        })\r\n    }\r\n\r\n    // Handle errors\r\n    const handleError = (message = 'Oops! There seems to be an error. Please try again.') => {\r\n        message = message.replace(`Unable to parse JSON response from chat agent.\\n\\n`, '')\r\n        setMessages((prevMessages) => [...prevMessages, { message, type: 'apiMessage' }])\r\n        setLoading(false)\r\n        setUserInput('')\r\n        setTimeout(() => {\r\n            inputRef.current?.focus()\r\n        }, 100)\r\n    }\r\n\r\n    const handlePromptClick = async (promptStarterInput) => {\r\n        setUserInput(promptStarterInput)\r\n        handleSubmit(undefined, promptStarterInput)\r\n    }\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e, promptStarterInput) => {\r\n        if (e) e.preventDefault()\r\n\r\n        if (!promptStarterInput && userInput.trim() === '') {\r\n            return\r\n        }\r\n\r\n        let input = userInput\r\n\r\n        if (promptStarterInput !== undefined && promptStarterInput.trim() !== '') input = promptStarterInput\r\n\r\n        setLoading(true)\r\n        setMessages((prevMessages) => [...prevMessages, { message: input, type: 'userMessage' }])\r\n\r\n        // Send user question and history to API\r\n        try {\r\n            const params = {\r\n                question: input,\r\n                history: messages.filter((msg) => msg.message !== 'Hi there! How can I help?'),\r\n                chatId\r\n            }\r\n            if (isChatFlowAvailableToStream) params.socketIOClientId = socketIOClientId\r\n\r\n            const response = await predictionApi.sendMessageAndGetPrediction(chatflowid, params)\r\n\r\n            if (response.data) {\r\n                const data = response.data\r\n\r\n                if (!chatId) setChatId(data.chatId)\r\n\r\n                if (!isChatFlowAvailableToStream) {\r\n                    let text = ''\r\n                    if (data.text) text = data.text\r\n                    else if (data.json) text = '```json\\n' + JSON.stringify(data.json, null, 2)\r\n                    else text = JSON.stringify(data, null, 2)\r\n\r\n                    setMessages((prevMessages) => [\r\n                        ...prevMessages,\r\n                        {\r\n                            message: text,\r\n                            sourceDocuments: data?.sourceDocuments,\r\n                            usedTools: data?.usedTools,\r\n                            fileAnnotations: data?.fileAnnotations,\r\n                            type: 'apiMessage'\r\n                        }\r\n                    ])\r\n                }\r\n                setLocalStorageChatflow(chatflowid, data.chatId, messages)\r\n                setLoading(false)\r\n                setUserInput('')\r\n                setTimeout(() => {\r\n                    inputRef.current?.focus()\r\n                    scrollToBottom()\r\n                }, 100)\r\n            }\r\n        } catch (error) {\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            handleError(errorData)\r\n            return\r\n        }\r\n    }\r\n\r\n    // Prevent blank submissions and allow for multiline input\r\n    const handleEnter = (e) => {\r\n        // Check if IME composition is in progress\r\n        const isIMEComposition = e.isComposing || e.keyCode === 229\r\n        if (e.key === 'Enter' && userInput && !isIMEComposition) {\r\n            if (!e.shiftKey && userInput) {\r\n                handleSubmit(e)\r\n            }\r\n        } else if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const downloadFile = async (fileAnnotation) => {\r\n        try {\r\n            const response = await axios.post(\r\n                `${baseURL}/api/v1/openai-assistants-file`,\r\n                { fileName: fileAnnotation.fileName },\r\n                { responseType: 'blob' }\r\n            )\r\n            const blob = new Blob([response.data], { type: response.headers['content-type'] })\r\n            const downloadUrl = window.URL.createObjectURL(blob)\r\n            const link = document.createElement('a')\r\n            link.href = downloadUrl\r\n            link.download = fileAnnotation.fileName\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            link.remove()\r\n        } catch (error) {\r\n            console.error('Download failed:', error)\r\n        }\r\n    }\r\n\r\n    // Get chatmessages successful\r\n    useEffect(() => {\r\n        if (getChatmessageApi.data?.length) {\r\n            const chatId = getChatmessageApi.data[0]?.chatId\r\n            setChatId(chatId)\r\n            const loadedMessages = getChatmessageApi.data.map((message) => {\r\n                const obj = {\r\n                    message: message.content,\r\n                    type: message.role\r\n                }\r\n                if (message.sourceDocuments) obj.sourceDocuments = JSON.parse(message.sourceDocuments)\r\n                if (message.usedTools) obj.usedTools = JSON.parse(message.usedTools)\r\n                if (message.fileAnnotations) obj.fileAnnotations = JSON.parse(message.fileAnnotations)\r\n                return obj\r\n            })\r\n            setMessages((prevMessages) => [...prevMessages, ...loadedMessages])\r\n            setLocalStorageChatflow(chatflowid, chatId, messages)\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [getChatmessageApi.data])\r\n\r\n    // Get chatflow streaming capability\r\n    useEffect(() => {\r\n        if (getIsChatflowStreamingApi.data) {\r\n            setIsChatFlowAvailableToStream(getIsChatflowStreamingApi.data?.isStreaming ?? false)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [getIsChatflowStreamingApi.data])\r\n\r\n    useEffect(() => {\r\n        if (getChatflowConfig.data) {\r\n            if (getChatflowConfig.data?.chatbotConfig && JSON.parse(getChatflowConfig.data?.chatbotConfig)) {\r\n                let config = JSON.parse(getChatflowConfig.data?.chatbotConfig)\r\n                if (config.starterPrompts) {\r\n                    let inputFields = []\r\n                    Object.getOwnPropertyNames(config.starterPrompts).forEach((key) => {\r\n                        if (config.starterPrompts[key]) {\r\n                            inputFields.push(config.starterPrompts[key])\r\n                        }\r\n                    })\r\n                    setStarterPrompts(inputFields)\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [getChatflowConfig.data])\r\n\r\n    // Auto scroll chat to bottom\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [messages])\r\n\r\n    useEffect(() => {\r\n        if (isDialog && inputRef) {\r\n            setTimeout(() => {\r\n                inputRef.current?.focus()\r\n            }, 100)\r\n        }\r\n    }, [isDialog, inputRef])\r\n\r\n    useEffect(() => {\r\n        let socket\r\n        if (open && chatflowid) {\r\n            getChatmessageApi.request(chatflowid)\r\n            getIsChatflowStreamingApi.request(chatflowid)\r\n            getChatflowConfig.request(chatflowid)\r\n            scrollToBottom()\r\n\r\n            socket = socketIOClient(baseURL)\r\n\r\n            socket.on('connect', () => {\r\n                setSocketIOClientId(socket.id)\r\n            })\r\n\r\n            socket.on('start', () => {\r\n                setMessages((prevMessages) => [...prevMessages, { message: '', type: 'apiMessage' }])\r\n            })\r\n\r\n            socket.on('sourceDocuments', updateLastMessageSourceDocuments)\r\n\r\n            socket.on('token', updateLastMessage)\r\n        }\r\n\r\n        return () => {\r\n            setUserInput('')\r\n            setLoading(false)\r\n            setMessages([\r\n                {\r\n                    message: 'Hi there! How can I help?',\r\n                    type: 'apiMessage'\r\n                }\r\n            ])\r\n            if (socket) {\r\n                socket.disconnect()\r\n                setSocketIOClientId('')\r\n            }\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [open, chatflowid])\r\n\r\n    return (\r\n        <>\r\n            <div className={isDialog ? 'cloud-dialog' : 'cloud'}>\r\n                <div ref={ps} className='messagelist'>\r\n                    {messages &&\r\n                        messages.map((message, index) => {\r\n                            return (\r\n                                // The latest message sent by the user will be animated while waiting for a response\r\n                                <>\r\n                                    <Box\r\n                                        sx={{\r\n                                            background: message.type === 'apiMessage' ? theme.palette.asyncSelect.main : ''\r\n                                        }}\r\n                                        key={index}\r\n                                        style={{ display: 'flex' }}\r\n                                        className={\r\n                                            message.type === 'userMessage' && loading && index === messages.length - 1\r\n                                                ? customization.isDarkMode\r\n                                                    ? 'usermessagewaiting-dark'\r\n                                                    : 'usermessagewaiting-light'\r\n                                                : message.type === 'usermessagewaiting'\r\n                                                ? 'apimessage'\r\n                                                : 'usermessage'\r\n                                        }\r\n                                    >\r\n                                        {/* Display the correct icon depending on the message type */}\r\n                                        {message.type === 'apiMessage' ? (\r\n                                            <img src={robotPNG} alt='AI' width='30' height='30' className='boticon' />\r\n                                        ) : (\r\n                                            <img src={userPNG} alt='Me' width='30' height='30' className='usericon' />\r\n                                        )}\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\r\n                                            {message.usedTools && (\r\n                                                <div style={{ display: 'block', flexDirection: 'row', width: '100%' }}>\r\n                                                    {message.usedTools.map((tool, index) => {\r\n                                                        return (\r\n                                                            <Chip\r\n                                                                size='small'\r\n                                                                key={index}\r\n                                                                label={tool.tool}\r\n                                                                component='a'\r\n                                                                sx={{ mr: 1, mt: 1 }}\r\n                                                                variant='outlined'\r\n                                                                clickable\r\n                                                                onClick={() => onSourceDialogClick(tool, 'Used Tools')}\r\n                                                            />\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            )}\r\n                                            <div className='markdownanswer'>\r\n                                                {/* Messages are being rendered in Markdown format */}\r\n                                                <MemoizedReactMarkdown\r\n                                                    remarkPlugins={[remarkGfm, remarkMath]}\r\n                                                    rehypePlugins={[rehypeMathjax, rehypeRaw]}\r\n                                                    components={{\r\n                                                        code({ inline, className, children, ...props }) {\r\n                                                            const match = /language-(\\w+)/.exec(className || '')\r\n                                                            return !inline ? (\r\n                                                                <CodeBlock\r\n                                                                    key={Math.random()}\r\n                                                                    chatflowid={chatflowid}\r\n                                                                    isDialog={isDialog}\r\n                                                                    language={(match && match[1]) || ''}\r\n                                                                    value={String(children).replace(/\\n$/, '')}\r\n                                                                    {...props}\r\n                                                                />\r\n                                                            ) : (\r\n                                                                <code className={className} {...props}>\r\n                                                                    {children}\r\n                                                                </code>\r\n                                                            )\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    {message.message}\r\n                                                </MemoizedReactMarkdown>\r\n                                            </div>\r\n                                            {message.fileAnnotations && (\r\n                                                <div style={{ display: 'block', flexDirection: 'row', width: '100%' }}>\r\n                                                    {message.fileAnnotations.map((fileAnnotation, index) => {\r\n                                                        return (\r\n                                                            <Button\r\n                                                                sx={{ fontSize: '0.85rem', textTransform: 'none', mb: 1 }}\r\n                                                                key={index}\r\n                                                                variant='outlined'\r\n                                                                onClick={() => downloadFile(fileAnnotation)}\r\n                                                                endIcon={<IconDownload color={theme.palette.primary.main} />}\r\n                                                            >\r\n                                                                {fileAnnotation.fileName}\r\n                                                            </Button>\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            )}\r\n                                            {message.sourceDocuments && (\r\n                                                <div style={{ display: 'block', flexDirection: 'row', width: '100%' }}>\r\n                                                    {removeDuplicateURL(message).map((source, index) => {\r\n                                                        const URL =\r\n                                                            source.metadata && source.metadata.source\r\n                                                                ? isValidURL(source.metadata.source)\r\n                                                                : undefined\r\n                                                        return (\r\n                                                            <Chip\r\n                                                                size='small'\r\n                                                                key={index}\r\n                                                                label={\r\n                                                                    URL\r\n                                                                        ? URL.pathname.substring(0, 15) === '/'\r\n                                                                            ? URL.host\r\n                                                                            : `${URL.pathname.substring(0, 15)}...`\r\n                                                                        : `${source.pageContent.substring(0, 15)}...`\r\n                                                                }\r\n                                                                component='a'\r\n                                                                sx={{ mr: 1, mb: 1 }}\r\n                                                                variant='outlined'\r\n                                                                clickable\r\n                                                                onClick={() =>\r\n                                                                    URL ? onURLClick(source.metadata.source) : onSourceDialogClick(source)\r\n                                                                }\r\n                                                            />\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </Box>\r\n                                </>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ position: 'relative' }}>\r\n                {messages && messages.length === 1 && (\r\n                    <StarterPromptsCard starterPrompts={starterPrompts || []} onPromptClick={handlePromptClick} isGrid={isDialog} />\r\n                )}\r\n                <Divider />\r\n            </div>\r\n            <div className='center'>\r\n                <div style={{ width: '100%' }}>\r\n                    <form style={{ width: '100%' }} onSubmit={handleSubmit}>\r\n                        <OutlinedInput\r\n                            inputRef={inputRef}\r\n                            // eslint-disable-next-line\r\n                            autoFocus\r\n                            sx={{ width: '100%' }}\r\n                            disabled={loading || !chatflowid}\r\n                            onKeyDown={handleEnter}\r\n                            id='userInput'\r\n                            name='userInput'\r\n                            placeholder={loading ? 'Waiting for response...' : 'Type your question...'}\r\n                            value={userInput}\r\n                            onChange={onChange}\r\n                            multiline={true}\r\n                            maxRows={isDialog ? 7 : 2}\r\n                            endAdornment={\r\n                                <InputAdornment position='end' sx={{ padding: '15px' }}>\r\n                                    <IconButton type='submit' disabled={loading || !chatflowid} edge='end'>\r\n                                        {loading ? (\r\n                                            <div>\r\n                                                <CircularProgress color='inherit' size={20} />\r\n                                            </div>\r\n                                        ) : (\r\n                                            // Send icon SVG in input field\r\n                                            <IconSend\r\n                                                color={loading || !chatflowid ? '#9e9e9e' : customization.isDarkMode ? 'white' : '#1e88e5'}\r\n                                            />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <SourceDocDialog show={sourceDialogOpen} dialogProps={sourceDialogProps} onCancel={() => setSourceDialogOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nChatMessage.propTypes = {\r\n    open: PropTypes.bool,\r\n    chatflowid: PropTypes.string,\r\n    isDialog: PropTypes.bool\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,MAAM,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAChE,OAASC,WAAW,KAAQ,aAAa,CAEzC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,OAASC,SAAS,KAAQ,QAAQ,CAClC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAC1C,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,UAAU,KAAM,aAAa,CACpC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,OAASC,gBAAgB,CAAEC,aAAa,CAAEC,OAAO,CAAEC,cAAc,CAAEC,UAAU,CAAEC,GAAG,CAAEC,IAAI,CAAEC,MAAM,KAAQ,eAAe,CACvH,OAASC,QAAQ,KAAQ,sBAAsB,CAC/C,OAASC,QAAQ,CAAEC,YAAY,KAAQ,eAAe,CAEtD;AACA,OAASC,SAAS,KAAQ,iCAAiC,CAC3D,OAASC,qBAAqB,KAAQ,6CAA6C,CACnF,MAAO,CAAAC,eAAe,KAAM,qCAAqC,CACjE,MAAO,mBAAmB,CAE1B;AACA,MAAO,CAAAC,cAAc,KAAM,iBAAiB,CAC5C,MAAO,CAAAC,YAAY,KAAM,eAAe,CACxC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAE1C;AACA,MAAO,CAAAC,MAAM,KAAM,cAAc,CAEjC;AACA,OAASC,OAAO,CAAEC,SAAS,KAAQ,gBAAgB,CAEnD,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAC9C,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,CAAAC,kBAAkB,KAAM,6CAA6C,CAC5E,OAASC,UAAU,CAAEC,kBAAkB,CAAEC,uBAAuB,KAAQ,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE7F,MAAO,MAAM,CAAAC,WAAW,CAAGC,IAAA,EAAoC,IAAnC,CAAEC,IAAI,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACtD,KAAM,CAAAI,KAAK,CAAG7B,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAA8B,aAAa,CAAG9C,WAAW,CAAE+C,KAAK,EAAKA,KAAK,CAACD,aAAa,CAAC,CAEjE,KAAM,CAAAE,EAAE,CAAGnD,MAAM,CAAC,CAAC,CAEnB,KAAM,CAACoD,SAAS,CAAEC,YAAY,CAAC,CAAGtD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACuD,OAAO,CAAEC,UAAU,CAAC,CAAGxD,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACyD,QAAQ,CAAEC,WAAW,CAAC,CAAG1D,QAAQ,CAAC,CACrC,CACI2D,OAAO,CAAE,2BAA2B,CACpCC,IAAI,CAAE,YACV,CAAC,CACJ,CAAC,CACF,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG9D,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAC+D,2BAA2B,CAAEC,8BAA8B,CAAC,CAAGhE,QAAQ,CAAC,KAAK,CAAC,CACrF,KAAM,CAACiE,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlE,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACmE,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGpE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAM,CAACqE,MAAM,CAAEC,SAAS,CAAC,CAAGtE,QAAQ,CAACuE,SAAS,CAAC,CAE/C,KAAM,CAAAC,QAAQ,CAAGvE,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAwE,iBAAiB,CAAG5C,MAAM,CAACH,cAAc,CAACgD,kCAAkC,CAAC,CACnF,KAAM,CAAAC,yBAAyB,CAAG9C,MAAM,CAACF,YAAY,CAACiD,sBAAsB,CAAC,CAC7E,KAAM,CAAAC,iBAAiB,CAAGhD,MAAM,CAACF,YAAY,CAACmD,mBAAmB,CAAC,CAElE,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGhF,QAAQ,CAAC,EAAE,CAAC,CAExD,KAAM,CAAAiF,mBAAmB,CAAGA,CAACC,IAAI,CAAEC,KAAK,GAAK,CACzCf,oBAAoB,CAAC,CAAEc,IAAI,CAAEC,KAAM,CAAC,CAAC,CACrCjB,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAkB,UAAU,CAAIF,IAAI,EAAK,CACzBG,MAAM,CAACvC,IAAI,CAACoC,IAAI,CAAE,QAAQ,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAI,cAAc,CAAGA,CAAA,GAAM,CACzB,GAAIlC,EAAE,CAACmC,OAAO,CAAE,CACZnC,EAAE,CAACmC,OAAO,CAACC,QAAQ,CAAC,CAAEC,GAAG,CAAE1D,SAAU,CAAC,CAAC,CAC3C,CACJ,CAAC,CAED,KAAM,CAAA2D,QAAQ,CAAGvF,WAAW,CAAEwF,CAAC,EAAKrC,YAAY,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE,CAACvC,YAAY,CAAC,CAAC,CAEjF,KAAM,CAAAwC,iBAAiB,CAAIC,IAAI,EAAK,CAChCrC,WAAW,CAAEsC,YAAY,EAAK,CAC1B,GAAI,CAAAC,WAAW,CAAG,CAAC,GAAG3F,SAAS,CAAC0F,YAAY,CAAC,CAAC,CAC9C,GAAIC,WAAW,CAACA,WAAW,CAACC,MAAM,CAAG,CAAC,CAAC,CAACtC,IAAI,GAAK,aAAa,CAAE,MAAO,CAAAqC,WAAW,CAClFA,WAAW,CAACA,WAAW,CAACC,MAAM,CAAG,CAAC,CAAC,CAACvC,OAAO,EAAIoC,IAAI,CACnD,MAAO,CAAAE,WAAW,CACtB,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAE,gCAAgC,CAAIC,eAAe,EAAK,CAC1D1C,WAAW,CAAEsC,YAAY,EAAK,CAC1B,GAAI,CAAAC,WAAW,CAAG,CAAC,GAAG3F,SAAS,CAAC0F,YAAY,CAAC,CAAC,CAC9C,GAAIC,WAAW,CAACA,WAAW,CAACC,MAAM,CAAG,CAAC,CAAC,CAACtC,IAAI,GAAK,aAAa,CAAE,MAAO,CAAAqC,WAAW,CAClFA,WAAW,CAACA,WAAW,CAACC,MAAM,CAAG,CAAC,CAAC,CAACE,eAAe,CAAGA,eAAe,CACrE,MAAO,CAAAH,WAAW,CACtB,CAAC,CAAC,CACN,CAAC,CAED;AACA,KAAM,CAAAI,WAAW,CAAG,QAAAA,CAAA,CAAqE,IAApE,CAAA1C,OAAO,CAAA2C,SAAA,CAAAJ,MAAA,IAAAI,SAAA,MAAA/B,SAAA,CAAA+B,SAAA,IAAG,qDAAqD,CAChF3C,OAAO,CAAGA,OAAO,CAAC4C,OAAO,sDAAuD,EAAE,CAAC,CACnF7C,WAAW,CAAEsC,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,CAAErC,OAAO,CAAEC,IAAI,CAAE,YAAa,CAAC,CAAC,CAAC,CACjFJ,UAAU,CAAC,KAAK,CAAC,CACjBF,YAAY,CAAC,EAAE,CAAC,CAChBkD,UAAU,CAAC,IAAM,KAAAC,iBAAA,CACb,CAAAA,iBAAA,CAAAjC,QAAQ,CAACe,OAAO,UAAAkB,iBAAA,iBAAhBA,iBAAA,CAAkBC,KAAK,CAAC,CAAC,CAC7B,CAAC,CAAE,GAAG,CAAC,CACX,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,kBAAkB,EAAK,CACpDtD,YAAY,CAACsD,kBAAkB,CAAC,CAChCC,YAAY,CAACtC,SAAS,CAAEqC,kBAAkB,CAAC,CAC/C,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOlB,CAAC,CAAEiB,kBAAkB,GAAK,CAClD,GAAIjB,CAAC,CAAEA,CAAC,CAACmB,cAAc,CAAC,CAAC,CAEzB,GAAI,CAACF,kBAAkB,EAAIvD,SAAS,CAAC0D,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAChD,OACJ,CAEA,GAAI,CAAAC,KAAK,CAAG3D,SAAS,CAErB,GAAIuD,kBAAkB,GAAKrC,SAAS,EAAIqC,kBAAkB,CAACG,IAAI,CAAC,CAAC,GAAK,EAAE,CAAEC,KAAK,CAAGJ,kBAAkB,CAEpGpD,UAAU,CAAC,IAAI,CAAC,CAChBE,WAAW,CAAEsC,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,CAAErC,OAAO,CAAEqD,KAAK,CAAEpD,IAAI,CAAE,aAAc,CAAC,CAAC,CAAC,CAEzF;AACA,GAAI,CACA,KAAM,CAAAqD,MAAM,CAAG,CACXC,QAAQ,CAAEF,KAAK,CACfG,OAAO,CAAE1D,QAAQ,CAAC2D,MAAM,CAAEC,GAAG,EAAKA,GAAG,CAAC1D,OAAO,GAAK,2BAA2B,CAAC,CAC9EU,MACJ,CAAC,CACD,GAAIN,2BAA2B,CAAEkD,MAAM,CAACpD,gBAAgB,CAAGA,gBAAgB,CAE3E,KAAM,CAAAyD,QAAQ,CAAG,KAAM,CAAA1F,aAAa,CAAC2F,2BAA2B,CAACxE,UAAU,CAAEkE,MAAM,CAAC,CAEpF,GAAIK,QAAQ,CAACpC,IAAI,CAAE,CACf,KAAM,CAAAA,IAAI,CAAGoC,QAAQ,CAACpC,IAAI,CAE1B,GAAI,CAACb,MAAM,CAAEC,SAAS,CAACY,IAAI,CAACb,MAAM,CAAC,CAEnC,GAAI,CAACN,2BAA2B,CAAE,CAC9B,GAAI,CAAAgC,IAAI,CAAG,EAAE,CACb,GAAIb,IAAI,CAACa,IAAI,CAAEA,IAAI,CAAGb,IAAI,CAACa,IAAI,KAC1B,IAAIb,IAAI,CAACsC,IAAI,CAAEzB,IAAI,CAAG,WAAW,CAAG0B,IAAI,CAACC,SAAS,CAACxC,IAAI,CAACsC,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,KACtE,CAAAzB,IAAI,CAAG0B,IAAI,CAACC,SAAS,CAACxC,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAEzCxB,WAAW,CAAEsC,YAAY,EAAK,CAC1B,GAAGA,YAAY,CACf,CACIrC,OAAO,CAAEoC,IAAI,CACbK,eAAe,CAAElB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEkB,eAAe,CACtCuB,SAAS,CAAEzC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEyC,SAAS,CAC1BC,eAAe,CAAE1C,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE0C,eAAe,CACtChE,IAAI,CAAE,YACV,CAAC,CACJ,CAAC,CACN,CACAvB,uBAAuB,CAACU,UAAU,CAAEmC,IAAI,CAACb,MAAM,CAAEZ,QAAQ,CAAC,CAC1DD,UAAU,CAAC,KAAK,CAAC,CACjBF,YAAY,CAAC,EAAE,CAAC,CAChBkD,UAAU,CAAC,IAAM,KAAAqB,kBAAA,CACb,CAAAA,kBAAA,CAAArD,QAAQ,CAACe,OAAO,UAAAsC,kBAAA,iBAAhBA,kBAAA,CAAkBnB,KAAK,CAAC,CAAC,CACzBpB,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,GAAG,CAAC,CACX,CACJ,CAAE,MAAOwC,KAAK,CAAE,CACZ,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACR,QAAQ,CAACpC,IAAI,KAAA8C,MAAA,CAAOF,KAAK,CAACR,QAAQ,CAACW,MAAM,OAAAD,MAAA,CAAKF,KAAK,CAACR,QAAQ,CAACY,UAAU,CAAE,CACjG7B,WAAW,CAAC0B,SAAS,CAAC,CACtB,OACJ,CACJ,CAAC,CAED;AACA,KAAM,CAAAI,WAAW,CAAIxC,CAAC,EAAK,CACvB;AACA,KAAM,CAAAyC,gBAAgB,CAAGzC,CAAC,CAAC0C,WAAW,EAAI1C,CAAC,CAAC2C,OAAO,GAAK,GAAG,CAC3D,GAAI3C,CAAC,CAAC4C,GAAG,GAAK,OAAO,EAAIlF,SAAS,EAAI,CAAC+E,gBAAgB,CAAE,CACrD,GAAI,CAACzC,CAAC,CAAC6C,QAAQ,EAAInF,SAAS,CAAE,CAC1BwD,YAAY,CAAClB,CAAC,CAAC,CACnB,CACJ,CAAC,IAAM,IAAIA,CAAC,CAAC4C,GAAG,GAAK,OAAO,CAAE,CAC1B5C,CAAC,CAACmB,cAAc,CAAC,CAAC,CACtB,CACJ,CAAC,CAED,KAAM,CAAA2B,YAAY,CAAG,KAAO,CAAAC,cAAc,EAAK,CAC3C,GAAI,CACA,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAA3G,KAAK,CAACgI,IAAI,IAAAX,MAAA,CAC1BlG,OAAO,mCACV,CAAE8G,QAAQ,CAAEF,cAAc,CAACE,QAAS,CAAC,CACrC,CAAEC,YAAY,CAAE,MAAO,CAC3B,CAAC,CACD,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACzB,QAAQ,CAACpC,IAAI,CAAC,CAAE,CAAEtB,IAAI,CAAE0D,QAAQ,CAAC0B,OAAO,CAAC,cAAc,CAAE,CAAC,CAAC,CAClF,KAAM,CAAAC,WAAW,CAAG5D,MAAM,CAAC6D,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CACpD,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,WAAW,CACvBG,IAAI,CAACI,QAAQ,CAAGd,cAAc,CAACE,QAAQ,CACvCS,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZP,IAAI,CAACQ,MAAM,CAAC,CAAC,CACjB,CAAE,MAAO9B,KAAK,CAAE,CACZ+B,OAAO,CAAC/B,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC5C,CACJ,CAAC,CAED;AACA5H,SAAS,CAAC,IAAM,KAAA4J,qBAAA,CACZ,IAAAA,qBAAA,CAAIrF,iBAAiB,CAACS,IAAI,UAAA4E,qBAAA,WAAtBA,qBAAA,CAAwB5D,MAAM,CAAE,KAAA6D,sBAAA,CAChC,KAAM,CAAA1F,MAAM,EAAA0F,sBAAA,CAAGtF,iBAAiB,CAACS,IAAI,CAAC,CAAC,CAAC,UAAA6E,sBAAA,iBAAzBA,sBAAA,CAA2B1F,MAAM,CAChDC,SAAS,CAACD,MAAM,CAAC,CACjB,KAAM,CAAA2F,cAAc,CAAGvF,iBAAiB,CAACS,IAAI,CAAC+E,GAAG,CAAEtG,OAAO,EAAK,CAC3D,KAAM,CAAAuG,GAAG,CAAG,CACRvG,OAAO,CAAEA,OAAO,CAACwG,OAAO,CACxBvG,IAAI,CAAED,OAAO,CAACyG,IAClB,CAAC,CACD,GAAIzG,OAAO,CAACyC,eAAe,CAAE8D,GAAG,CAAC9D,eAAe,CAAGqB,IAAI,CAAC4C,KAAK,CAAC1G,OAAO,CAACyC,eAAe,CAAC,CACtF,GAAIzC,OAAO,CAACgE,SAAS,CAAEuC,GAAG,CAACvC,SAAS,CAAGF,IAAI,CAAC4C,KAAK,CAAC1G,OAAO,CAACgE,SAAS,CAAC,CACpE,GAAIhE,OAAO,CAACiE,eAAe,CAAEsC,GAAG,CAACtC,eAAe,CAAGH,IAAI,CAAC4C,KAAK,CAAC1G,OAAO,CAACiE,eAAe,CAAC,CACtF,MAAO,CAAAsC,GAAG,CACd,CAAC,CAAC,CACFxG,WAAW,CAAEsC,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,GAAGgE,cAAc,CAAC,CAAC,CACnE3H,uBAAuB,CAACU,UAAU,CAAEsB,MAAM,CAAEZ,QAAQ,CAAC,CACzD,CAEA;AACJ,CAAC,CAAE,CAACgB,iBAAiB,CAACS,IAAI,CAAC,CAAC,CAE5B;AACAhF,SAAS,CAAC,IAAM,CACZ,GAAIyE,yBAAyB,CAACO,IAAI,CAAE,KAAAoF,qBAAA,CAAAC,sBAAA,CAChCvG,8BAA8B,EAAAsG,qBAAA,EAAAC,sBAAA,CAAC5F,yBAAyB,CAACO,IAAI,UAAAqF,sBAAA,iBAA9BA,sBAAA,CAAgCC,WAAW,UAAAF,qBAAA,UAAAA,qBAAA,CAAI,KAAK,CAAC,CACxF,CACA;AACJ,CAAC,CAAE,CAAC3F,yBAAyB,CAACO,IAAI,CAAC,CAAC,CAEpChF,SAAS,CAAC,IAAM,CACZ,GAAI2E,iBAAiB,CAACK,IAAI,CAAE,KAAAuF,qBAAA,CAAAC,sBAAA,CACxB,GAAI,CAAAD,qBAAA,CAAA5F,iBAAiB,CAACK,IAAI,UAAAuF,qBAAA,WAAtBA,qBAAA,CAAwBE,aAAa,EAAIlD,IAAI,CAAC4C,KAAK,EAAAK,sBAAA,CAAC7F,iBAAiB,CAACK,IAAI,UAAAwF,sBAAA,iBAAtBA,sBAAA,CAAwBC,aAAa,CAAC,CAAE,KAAAC,sBAAA,CAC5F,GAAI,CAAAC,MAAM,CAAGpD,IAAI,CAAC4C,KAAK,EAAAO,sBAAA,CAAC/F,iBAAiB,CAACK,IAAI,UAAA0F,sBAAA,iBAAtBA,sBAAA,CAAwBD,aAAa,CAAC,CAC9D,GAAIE,MAAM,CAAC9F,cAAc,CAAE,CACvB,GAAI,CAAA+F,WAAW,CAAG,EAAE,CACpBC,MAAM,CAACC,mBAAmB,CAACH,MAAM,CAAC9F,cAAc,CAAC,CAACkG,OAAO,CAAE1C,GAAG,EAAK,CAC/D,GAAIsC,MAAM,CAAC9F,cAAc,CAACwD,GAAG,CAAC,CAAE,CAC5BuC,WAAW,CAACI,IAAI,CAACL,MAAM,CAAC9F,cAAc,CAACwD,GAAG,CAAC,CAAC,CAChD,CACJ,CAAC,CAAC,CACFvD,iBAAiB,CAAC8F,WAAW,CAAC,CAClC,CACJ,CACJ,CACA;AACJ,CAAC,CAAE,CAACjG,iBAAiB,CAACK,IAAI,CAAC,CAAC,CAE5B;AACAhF,SAAS,CAAC,IAAM,CACZoF,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,CAAC7B,QAAQ,CAAC,CAAC,CAEdvD,SAAS,CAAC,IAAM,CACZ,GAAI8C,QAAQ,EAAIwB,QAAQ,CAAE,CACtBgC,UAAU,CAAC,IAAM,KAAA2E,kBAAA,CACb,CAAAA,kBAAA,CAAA3G,QAAQ,CAACe,OAAO,UAAA4F,kBAAA,iBAAhBA,kBAAA,CAAkBzE,KAAK,CAAC,CAAC,CAC7B,CAAC,CAAE,GAAG,CAAC,CACX,CACJ,CAAC,CAAE,CAAC1D,QAAQ,CAAEwB,QAAQ,CAAC,CAAC,CAExBtE,SAAS,CAAC,IAAM,CACZ,GAAI,CAAAkL,MAAM,CACV,GAAItI,IAAI,EAAIC,UAAU,CAAE,CACpB0B,iBAAiB,CAAC4G,OAAO,CAACtI,UAAU,CAAC,CACrC4B,yBAAyB,CAAC0G,OAAO,CAACtI,UAAU,CAAC,CAC7C8B,iBAAiB,CAACwG,OAAO,CAACtI,UAAU,CAAC,CACrCuC,cAAc,CAAC,CAAC,CAEhB8F,MAAM,CAAG/K,cAAc,CAACyB,OAAO,CAAC,CAEhCsJ,MAAM,CAACE,EAAE,CAAC,SAAS,CAAE,IAAM,CACvBxH,mBAAmB,CAACsH,MAAM,CAACG,EAAE,CAAC,CAClC,CAAC,CAAC,CAEFH,MAAM,CAACE,EAAE,CAAC,OAAO,CAAE,IAAM,CACrB5H,WAAW,CAAEsC,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,CAAErC,OAAO,CAAE,EAAE,CAAEC,IAAI,CAAE,YAAa,CAAC,CAAC,CAAC,CACzF,CAAC,CAAC,CAEFwH,MAAM,CAACE,EAAE,CAAC,iBAAiB,CAAEnF,gCAAgC,CAAC,CAE9DiF,MAAM,CAACE,EAAE,CAAC,OAAO,CAAExF,iBAAiB,CAAC,CACzC,CAEA,MAAO,IAAM,CACTxC,YAAY,CAAC,EAAE,CAAC,CAChBE,UAAU,CAAC,KAAK,CAAC,CACjBE,WAAW,CAAC,CACR,CACIC,OAAO,CAAE,2BAA2B,CACpCC,IAAI,CAAE,YACV,CAAC,CACJ,CAAC,CACF,GAAIwH,MAAM,CAAE,CACRA,MAAM,CAACI,UAAU,CAAC,CAAC,CACnB1H,mBAAmB,CAAC,EAAE,CAAC,CAC3B,CACJ,CAAC,CAED;AACJ,CAAC,CAAE,CAAChB,IAAI,CAAEC,UAAU,CAAC,CAAC,CAEtB,mBACIN,KAAA,CAAAE,SAAA,EAAA8I,QAAA,eACIlJ,IAAA,QAAKmJ,SAAS,CAAE1I,QAAQ,CAAG,cAAc,CAAG,OAAQ,CAAAyI,QAAA,cAChDlJ,IAAA,QAAKoJ,GAAG,CAAEvI,EAAG,CAACsI,SAAS,CAAC,aAAa,CAAAD,QAAA,CAChChI,QAAQ,EACLA,QAAQ,CAACwG,GAAG,CAAC,CAACtG,OAAO,CAAEiI,KAAK,GAAK,CAC7B,oBACI;AACArJ,IAAA,CAAAI,SAAA,EAAA8I,QAAA,cACIhJ,KAAA,CAACxB,GAAG,EACA4K,EAAE,CAAE,CACAC,UAAU,CAAEnI,OAAO,CAACC,IAAI,GAAK,YAAY,CAAGX,KAAK,CAAC8I,OAAO,CAACC,WAAW,CAACC,IAAI,CAAG,EACjF,CAAE,CAEFC,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAC3BT,SAAS,CACL/H,OAAO,CAACC,IAAI,GAAK,aAAa,EAAIL,OAAO,EAAIqI,KAAK,GAAKnI,QAAQ,CAACyC,MAAM,CAAG,CAAC,CACpEhD,aAAa,CAACkJ,UAAU,CACpB,yBAAyB,CACzB,0BAA0B,CAC9BzI,OAAO,CAACC,IAAI,GAAK,oBAAoB,CACrC,YAAY,CACZ,aACT,CAAA6H,QAAA,EAGA9H,OAAO,CAACC,IAAI,GAAK,YAAY,cAC1BrB,IAAA,QAAK8J,GAAG,CAAErK,QAAS,CAACsK,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACd,SAAS,CAAC,SAAS,CAAE,CAAC,cAE1EnJ,IAAA,QAAK8J,GAAG,CAAEpK,OAAQ,CAACqK,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACd,SAAS,CAAC,UAAU,CAAE,CAC5E,cACDjJ,KAAA,QAAKyJ,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEM,aAAa,CAAE,QAAQ,CAAEF,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,EACnE9H,OAAO,CAACgE,SAAS,eACdpF,IAAA,QAAK2J,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAO,CAAEM,aAAa,CAAE,KAAK,CAAEF,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,CACjE9H,OAAO,CAACgE,SAAS,CAACsC,GAAG,CAAC,CAACyC,IAAI,CAAEd,KAAK,GAAK,CACpC,mBACIrJ,IAAA,CAACrB,IAAI,EACDyL,IAAI,CAAC,OAAO,CAEZC,KAAK,CAAEF,IAAI,CAACA,IAAK,CACjBG,SAAS,CAAC,GAAG,CACbhB,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CACrBC,OAAO,CAAC,UAAU,CAClBC,SAAS,MACTC,OAAO,CAAEA,CAAA,GAAMjI,mBAAmB,CAACyH,IAAI,CAAE,YAAY,CAAE,EANlDd,KAOR,CAAC,CAEV,CAAC,CAAC,CACD,CACR,cACDrJ,IAAA,QAAKmJ,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAE3BlJ,IAAA,CAACf,qBAAqB,EAClB2L,aAAa,CAAE,CAAC1M,SAAS,CAAEC,UAAU,CAAE,CACvC0M,aAAa,CAAE,CAAC7M,aAAa,CAAEC,SAAS,CAAE,CAC1C6M,UAAU,CAAE,CACRC,IAAIA,CAAAC,KAAA,CAA4C,IAA3C,CAAEC,MAAM,CAAE9B,SAAS,CAAED,QAAQ,CAAE,GAAGgC,KAAM,CAAC,CAAAF,KAAA,CAC1C,KAAM,CAAAG,KAAK,CAAG,gBAAgB,CAACC,IAAI,CAACjC,SAAS,EAAI,EAAE,CAAC,CACpD,MAAO,CAAC8B,MAAM,cACVjL,IAAA,CAAChB,SAAS,EAENwB,UAAU,CAAEA,UAAW,CACvBC,QAAQ,CAAEA,QAAS,CACnB4K,QAAQ,CAAGF,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,EAAK,EAAG,CACpC7H,KAAK,CAAEgI,MAAM,CAACpC,QAAQ,CAAC,CAAClF,OAAO,CAAC,KAAK,CAAE,EAAE,CAAE,IACvCkH,KAAK,EALJK,IAAI,CAACC,MAAM,CAAC,CAMpB,CAAC,cAEFxL,IAAA,SAAMmJ,SAAS,CAAEA,SAAU,IAAK+B,KAAK,CAAAhC,QAAA,CAChCA,QAAQ,CACP,CACT,CACL,CACJ,CAAE,CAAAA,QAAA,CAED9H,OAAO,CAACA,OAAO,CACG,CAAC,CACvB,CAAC,CACLA,OAAO,CAACiE,eAAe,eACpBrF,IAAA,QAAK2J,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAO,CAAEM,aAAa,CAAE,KAAK,CAAEF,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,CACjE9H,OAAO,CAACiE,eAAe,CAACqC,GAAG,CAAC,CAACvB,cAAc,CAAEkD,KAAK,GAAK,CACpD,mBACIrJ,IAAA,CAACpB,MAAM,EACH0K,EAAE,CAAE,CAAEmC,QAAQ,CAAE,SAAS,CAAEC,aAAa,CAAE,MAAM,CAAEC,EAAE,CAAE,CAAE,CAAE,CAE1DlB,OAAO,CAAC,UAAU,CAClBE,OAAO,CAAEA,CAAA,GAAMzE,YAAY,CAACC,cAAc,CAAE,CAC5CyF,OAAO,cAAE5L,IAAA,CAACjB,YAAY,EAAC8M,KAAK,CAAEnL,KAAK,CAAC8I,OAAO,CAACsC,OAAO,CAACpC,IAAK,CAAE,CAAE,CAAAR,QAAA,CAE5D/C,cAAc,CAACE,QAAQ,EALnBgD,KAMD,CAAC,CAEjB,CAAC,CAAC,CACD,CACR,CACAjI,OAAO,CAACyC,eAAe,eACpB7D,IAAA,QAAK2J,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAO,CAAEM,aAAa,CAAE,KAAK,CAAEF,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,CACjErJ,kBAAkB,CAACuB,OAAO,CAAC,CAACsG,GAAG,CAAC,CAACqE,MAAM,CAAE1C,KAAK,GAAK,CAChD,KAAM,CAAA1C,GAAG,CACLoF,MAAM,CAACC,QAAQ,EAAID,MAAM,CAACC,QAAQ,CAACD,MAAM,CACnCnM,UAAU,CAACmM,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC,CAClC/J,SAAS,CACnB,mBACIhC,IAAA,CAACrB,IAAI,EACDyL,IAAI,CAAC,OAAO,CAEZC,KAAK,CACD1D,GAAG,CACGA,GAAG,CAACsF,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAK,GAAG,CACjCvF,GAAG,CAACwF,IAAI,IAAA1G,MAAA,CACLkB,GAAG,CAACsF,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,OAAK,IAAAzG,MAAA,CACtCsG,MAAM,CAACK,WAAW,CAACF,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,OAC/C,CACD5B,SAAS,CAAC,GAAG,CACbhB,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAC,CAAEoB,EAAE,CAAE,CAAE,CAAE,CACrBlB,OAAO,CAAC,UAAU,CAClBC,SAAS,MACTC,OAAO,CAAEA,CAAA,GACLhE,GAAG,CAAG9D,UAAU,CAACkJ,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC,CAAGrJ,mBAAmB,CAACqJ,MAAM,CACxE,EAdI1C,KAeR,CAAC,CAEV,CAAC,CAAC,CACD,CACR,EACA,CAAC,GAhHDA,KAiHJ,CAAC,CACR,CAAC,EAEX,CAAC,CAAC,CACL,CAAC,CACL,CAAC,cAENnJ,KAAA,QAAKyJ,KAAK,CAAE,CAAE0C,QAAQ,CAAE,UAAW,CAAE,CAAAnD,QAAA,EAChChI,QAAQ,EAAIA,QAAQ,CAACyC,MAAM,GAAK,CAAC,eAC9B3D,IAAA,CAACL,kBAAkB,EAAC6C,cAAc,CAAEA,cAAc,EAAI,EAAG,CAAC8J,aAAa,CAAElI,iBAAkB,CAACmI,MAAM,CAAE9L,QAAS,CAAE,CAClH,cACDT,IAAA,CAACzB,OAAO,GAAE,CAAC,EACV,CAAC,cACNyB,IAAA,QAAKmJ,SAAS,CAAC,QAAQ,CAAAD,QAAA,cACnBlJ,IAAA,QAAK2J,KAAK,CAAE,CAAEK,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,cAC1BlJ,IAAA,SAAM2J,KAAK,CAAE,CAAEK,KAAK,CAAE,MAAO,CAAE,CAACwC,QAAQ,CAAElI,YAAa,CAAA4E,QAAA,cACnDlJ,IAAA,CAAC1B,aAAa,EACV2D,QAAQ,CAAEA,QACV;AAAA,CACAwK,SAAS,MACTnD,EAAE,CAAE,CAAEU,KAAK,CAAE,MAAO,CAAE,CACtB0C,QAAQ,CAAE1L,OAAO,EAAI,CAACR,UAAW,CACjCmM,SAAS,CAAE/G,WAAY,CACvBoD,EAAE,CAAC,WAAW,CACd4D,IAAI,CAAC,WAAW,CAChBC,WAAW,CAAE7L,OAAO,CAAG,yBAAyB,CAAG,uBAAwB,CAC3EsC,KAAK,CAAExC,SAAU,CACjBqC,QAAQ,CAAEA,QAAS,CACnB2J,SAAS,CAAE,IAAK,CAChBC,OAAO,CAAEtM,QAAQ,CAAG,CAAC,CAAG,CAAE,CAC1BuM,YAAY,cACRhN,IAAA,CAACxB,cAAc,EAAC6N,QAAQ,CAAC,KAAK,CAAC/C,EAAE,CAAE,CAAE2D,OAAO,CAAE,MAAO,CAAE,CAAA/D,QAAA,cACnDlJ,IAAA,CAACvB,UAAU,EAAC4C,IAAI,CAAC,QAAQ,CAACqL,QAAQ,CAAE1L,OAAO,EAAI,CAACR,UAAW,CAAC0M,IAAI,CAAC,KAAK,CAAAhE,QAAA,CACjElI,OAAO,cACJhB,IAAA,QAAAkJ,QAAA,cACIlJ,IAAA,CAAC3B,gBAAgB,EAACwN,KAAK,CAAC,SAAS,CAACzB,IAAI,CAAE,EAAG,CAAE,CAAC,CAC7C,CAAC,eAEN;AACApK,IAAA,CAAClB,QAAQ,EACL+M,KAAK,CAAE7K,OAAO,EAAI,CAACR,UAAU,CAAG,SAAS,CAAGG,aAAa,CAACkJ,UAAU,CAAG,OAAO,CAAG,SAAU,CAC9F,CACJ,CACO,CAAC,CACD,CACnB,CACJ,CAAC,CACA,CAAC,CACN,CAAC,CACL,CAAC,cACN7J,IAAA,CAACd,eAAe,EAACiO,IAAI,CAAEzL,gBAAiB,CAAC0L,WAAW,CAAExL,iBAAkB,CAACyL,QAAQ,CAAEA,CAAA,GAAM1L,mBAAmB,CAAC,KAAK,CAAE,CAAE,CAAC,EACzH,CAAC,CAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}