{"ast":null,"code":"import{useState,useEffect,Fragment}from'react';import{useSelector}from'react-redux';import axios from'axios';// Material\nimport Autocomplete,{autocompleteClasses}from'@mui/material/Autocomplete';import{Popper,CircularProgress,TextField,Box,Typography}from'@mui/material';import{styled}from'@mui/material/styles';// API\nimport credentialsApi from'api/credentials';// const\nimport{baseURL}from'store/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const StyledPopper=styled(Popper)({boxShadow:'0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)',borderRadius:'10px',[\"& .\".concat(autocompleteClasses.listbox)]:{boxSizing:'border-box','& ul':{padding:10,margin:10}}});const fetchList=async _ref=>{var _nodeData$inputParams;let{name,nodeData}=_ref;const loadMethod=(_nodeData$inputParams=nodeData.inputParams.find(param=>param.name===name))===null||_nodeData$inputParams===void 0?void 0:_nodeData$inputParams.loadMethod;const username=localStorage.getItem('username');const password=localStorage.getItem('password');let lists=await axios.post(\"\".concat(baseURL,\"/api/v1/node-load-method/\").concat(nodeData.name),{...nodeData,loadMethod},{auth:username&&password?{username,password}:undefined}).then(async function(response){return response.data;}).catch(function(error){console.error(error);});return lists;};export const AsyncDropdown=_ref2=>{let{name,nodeData,value,onSelect,isCreateNewOption,onCreateNew,credentialNames=[],disabled=false,disableClearable=false}=_ref2;const customization=useSelector(state=>state.customization);const[open,setOpen]=useState(false);const[options,setOptions]=useState([]);const[loading,setLoading]=useState(false);const findMatchingOptions=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let value=arguments.length>1?arguments[1]:undefined;return options.find(option=>option.name===value);};const getDefaultOptionValue=()=>'';const addNewOption=[{label:'- Create New -',name:'-create-'}];let[internalValue,setInternalValue]=useState(value!==null&&value!==void 0?value:'choose an option');const fetchCredentialList=async()=>{try{let names='';if(credentialNames.length>1){names=credentialNames.join('&credentialName=');}else{names=credentialNames[0];}const resp=await credentialsApi.getCredentialsByName(names);if(resp.data){const returnList=[];for(let i=0;i<resp.data.length;i+=1){const data={label:resp.data[i].name,name:resp.data[i].id};returnList.push(data);}return returnList;}}catch(error){console.error(error);}};useEffect(()=>{setLoading(true);(async()=>{const fetchData=async()=>{let response=credentialNames.length?await fetchCredentialList():await fetchList({name,nodeData});if(isCreateNewOption)setOptions([...response,...addNewOption]);else setOptions([...response]);setLoading(false);};fetchData();})();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Autocomplete,{id:name,disabled:disabled,disableClearable:disableClearable,size:\"small\",sx:{width:'100%'},open:open,onOpen:()=>{setOpen(true);},onClose:()=>{setOpen(false);},options:options,value:findMatchingOptions(options,internalValue)||getDefaultOptionValue(),onChange:(e,selection)=>{const value=selection?selection.name:'';if(isCreateNewOption&&value==='-create-'){onCreateNew();}else{setInternalValue(value);onSelect(value);}},PopperComponent:StyledPopper,loading:loading,renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,value:internalValue,InputProps:{...params.InputProps,endAdornment:/*#__PURE__*/_jsxs(Fragment,{children:[loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:20}):null,params.InputProps.endAdornment]})}}),renderOption:(props,option)=>/*#__PURE__*/_jsx(Box,{component:\"li\",...props,children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:option.label}),option.description&&/*#__PURE__*/_jsx(Typography,{sx:{color:customization.isDarkMode?'#9e9e9e':''},children:option.description})]})})})});};","map":{"version":3,"names":["useState","useEffect","Fragment","useSelector","axios","Autocomplete","autocompleteClasses","Popper","CircularProgress","TextField","Box","Typography","styled","credentialsApi","baseURL","jsx","_jsx","jsxs","_jsxs","_Fragment","StyledPopper","boxShadow","borderRadius","concat","listbox","boxSizing","padding","margin","fetchList","_ref","_nodeData$inputParams","name","nodeData","loadMethod","inputParams","find","param","username","localStorage","getItem","password","lists","post","auth","undefined","then","response","data","catch","error","console","AsyncDropdown","_ref2","value","onSelect","isCreateNewOption","onCreateNew","credentialNames","disabled","disableClearable","customization","state","open","setOpen","options","setOptions","loading","setLoading","findMatchingOptions","arguments","length","option","getDefaultOptionValue","addNewOption","label","internalValue","setInternalValue","fetchCredentialList","names","join","resp","getCredentialsByName","returnList","i","id","push","fetchData","children","size","sx","width","onOpen","onClose","onChange","e","selection","PopperComponent","renderInput","params","InputProps","endAdornment","color","renderOption","props","component","style","display","flexDirection","variant","description","isDarkMode"],"sources":["D:/Flowise/packages/ui/src/ui-component/dropdown/AsyncDropdown.js"],"sourcesContent":["import { useState, useEffect, Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\n\r\n// Material\r\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete'\r\nimport { Popper, CircularProgress, TextField, Box, Typography } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\n// API\r\nimport credentialsApi from 'api/credentials'\r\n\r\n// const\r\nimport { baseURL } from 'store/constant'\r\n\r\nconst StyledPopper = styled(Popper)({\r\n    boxShadow: '0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)',\r\n    borderRadius: '10px',\r\n    [`& .${autocompleteClasses.listbox}`]: {\r\n        boxSizing: 'border-box',\r\n        '& ul': {\r\n            padding: 10,\r\n            margin: 10\r\n        }\r\n    }\r\n})\r\n\r\nconst fetchList = async ({ name, nodeData }) => {\r\n    const loadMethod = nodeData.inputParams.find((param) => param.name === name)?.loadMethod\r\n    const username = localStorage.getItem('username')\r\n    const password = localStorage.getItem('password')\r\n\r\n    let lists = await axios\r\n        .post(\r\n            `${baseURL}/api/v1/node-load-method/${nodeData.name}`,\r\n            { ...nodeData, loadMethod },\r\n            { auth: username && password ? { username, password } : undefined }\r\n        )\r\n        .then(async function (response) {\r\n            return response.data\r\n        })\r\n        .catch(function (error) {\r\n            console.error(error)\r\n        })\r\n    return lists\r\n}\r\n\r\nexport const AsyncDropdown = ({\r\n    name,\r\n    nodeData,\r\n    value,\r\n    onSelect,\r\n    isCreateNewOption,\r\n    onCreateNew,\r\n    credentialNames = [],\r\n    disabled = false,\r\n    disableClearable = false\r\n}) => {\r\n    const customization = useSelector((state) => state.customization)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [options, setOptions] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const findMatchingOptions = (options = [], value) => options.find((option) => option.name === value)\r\n    const getDefaultOptionValue = () => ''\r\n    const addNewOption = [{ label: '- Create New -', name: '-create-' }]\r\n    let [internalValue, setInternalValue] = useState(value ?? 'choose an option')\r\n\r\n    const fetchCredentialList = async () => {\r\n        try {\r\n            let names = ''\r\n            if (credentialNames.length > 1) {\r\n                names = credentialNames.join('&credentialName=')\r\n            } else {\r\n                names = credentialNames[0]\r\n            }\r\n            const resp = await credentialsApi.getCredentialsByName(names)\r\n            if (resp.data) {\r\n                const returnList = []\r\n                for (let i = 0; i < resp.data.length; i += 1) {\r\n                    const data = {\r\n                        label: resp.data[i].name,\r\n                        name: resp.data[i].id\r\n                    }\r\n                    returnList.push(data)\r\n                }\r\n                return returnList\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        ;(async () => {\r\n            const fetchData = async () => {\r\n                let response = credentialNames.length ? await fetchCredentialList() : await fetchList({ name, nodeData })\r\n                if (isCreateNewOption) setOptions([...response, ...addNewOption])\r\n                else setOptions([...response])\r\n                setLoading(false)\r\n            }\r\n            fetchData()\r\n        })()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Autocomplete\r\n                id={name}\r\n                disabled={disabled}\r\n                disableClearable={disableClearable}\r\n                size='small'\r\n                sx={{ width: '100%' }}\r\n                open={open}\r\n                onOpen={() => {\r\n                    setOpen(true)\r\n                }}\r\n                onClose={() => {\r\n                    setOpen(false)\r\n                }}\r\n                options={options}\r\n                value={findMatchingOptions(options, internalValue) || getDefaultOptionValue()}\r\n                onChange={(e, selection) => {\r\n                    const value = selection ? selection.name : ''\r\n                    if (isCreateNewOption && value === '-create-') {\r\n                        onCreateNew()\r\n                    } else {\r\n                        setInternalValue(value)\r\n                        onSelect(value)\r\n                    }\r\n                }}\r\n                PopperComponent={StyledPopper}\r\n                loading={loading}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        value={internalValue}\r\n                        InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                                <Fragment>\r\n                                    {loading ? <CircularProgress color='inherit' size={20} /> : null}\r\n                                    {params.InputProps.endAdornment}\r\n                                </Fragment>\r\n                            )\r\n                        }}\r\n                    />\r\n                )}\r\n                renderOption={(props, option) => (\r\n                    <Box component='li' {...props}>\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <Typography variant='h5'>{option.label}</Typography>\r\n                            {option.description && (\r\n                                <Typography sx={{ color: customization.isDarkMode ? '#9e9e9e' : '' }}>{option.description}</Typography>\r\n                            )}\r\n                        </div>\r\n                    </Box>\r\n                )}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nAsyncDropdown.propTypes = {\r\n    name: PropTypes.string,\r\n    nodeData: PropTypes.object,\r\n    value: PropTypes.string,\r\n    onSelect: PropTypes.func,\r\n    onCreateNew: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    credentialNames: PropTypes.array,\r\n    disableClearable: PropTypes.bool,\r\n    isCreateNewOption: PropTypes.bool\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}