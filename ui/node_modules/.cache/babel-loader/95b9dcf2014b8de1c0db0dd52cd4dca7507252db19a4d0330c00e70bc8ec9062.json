{"ast":null,"code":"import{useState,useEffect}from'react';import{createPortal}from'react-dom';import{Stack,Typography,Dialog,DialogContent,DialogTitle,DialogActions,Box}from'@mui/material';import CredentialInputHandler from'views/canvas/CredentialInputHandler';import{Dropdown}from'ui-component/dropdown/Dropdown';import{StyledButton}from'ui-component/button/StyledButton';import assistantsApi from'api/assistants';import useApi from'hooks/useApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoadAssistantDialog=_ref=>{let{show,dialogProps,onCancel,onAssistantSelected}=_ref;const portalElement=document.getElementById('portal');const getAllAvailableAssistantsApi=useApi(assistantsApi.getAllAvailableAssistants);const[credentialId,setCredentialId]=useState('');const[availableAssistantsOptions,setAvailableAssistantsOptions]=useState([]);const[selectedOpenAIAssistantId,setSelectedOpenAIAssistantId]=useState('');useEffect(()=>{return()=>{setCredentialId('');setAvailableAssistantsOptions([]);setSelectedOpenAIAssistantId('');};},[dialogProps]);useEffect(()=>{if(getAllAvailableAssistantsApi.data&&getAllAvailableAssistantsApi.data.length){const assistants=[];for(let i=0;i<getAllAvailableAssistantsApi.data.length;i+=1){assistants.push({label:getAllAvailableAssistantsApi.data[i].name,name:getAllAvailableAssistantsApi.data[i].id,description:getAllAvailableAssistantsApi.data[i].instructions});}setAvailableAssistantsOptions(assistants);}},[getAllAvailableAssistantsApi.data]);const component=show?/*#__PURE__*/_jsxs(Dialog,{fullWidth:true,maxWidth:\"xs\",open:show,onClose:onCancel,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:dialogProps.title}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"OpenAI Credential\",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"})]})}),/*#__PURE__*/_jsx(CredentialInputHandler,{data:credentialId?{credential:credentialId}:{},inputParam:{label:'Connect Credential',name:'credential',type:'credential',credentialNames:['openAIApi']},onSelect:newValue=>{setCredentialId(newValue);if(newValue)getAllAvailableAssistantsApi.request(newValue);}},credentialId)]}),credentialId&&/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Stack,{sx:{position:'relative'},direction:\"row\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"overline\",children:[\"Assistants\",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"})]})}),/*#__PURE__*/_jsx(Dropdown,{name:selectedOpenAIAssistantId,options:availableAssistantsOptions,onSelect:newValue=>setSelectedOpenAIAssistantId(newValue),value:selectedOpenAIAssistantId!==null&&selectedOpenAIAssistantId!==void 0?selectedOpenAIAssistantId:'choose an option'})]})]}),selectedOpenAIAssistantId&&/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(StyledButton,{variant:\"contained\",onClick:()=>onAssistantSelected(selectedOpenAIAssistantId,credentialId),children:\"Load\"})})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default LoadAssistantDialog;","map":{"version":3,"names":["useState","useEffect","createPortal","Stack","Typography","Dialog","DialogContent","DialogTitle","DialogActions","Box","CredentialInputHandler","Dropdown","StyledButton","assistantsApi","useApi","jsx","_jsx","jsxs","_jsxs","LoadAssistantDialog","_ref","show","dialogProps","onCancel","onAssistantSelected","portalElement","document","getElementById","getAllAvailableAssistantsApi","getAllAvailableAssistants","credentialId","setCredentialId","availableAssistantsOptions","setAvailableAssistantsOptions","selectedOpenAIAssistantId","setSelectedOpenAIAssistantId","data","length","assistants","i","push","label","name","id","description","instructions","component","fullWidth","maxWidth","open","onClose","children","sx","fontSize","title","p","position","direction","variant","style","color","credential","inputParam","type","credentialNames","onSelect","newValue","request","options","value","onClick"],"sources":["D:/Flowise/packages/ui/src/views/assistants/LoadAssistantDialog.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Stack, Typography, Dialog, DialogContent, DialogTitle, DialogActions, Box } from '@mui/material'\r\nimport CredentialInputHandler from 'views/canvas/CredentialInputHandler'\r\nimport { Dropdown } from 'ui-component/dropdown/Dropdown'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\nimport assistantsApi from 'api/assistants'\r\nimport useApi from 'hooks/useApi'\r\n\r\nconst LoadAssistantDialog = ({ show, dialogProps, onCancel, onAssistantSelected }) => {\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const getAllAvailableAssistantsApi = useApi(assistantsApi.getAllAvailableAssistants)\r\n\r\n    const [credentialId, setCredentialId] = useState('')\r\n    const [availableAssistantsOptions, setAvailableAssistantsOptions] = useState([])\r\n    const [selectedOpenAIAssistantId, setSelectedOpenAIAssistantId] = useState('')\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setCredentialId('')\r\n            setAvailableAssistantsOptions([])\r\n            setSelectedOpenAIAssistantId('')\r\n        }\r\n    }, [dialogProps])\r\n\r\n    useEffect(() => {\r\n        if (getAllAvailableAssistantsApi.data && getAllAvailableAssistantsApi.data.length) {\r\n            const assistants = []\r\n            for (let i = 0; i < getAllAvailableAssistantsApi.data.length; i += 1) {\r\n                assistants.push({\r\n                    label: getAllAvailableAssistantsApi.data[i].name,\r\n                    name: getAllAvailableAssistantsApi.data[i].id,\r\n                    description: getAllAvailableAssistantsApi.data[i].instructions\r\n                })\r\n            }\r\n            setAvailableAssistantsOptions(assistants)\r\n        }\r\n    }, [getAllAvailableAssistantsApi.data])\r\n\r\n    const component = show ? (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='xs'\r\n            open={show}\r\n            onClose={onCancel}\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                {dialogProps.title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>\r\n                            OpenAI Credential\r\n                            <span style={{ color: 'red' }}>&nbsp;*</span>\r\n                        </Typography>\r\n                    </Stack>\r\n                    <CredentialInputHandler\r\n                        key={credentialId}\r\n                        data={credentialId ? { credential: credentialId } : {}}\r\n                        inputParam={{\r\n                            label: 'Connect Credential',\r\n                            name: 'credential',\r\n                            type: 'credential',\r\n                            credentialNames: ['openAIApi']\r\n                        }}\r\n                        onSelect={(newValue) => {\r\n                            setCredentialId(newValue)\r\n                            if (newValue) getAllAvailableAssistantsApi.request(newValue)\r\n                        }}\r\n                    />\r\n                </Box>\r\n                {credentialId && (\r\n                    <Box sx={{ p: 2 }}>\r\n                        <Stack sx={{ position: 'relative' }} direction='row'>\r\n                            <Typography variant='overline'>\r\n                                Assistants\r\n                                <span style={{ color: 'red' }}>&nbsp;*</span>\r\n                            </Typography>\r\n                        </Stack>\r\n                        <Dropdown\r\n                            name={selectedOpenAIAssistantId}\r\n                            options={availableAssistantsOptions}\r\n                            onSelect={(newValue) => setSelectedOpenAIAssistantId(newValue)}\r\n                            value={selectedOpenAIAssistantId ?? 'choose an option'}\r\n                        />\r\n                    </Box>\r\n                )}\r\n            </DialogContent>\r\n            {selectedOpenAIAssistantId && (\r\n                <DialogActions>\r\n                    <StyledButton variant='contained' onClick={() => onAssistantSelected(selectedOpenAIAssistantId, credentialId)}>\r\n                        Load\r\n                    </StyledButton>\r\n                </DialogActions>\r\n            )}\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nLoadAssistantDialog.propTypes = {\r\n    show: PropTypes.bool,\r\n    dialogProps: PropTypes.object,\r\n    onCancel: PropTypes.func,\r\n    onAssistantSelected: PropTypes.func\r\n}\r\n\r\nexport default LoadAssistantDialog\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}