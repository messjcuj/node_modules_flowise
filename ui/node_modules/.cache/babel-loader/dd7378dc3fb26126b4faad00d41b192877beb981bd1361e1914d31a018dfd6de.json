{"ast":null,"code":"import{createPortal}from'react-dom';import{Dialog,DialogContent,DialogTitle}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const HowToUseFunctionDialog=_ref=>{let{show,onCancel}=_ref;const portalElement=document.getElementById('portal');const component=show?/*#__PURE__*/_jsxs(Dialog,{onClose:onCancel,open:show,fullWidth:true,maxWidth:\"sm\",\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:\"How To Use Function\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{style:{marginTop:10},children:\"You can use any libraries imported in Flowise\"}),/*#__PURE__*/_jsxs(\"li\",{style:{marginTop:10},children:[\"You can use properties specified in Output Schema as variables with prefix $:\",/*#__PURE__*/_jsxs(\"ul\",{style:{marginTop:10},children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Property = \",/*#__PURE__*/_jsx(\"code\",{children:\"userid\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Variable = \",/*#__PURE__*/_jsx(\"code\",{children:\"$userid\"})]})]})]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginTop:10},children:[\"You can get default flow config:\",/*#__PURE__*/_jsxs(\"ul\",{style:{marginTop:10},children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"$flow.sessionId\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"$flow.chatId\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"$flow.chatflowId\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"$flow.input\"})})]})]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginTop:10},children:[\"You can get custom variables:\\xA0\",/*#__PURE__*/_jsx(\"code\",{children:\"$vars.<variable-name>\"})]}),/*#__PURE__*/_jsx(\"li\",{style:{marginTop:10},children:\"Must return a string value at the end of function\"})]})})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default HowToUseFunctionDialog;","map":{"version":3,"names":["createPortal","Dialog","DialogContent","DialogTitle","jsx","_jsx","jsxs","_jsxs","HowToUseFunctionDialog","_ref","show","onCancel","portalElement","document","getElementById","component","onClose","open","fullWidth","maxWidth","children","sx","fontSize","id","style","marginTop"],"sources":["D:/Flowise/packages/ui/src/views/tools/HowToUseFunctionDialog.js"],"sourcesContent":["import { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Dialog, DialogContent, DialogTitle } from '@mui/material'\r\n\r\nconst HowToUseFunctionDialog = ({ show, onCancel }) => {\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const component = show ? (\r\n        <Dialog\r\n            onClose={onCancel}\r\n            open={show}\r\n            fullWidth\r\n            maxWidth='sm'\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                How To Use Function\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <ul>\r\n                    <li style={{ marginTop: 10 }}>You can use any libraries imported in Flowise</li>\r\n                    <li style={{ marginTop: 10 }}>\r\n                        You can use properties specified in Output Schema as variables with prefix $:\r\n                        <ul style={{ marginTop: 10 }}>\r\n                            <li>\r\n                                Property = <code>userid</code>\r\n                            </li>\r\n                            <li>\r\n                                Variable = <code>$userid</code>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li style={{ marginTop: 10 }}>\r\n                        You can get default flow config:\r\n                        <ul style={{ marginTop: 10 }}>\r\n                            <li>\r\n                                <code>$flow.sessionId</code>\r\n                            </li>\r\n                            <li>\r\n                                <code>$flow.chatId</code>\r\n                            </li>\r\n                            <li>\r\n                                <code>$flow.chatflowId</code>\r\n                            </li>\r\n                            <li>\r\n                                <code>$flow.input</code>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li style={{ marginTop: 10 }}>\r\n                        You can get custom variables:&nbsp;<code>{`$vars.<variable-name>`}</code>\r\n                    </li>\r\n                    <li style={{ marginTop: 10 }}>Must return a string value at the end of function</li>\r\n                </ul>\r\n            </DialogContent>\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nHowToUseFunctionDialog.propTypes = {\r\n    show: PropTypes.bool,\r\n    onCancel: PropTypes.func\r\n}\r\n\r\nexport default HowToUseFunctionDialog\r\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,WAAW,CAExC,OAASC,MAAM,CAAEC,aAAa,CAAEC,WAAW,KAAQ,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,sBAAsB,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC9C,KAAM,CAAAG,aAAa,CAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAEvD,KAAM,CAAAC,SAAS,CAAGL,IAAI,cAClBH,KAAA,CAACN,MAAM,EACHe,OAAO,CAAEL,QAAS,CAClBM,IAAI,CAAEP,IAAK,CACXQ,SAAS,MACTC,QAAQ,CAAC,IAAI,CACb,kBAAgB,oBAAoB,CACpC,mBAAiB,0BAA0B,CAAAC,QAAA,eAE3Cf,IAAA,CAACF,WAAW,EAACkB,EAAE,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAACC,EAAE,CAAC,oBAAoB,CAAAH,QAAA,CAAC,qBAE/D,CAAa,CAAC,cACdf,IAAA,CAACH,aAAa,EAAAkB,QAAA,cACVb,KAAA,OAAAa,QAAA,eACIf,IAAA,OAAImB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,CAAC,+CAA6C,CAAI,CAAC,cAChFb,KAAA,OAAIiB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,EAAC,+EAE1B,cAAAb,KAAA,OAAIiB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,eACzBb,KAAA,OAAAa,QAAA,EAAI,aACW,cAAAf,IAAA,SAAAe,QAAA,CAAM,QAAM,CAAM,CAAC,EAC9B,CAAC,cACLb,KAAA,OAAAa,QAAA,EAAI,aACW,cAAAf,IAAA,SAAAe,QAAA,CAAM,SAAO,CAAM,CAAC,EAC/B,CAAC,EACL,CAAC,EACL,CAAC,cACLb,KAAA,OAAIiB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,EAAC,kCAE1B,cAAAb,KAAA,OAAIiB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,eACzBf,IAAA,OAAAe,QAAA,cACIf,IAAA,SAAAe,QAAA,CAAM,iBAAe,CAAM,CAAC,CAC5B,CAAC,cACLf,IAAA,OAAAe,QAAA,cACIf,IAAA,SAAAe,QAAA,CAAM,cAAY,CAAM,CAAC,CACzB,CAAC,cACLf,IAAA,OAAAe,QAAA,cACIf,IAAA,SAAAe,QAAA,CAAM,kBAAgB,CAAM,CAAC,CAC7B,CAAC,cACLf,IAAA,OAAAe,QAAA,cACIf,IAAA,SAAAe,QAAA,CAAM,aAAW,CAAM,CAAC,CACxB,CAAC,EACL,CAAC,EACL,CAAC,cACLb,KAAA,OAAIiB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,EAAC,mCACS,cAAAf,IAAA,SAAAe,QAAA,yBAAqC,CAAC,EACzE,CAAC,cACLf,IAAA,OAAImB,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,CAAC,mDAAiD,CAAI,CAAC,EACpF,CAAC,CACM,CAAC,EACZ,CAAC,CACT,IAAI,CAER,mBAAOpB,YAAY,CAACe,SAAS,CAAEH,aAAa,CAAC,CACjD,CAAC,CAOD,cAAe,CAAAJ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}