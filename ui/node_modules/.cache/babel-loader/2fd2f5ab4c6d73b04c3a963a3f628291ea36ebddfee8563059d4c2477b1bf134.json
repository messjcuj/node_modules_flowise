{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import{FormControl,OutlinedInput,InputBase,Popover}from'@mui/material';import SelectVariable from'ui-component/json/SelectVariable';import{getAvailableNodesForVariable}from'utils/genericHelper';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const Input=_ref=>{var _inputParam$rows,_inputParam$step,_inputParam$rows2,_inputParam$step2;let{inputParam,value,nodes,edges,nodeId,onChange,disabled=false}=_ref;const[myValue,setMyValue]=useState(value!==null&&value!==void 0?value:'');const[anchorEl,setAnchorEl]=useState(null);const[availableNodesForVariable,setAvailableNodesForVariable]=useState([]);const ref=useRef(null);const openPopOver=Boolean(anchorEl);const handleClosePopOver=()=>{setAnchorEl(null);};const setNewVal=val=>{const newVal=myValue+val.substring(2);onChange(newVal);setMyValue(newVal);};const getInputType=type=>{switch(type){case'string':return'text';case'password':return'password';case'number':return'number';default:return'text';}};useEffect(()=>{if(!disabled&&nodes&&edges&&nodeId&&inputParam){const nodesForVariable=inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable?getAvailableNodesForVariable(nodes,edges,nodeId,inputParam.id):[];setAvailableNodesForVariable(nodesForVariable);}},[disabled,inputParam,nodes,edges,nodeId]);useEffect(()=>{if(typeof myValue==='string'&&myValue&&myValue.endsWith('{{')){setAnchorEl(ref.current);}},[myValue]);return/*#__PURE__*/_jsxs(_Fragment,{children:[inputParam.name==='note'?/*#__PURE__*/_jsx(FormControl,{sx:{width:'100%',height:'auto'},size:\"small\",children:/*#__PURE__*/_jsx(InputBase,{id:nodeId,size:\"small\",disabled:disabled,type:getInputType(inputParam.type),placeholder:inputParam.placeholder,multiline:!!inputParam.rows,minRows:(_inputParam$rows=inputParam.rows)!==null&&_inputParam$rows!==void 0?_inputParam$rows:1,value:myValue,name:inputParam.name,onChange:e=>{setMyValue(e.target.value);onChange(e.target.value);},inputProps:{step:(_inputParam$step=inputParam.step)!==null&&_inputParam$step!==void 0?_inputParam$step:1,style:{border:'none',background:'none',color:'#212121'}},sx:{border:'none',background:'none',padding:'10px 14px',textarea:{'&::placeholder':{color:'#616161'}}}})}):/*#__PURE__*/_jsx(FormControl,{sx:{mt:1,width:'100%'},size:\"small\",children:/*#__PURE__*/_jsx(OutlinedInput,{id:inputParam.name,size:\"small\",disabled:disabled,type:getInputType(inputParam.type),placeholder:inputParam.placeholder,multiline:!!inputParam.rows,rows:(_inputParam$rows2=inputParam.rows)!==null&&_inputParam$rows2!==void 0?_inputParam$rows2:1,value:myValue,name:inputParam.name,onChange:e=>{setMyValue(e.target.value);onChange(e.target.value);},inputProps:{step:(_inputParam$step2=inputParam.step)!==null&&_inputParam$step2!==void 0?_inputParam$step2:1,style:{height:inputParam.rows?'90px':'inherit'}}})}),/*#__PURE__*/_jsx(\"div\",{ref:ref}),(inputParam===null||inputParam===void 0?void 0:inputParam.acceptVariable)&&/*#__PURE__*/_jsx(Popover,{open:openPopOver,anchorEl:anchorEl,onClose:handleClosePopOver,anchorOrigin:{vertical:'bottom',horizontal:'left'},transformOrigin:{vertical:'top',horizontal:'left'},children:/*#__PURE__*/_jsx(SelectVariable,{disabled:disabled,availableNodesForVariable:availableNodesForVariable,onSelectAndReturnVal:val=>{setNewVal(val);handleClosePopOver();}})})]});};","map":{"version":3,"names":["useState","useEffect","useRef","FormControl","OutlinedInput","InputBase","Popover","SelectVariable","getAvailableNodesForVariable","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Input","_ref","_inputParam$rows","_inputParam$step","_inputParam$rows2","_inputParam$step2","inputParam","value","nodes","edges","nodeId","onChange","disabled","myValue","setMyValue","anchorEl","setAnchorEl","availableNodesForVariable","setAvailableNodesForVariable","ref","openPopOver","Boolean","handleClosePopOver","setNewVal","val","newVal","substring","getInputType","type","nodesForVariable","acceptVariable","id","endsWith","current","children","name","sx","width","height","size","placeholder","multiline","rows","minRows","e","target","inputProps","step","style","border","background","color","padding","textarea","mt","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","onSelectAndReturnVal"],"sources":["D:/Flowise/packages/ui/src/ui-component/input/Input.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FormControl, OutlinedInput, InputBase, Popover } from '@mui/material'\r\nimport SelectVariable from 'ui-component/json/SelectVariable'\r\nimport { getAvailableNodesForVariable } from 'utils/genericHelper'\r\n\r\nexport const Input = ({ inputParam, value, nodes, edges, nodeId, onChange, disabled = false }) => {\r\n    const [myValue, setMyValue] = useState(value ?? '')\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [availableNodesForVariable, setAvailableNodesForVariable] = useState([])\r\n    const ref = useRef(null)\r\n\r\n    const openPopOver = Boolean(anchorEl)\r\n\r\n    const handleClosePopOver = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const setNewVal = (val) => {\r\n        const newVal = myValue + val.substring(2)\r\n        onChange(newVal)\r\n        setMyValue(newVal)\r\n    }\r\n\r\n    const getInputType = (type) => {\r\n        switch (type) {\r\n            case 'string':\r\n                return 'text'\r\n            case 'password':\r\n                return 'password'\r\n            case 'number':\r\n                return 'number'\r\n            default:\r\n                return 'text'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!disabled && nodes && edges && nodeId && inputParam) {\r\n            const nodesForVariable = inputParam?.acceptVariable ? getAvailableNodesForVariable(nodes, edges, nodeId, inputParam.id) : []\r\n            setAvailableNodesForVariable(nodesForVariable)\r\n        }\r\n    }, [disabled, inputParam, nodes, edges, nodeId])\r\n\r\n    useEffect(() => {\r\n        if (typeof myValue === 'string' && myValue && myValue.endsWith('{{')) {\r\n            setAnchorEl(ref.current)\r\n        }\r\n    }, [myValue])\r\n\r\n    return (\r\n        <>\r\n            {inputParam.name === 'note' ? (\r\n                <FormControl sx={{ width: '100%', height: 'auto' }} size='small'>\r\n                    <InputBase\r\n                        id={nodeId}\r\n                        size='small'\r\n                        disabled={disabled}\r\n                        type={getInputType(inputParam.type)}\r\n                        placeholder={inputParam.placeholder}\r\n                        multiline={!!inputParam.rows}\r\n                        minRows={inputParam.rows ?? 1}\r\n                        value={myValue}\r\n                        name={inputParam.name}\r\n                        onChange={(e) => {\r\n                            setMyValue(e.target.value)\r\n                            onChange(e.target.value)\r\n                        }}\r\n                        inputProps={{\r\n                            step: inputParam.step ?? 1,\r\n                            style: {\r\n                                border: 'none',\r\n                                background: 'none',\r\n                                color: '#212121'\r\n                            }\r\n                        }}\r\n                        sx={{\r\n                            border: 'none',\r\n                            background: 'none',\r\n                            padding: '10px 14px',\r\n                            textarea: {\r\n                                '&::placeholder': {\r\n                                    color: '#616161'\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n            ) : (\r\n                <FormControl sx={{ mt: 1, width: '100%' }} size='small'>\r\n                    <OutlinedInput\r\n                        id={inputParam.name}\r\n                        size='small'\r\n                        disabled={disabled}\r\n                        type={getInputType(inputParam.type)}\r\n                        placeholder={inputParam.placeholder}\r\n                        multiline={!!inputParam.rows}\r\n                        rows={inputParam.rows ?? 1}\r\n                        value={myValue}\r\n                        name={inputParam.name}\r\n                        onChange={(e) => {\r\n                            setMyValue(e.target.value)\r\n                            onChange(e.target.value)\r\n                        }}\r\n                        inputProps={{\r\n                            step: inputParam.step ?? 1,\r\n                            style: {\r\n                                height: inputParam.rows ? '90px' : 'inherit'\r\n                            }\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n            )}\r\n            <div ref={ref}></div>\r\n            {inputParam?.acceptVariable && (\r\n                <Popover\r\n                    open={openPopOver}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClosePopOver}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                >\r\n                    <SelectVariable\r\n                        disabled={disabled}\r\n                        availableNodesForVariable={availableNodesForVariable}\r\n                        onSelectAndReturnVal={(val) => {\r\n                            setNewVal(val)\r\n                            handleClosePopOver()\r\n                        }}\r\n                    />\r\n                </Popover>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    inputParam: PropTypes.object,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    onChange: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    nodes: PropTypes.array,\r\n    edges: PropTypes.array,\r\n    nodeId: PropTypes.string\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}