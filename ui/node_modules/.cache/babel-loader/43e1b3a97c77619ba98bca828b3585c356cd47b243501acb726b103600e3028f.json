{"ast":null,"code":"import{useContext,useState}from'react';import{useSelector}from'react-redux';// material-ui\nimport{useTheme}from'@mui/material/styles';// project imports\nimport NodeCardWrapper from'../../ui-component/cards/NodeCardWrapper';import NodeTooltip from'../../ui-component/tooltip/NodeTooltip';import{IconButton,Box}from'@mui/material';import{IconCopy,IconTrash}from'@tabler/icons';import{Input}from'ui-component/input/Input';// const\nimport{flowContext}from'../../store/context/ReactFlowContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const StickyNote=_ref=>{var _theme$customization,_theme$colors,_theme$customization2,_theme$colors2,_ref2,_data$inputs$inputPar;let{data}=_ref;const theme=useTheme();const canvas=useSelector(state=>state.canvas);const{deleteNode,duplicateNode}=useContext(flowContext);const[inputParam]=data.inputParams;const[open,setOpen]=useState(false);const handleClose=()=>{setOpen(false);};const handleOpen=()=>{setOpen(true);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(NodeCardWrapper,{content:false,sx:{padding:0,borderColor:data.selected?theme.palette.primary.main:theme.palette.text.secondary,backgroundColor:data.selected?'#FFDC00':'#FFE770'},border:false,children:/*#__PURE__*/_jsx(NodeTooltip,{open:!canvas.canvasDialogShow&&open,onClose:handleClose,onOpen:handleOpen,disableFocusListener:true,title:/*#__PURE__*/_jsxs(\"div\",{style:{background:'transparent',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(IconButton,{title:\"Duplicate\",onClick:()=>{duplicateNode(data.id);},sx:{height:'35px',width:'35px','&:hover':{color:theme===null||theme===void 0?void 0:theme.palette.primary.main}},color:theme!==null&&theme!==void 0&&(_theme$customization=theme.customization)!==null&&_theme$customization!==void 0&&_theme$customization.isDarkMode?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.paper:'inherit',children:/*#__PURE__*/_jsx(IconCopy,{})}),/*#__PURE__*/_jsx(IconButton,{title:\"Delete\",onClick:()=>{deleteNode(data.id);},sx:{height:'35px',width:'35px','&:hover':{color:'red'}},color:theme!==null&&theme!==void 0&&(_theme$customization2=theme.customization)!==null&&_theme$customization2!==void 0&&_theme$customization2.isDarkMode?(_theme$colors2=theme.colors)===null||_theme$colors2===void 0?void 0:_theme$colors2.paper:'inherit',children:/*#__PURE__*/_jsx(IconTrash,{})})]}),placement:\"right-start\",children:/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Input,{inputParam:inputParam,onChange:newValue=>data.inputs[inputParam.name]=newValue,value:(_ref2=(_data$inputs$inputPar=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar!==void 0?_data$inputs$inputPar:inputParam.default)!==null&&_ref2!==void 0?_ref2:'',nodes:inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable&&reactFlowInstance?reactFlowInstance.getNodes():[],edges:inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable&&reactFlowInstance?reactFlowInstance.getEdges():[],nodeId:data.id},data.id)})})})});};export default StickyNote;","map":{"version":3,"names":["useContext","useState","useSelector","useTheme","NodeCardWrapper","NodeTooltip","IconButton","Box","IconCopy","IconTrash","Input","flowContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StickyNote","_ref","_theme$customization","_theme$colors","_theme$customization2","_theme$colors2","_ref2","_data$inputs$inputPar","data","theme","canvas","state","deleteNode","duplicateNode","inputParam","inputParams","open","setOpen","handleClose","handleOpen","children","content","sx","padding","borderColor","selected","palette","primary","main","text","secondary","backgroundColor","border","canvasDialogShow","onClose","onOpen","disableFocusListener","title","style","background","display","flexDirection","onClick","id","height","width","color","customization","isDarkMode","colors","paper","placement","onChange","newValue","inputs","name","value","default","nodes","acceptVariable","reactFlowInstance","getNodes","edges","getEdges","nodeId"],"sources":["D:/Flowise/packages/ui/src/views/canvas/StickyNote.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useContext, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\n// project imports\r\nimport NodeCardWrapper from '../../ui-component/cards/NodeCardWrapper'\r\nimport NodeTooltip from '../../ui-component/tooltip/NodeTooltip'\r\nimport { IconButton, Box } from '@mui/material'\r\nimport { IconCopy, IconTrash } from '@tabler/icons'\r\nimport { Input } from 'ui-component/input/Input'\r\n\r\n// const\r\nimport { flowContext } from '../../store/context/ReactFlowContext'\r\n\r\nconst StickyNote = ({ data }) => {\r\n    const theme = useTheme()\r\n    const canvas = useSelector((state) => state.canvas)\r\n    const { deleteNode, duplicateNode } = useContext(flowContext)\r\n    const [inputParam] = data.inputParams\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NodeCardWrapper\r\n                content={false}\r\n                sx={{\r\n                    padding: 0,\r\n                    borderColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary,\r\n                    backgroundColor: data.selected ? '#FFDC00' : '#FFE770'\r\n                }}\r\n                border={false}\r\n            >\r\n                <NodeTooltip\r\n                    open={!canvas.canvasDialogShow && open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    disableFocusListener={true}\r\n                    title={\r\n                        <div\r\n                            style={{\r\n                                background: 'transparent',\r\n                                display: 'flex',\r\n                                flexDirection: 'column'\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                title='Duplicate'\r\n                                onClick={() => {\r\n                                    duplicateNode(data.id)\r\n                                }}\r\n                                sx={{ height: '35px', width: '35px', '&:hover': { color: theme?.palette.primary.main } }}\r\n                                color={theme?.customization?.isDarkMode ? theme.colors?.paper : 'inherit'}\r\n                            >\r\n                                <IconCopy />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                title='Delete'\r\n                                onClick={() => {\r\n                                    deleteNode(data.id)\r\n                                }}\r\n                                sx={{ height: '35px', width: '35px', '&:hover': { color: 'red' } }}\r\n                                color={theme?.customization?.isDarkMode ? theme.colors?.paper : 'inherit'}\r\n                            >\r\n                                <IconTrash />\r\n                            </IconButton>\r\n                        </div>\r\n                    }\r\n                    placement='right-start'\r\n                >\r\n                    <Box>\r\n                        <Input\r\n                            key={data.id}\r\n                            inputParam={inputParam}\r\n                            onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\r\n                            value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\r\n                            nodes={inputParam?.acceptVariable && reactFlowInstance ? reactFlowInstance.getNodes() : []}\r\n                            edges={inputParam?.acceptVariable && reactFlowInstance ? reactFlowInstance.getEdges() : []}\r\n                            nodeId={data.id}\r\n                        />\r\n                    </Box>\r\n                </NodeTooltip>\r\n            </NodeCardWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nStickyNote.propTypes = {\r\n    data: PropTypes.object\r\n}\r\n\r\nexport default StickyNote\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}