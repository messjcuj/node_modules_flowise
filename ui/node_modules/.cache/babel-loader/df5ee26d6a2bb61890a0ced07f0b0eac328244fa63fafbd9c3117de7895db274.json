{"ast":null,"code":"import{createPortal}from'react-dom';import{Dialog,DialogContent,DialogTitle}from'@mui/material';import{CodeEditor}from'ui-component/editor/CodeEditor';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const overrideConfig=\"{\\n    overrideConfig: {\\n        vars: {\\n            var1: 'abc'\\n        }\\n    }\\n}\";const HowToUseVariablesDialog=_ref=>{let{show,onCancel}=_ref;const portalElement=document.getElementById('portal');const component=show?/*#__PURE__*/_jsxs(Dialog,{onClose:onCancel,open:show,fullWidth:true,maxWidth:\"sm\",\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:\"How To Use Variables\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:'10px'},children:\"Variables can be used in Custom Tool Function with the $ prefix.\"}),/*#__PURE__*/_jsx(CodeEditor,{disabled:true,value:\"$vars.<variable-name>\",height:'50px',theme:'dark',lang:'js',basicSetup:{highlightActiveLine:false,highlightActiveLineGutter:false}}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:'10px'},children:\"If variable type is Static, the value will be retrieved as it is. If variable type is Runtime, the value will be retrieved from .env file.\"}),/*#__PURE__*/_jsxs(\"p\",{style:{marginBottom:'10px'},children:[\"You can also override variable values in API overrideConfig using \",/*#__PURE__*/_jsx(\"b\",{children:\"vars\"}),\":\"]}),/*#__PURE__*/_jsx(CodeEditor,{disabled:true,value:overrideConfig,height:'170px',theme:'dark',lang:'js',basicSetup:{highlightActiveLine:false,highlightActiveLineGutter:false}}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Read more from\",' ',/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noreferrer\",href:\"https://docs.flowiseai.com/using-flowise/variables\",children:\"docs\"})]})]})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default HowToUseVariablesDialog;","map":{"version":3,"names":["createPortal","Dialog","DialogContent","DialogTitle","CodeEditor","jsx","_jsx","jsxs","_jsxs","overrideConfig","HowToUseVariablesDialog","_ref","show","onCancel","portalElement","document","getElementById","component","onClose","open","fullWidth","maxWidth","children","sx","fontSize","id","style","marginBottom","disabled","value","height","theme","lang","basicSetup","highlightActiveLine","highlightActiveLineGutter","target","rel","href"],"sources":["D:/Flowise/packages/ui/src/views/variables/HowToUseVariablesDialog.js"],"sourcesContent":["import { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Dialog, DialogContent, DialogTitle } from '@mui/material'\r\nimport { CodeEditor } from 'ui-component/editor/CodeEditor'\r\n\r\nconst overrideConfig = `{\r\n    overrideConfig: {\r\n        vars: {\r\n            var1: 'abc'\r\n        }\r\n    }\r\n}`\r\n\r\nconst HowToUseVariablesDialog = ({ show, onCancel }) => {\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const component = show ? (\r\n        <Dialog\r\n            onClose={onCancel}\r\n            open={show}\r\n            fullWidth\r\n            maxWidth='sm'\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                How To Use Variables\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <p style={{ marginBottom: '10px' }}>Variables can be used in Custom Tool Function with the $ prefix.</p>\r\n                <CodeEditor\r\n                    disabled={true}\r\n                    value={`$vars.<variable-name>`}\r\n                    height={'50px'}\r\n                    theme={'dark'}\r\n                    lang={'js'}\r\n                    basicSetup={{ highlightActiveLine: false, highlightActiveLineGutter: false }}\r\n                />\r\n                <p style={{ marginBottom: '10px' }}>\r\n                    If variable type is Static, the value will be retrieved as it is. If variable type is Runtime, the value will be\r\n                    retrieved from .env file.\r\n                </p>\r\n                <p style={{ marginBottom: '10px' }}>\r\n                    You can also override variable values in API overrideConfig using <b>vars</b>:\r\n                </p>\r\n                <CodeEditor\r\n                    disabled={true}\r\n                    value={overrideConfig}\r\n                    height={'170px'}\r\n                    theme={'dark'}\r\n                    lang={'js'}\r\n                    basicSetup={{ highlightActiveLine: false, highlightActiveLineGutter: false }}\r\n                />\r\n                <p>\r\n                    Read more from{' '}\r\n                    <a target='_blank' rel='noreferrer' href='https://docs.flowiseai.com/using-flowise/variables'>\r\n                        docs\r\n                    </a>\r\n                </p>\r\n            </DialogContent>\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nHowToUseVariablesDialog.propTypes = {\r\n    show: PropTypes.bool,\r\n    onCancel: PropTypes.func\r\n}\r\n\r\nexport default HowToUseVariablesDialog\r\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,WAAW,CAExC,OAASC,MAAM,CAAEC,aAAa,CAAEC,WAAW,KAAQ,eAAe,CAClE,OAASC,UAAU,KAAQ,gCAAgC,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,cAAc,0FAMlB,CAEF,KAAM,CAAAC,uBAAuB,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC/C,KAAM,CAAAG,aAAa,CAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAEvD,KAAM,CAAAC,SAAS,CAAGL,IAAI,cAClBJ,KAAA,CAACP,MAAM,EACHiB,OAAO,CAAEL,QAAS,CAClBM,IAAI,CAAEP,IAAK,CACXQ,SAAS,MACTC,QAAQ,CAAC,IAAI,CACb,kBAAgB,oBAAoB,CACpC,mBAAiB,0BAA0B,CAAAC,QAAA,eAE3ChB,IAAA,CAACH,WAAW,EAACoB,EAAE,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAACC,EAAE,CAAC,oBAAoB,CAAAH,QAAA,CAAC,sBAE/D,CAAa,CAAC,cACdd,KAAA,CAACN,aAAa,EAAAoB,QAAA,eACVhB,IAAA,MAAGoB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,CAAC,kEAAgE,CAAG,CAAC,cACxGhB,IAAA,CAACF,UAAU,EACPwB,QAAQ,CAAE,IAAK,CACfC,KAAK,wBAA0B,CAC/BC,MAAM,CAAE,MAAO,CACfC,KAAK,CAAE,MAAO,CACdC,IAAI,CAAE,IAAK,CACXC,UAAU,CAAE,CAAEC,mBAAmB,CAAE,KAAK,CAAEC,yBAAyB,CAAE,KAAM,CAAE,CAChF,CAAC,cACF7B,IAAA,MAAGoB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,CAAC,4IAGpC,CAAG,CAAC,cACJd,KAAA,MAAGkB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,EAAC,oEACkC,cAAAhB,IAAA,MAAAgB,QAAA,CAAG,MAAI,CAAG,CAAC,IACjF,EAAG,CAAC,cACJhB,IAAA,CAACF,UAAU,EACPwB,QAAQ,CAAE,IAAK,CACfC,KAAK,CAAEpB,cAAe,CACtBqB,MAAM,CAAE,OAAQ,CAChBC,KAAK,CAAE,MAAO,CACdC,IAAI,CAAE,IAAK,CACXC,UAAU,CAAE,CAAEC,mBAAmB,CAAE,KAAK,CAAEC,yBAAyB,CAAE,KAAM,CAAE,CAChF,CAAC,cACF3B,KAAA,MAAAc,QAAA,EAAG,gBACe,CAAC,GAAG,cAClBhB,IAAA,MAAG8B,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,YAAY,CAACC,IAAI,CAAC,oDAAoD,CAAAhB,QAAA,CAAC,MAE9F,CAAG,CAAC,EACL,CAAC,EACO,CAAC,EACZ,CAAC,CACT,IAAI,CAER,mBAAOtB,YAAY,CAACiB,SAAS,CAAEH,aAAa,CAAC,CACjD,CAAC,CAOD,cAAe,CAAAJ,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}